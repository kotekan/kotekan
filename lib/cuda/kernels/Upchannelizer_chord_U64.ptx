// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3410[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<238>;
	.reg .b16 	%rs<1227>;
	.reg .b32 	%r<8006>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<158>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r167, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r174, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r174, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd37, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r168, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r175, %r4, 9;
	or.b32  	%r176, %r3, %r1;
	or.b32  	%r177, %r176, %r175;
	mul.wide.u32 	%rd43, %r177, 4;
	add.s64 	%rd4, %rd37, %rd43;
	mov.u32 	%r178, 1;
	st.global.u32 	[%rd4], %r178;
	setp.gt.u32 	%p2, %r168, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r169, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r169, %r168;
	setp.gt.s32 	%p4, %r169, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r170, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r179, %r169, %r168;
	and.b32  	%r180, %r179, 255;
	setp.ne.s32 	%p6, %r180, 0;
	setp.gt.u32 	%p7, %r170, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r171, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r171, %r170;
	setp.gt.s32 	%p10, %r171, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	not.b32 	%r181, %r170;
	add.s32 	%r182, %r181, %r171;
	and.b32  	%r183, %r182, 3;
	setp.eq.s32 	%p12, %r183, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r172, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r172, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r173, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r172, %r173;
	setp.lt.s32 	%p15, %r173, 49;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r88, %r1, 2, 1;
	shr.u32 	%r89, %r1, 4;
	shl.b32 	%r192, %r89, 1;
	shl.b32 	%r193, %r88, 2;
	shl.b32 	%r194, %r1, 3;
	and.b32  	%r195, %r194, 24;
	or.b32  	%r196, %r193, %r195;
	or.b32  	%r197, %r192, %r196;
	bfe.u32 	%r198, %r1, 3, 1;
	or.b32  	%r91, %r198, %r197;
	or.b32  	%r92, %r91, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r91;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p22, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L604
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_13:                             // %L607
	cvt.rn.f32.s32 	%f181, %r92;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L624
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_15:                             // %L627
	or.b32  	%r216, %r91, 64;
	or.b32  	%r6, %r91, 96;
	cvt.rn.f32.s32 	%f216, %r216;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L706
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_17:                             // %L709
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L726
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_19:                             // %L729
	or.b32  	%r234, %r91, 128;
	or.b32  	%r8, %r91, 160;
	cvt.rn.f32.s32 	%f285, %r234;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L808
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_21:                             // %L811
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L828
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_23:                             // %L831
	or.b32  	%r252, %r91, 192;
	or.b32  	%r10, %r91, 224;
	cvt.rn.f32.s32 	%f354, %r252;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L910
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_25:                             // %L913
	shr.u32 	%r87, %r1, 1;
	shr.u32 	%r90, %r1, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L930
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_27:                             // %L933
	and.b32  	%r296, %r1, 3;
	and.b32  	%r297, %r90, 2;
	and.b32  	%r298, %r87, 4;
	or.b32  	%r299, %r88, %r297;
	or.b32  	%r14, %r299, %r298;
	mul.lo.s32 	%r300, %r296, %r14;
	shl.b32 	%r301, %r300, 1;
	neg.s32 	%r302, %r301;
	cvt.rn.f32.s32 	%f35, %r302;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p79, %f830, 0f40000000;
	setp.gtu.f32 	%p236, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p79 bra 	$L__BB0_97;
// %bb.28:
	@%p236 bra 	$L__BB0_93;
	bra.uni 	$L__BB0_29;
$L__BB0_93:
	mov.b32 	%r94, %f830;
	and.b32  	%r303, %r94, 8388607;
	or.b32  	%r7986, %r303, 1065353216;
	mov.b32 	%f821, %r7986;
	add.s32 	%r304, %r94, -1073741824;
	and.b32  	%r7987, %r304, -8388608;
	setp.eq.s32 	%p86, %r7987, 0;
	@%p86 bra 	$L__BB0_96;
// %bb.94:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_95:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r305, %r7987, 192937984;
	add.s32 	%r306, %r7986, %r305;
	mov.b32 	%f501, %r306;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r7987, %r7987, %r305;
	mov.b32 	%r7986, %f821;
	setp.ne.s32 	%p87, %r7987, 0;
	setp.ne.s32 	%p88, %r7986, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_95;
$L__BB0_96:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p90, %r94, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_97;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r93, %f89;
	setp.lt.u32 	%p81, %r93, 1073741824;
	@%p81 bra 	$L__BB0_92;
// %bb.30:
	setp.lt.u32 	%p82, %r93, -2147483647;
	@%p82 bra 	$L__BB0_90;
// %bb.31:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p85, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p85;
	bra.uni 	$L__BB0_92;
$L__BB0_90:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p83, %f89, 0f40800000;
	@%p83 bra 	$L__BB0_92;
// %bb.91:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p84, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p84;
$L__BB0_92:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_97:                             // %__internal_fmodf_kernel.exit.i928
	shl.b32 	%r83, %r1, 1;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p91, %f510, 0f7F800000;
	mov.b32 	%r307, %f36;
	and.b32  	%r101, %r307, -2147483648;
	@%p91 bra 	$L__BB0_99;
// %bb.98:
	mov.b32 	%r308, %f822;
	or.b32  	%r309, %r101, %r308;
	mov.b32 	%f822, %r309;
$L__BB0_99:                             // %__nv_fmodf.exit929
	and.b32  	%r318, %r83, 6;
	mov.u32 	%r319, -8;
	sub.s32 	%r320, %r319, %r318;
	mul.lo.s32 	%r321, %r14, %r320;
	cvt.rn.f32.s32 	%f105, %r321;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p99, %f818, 0f40000000;
	setp.gtu.f32 	%p237, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	@%p237 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r16, %f818;
	and.b32  	%r322, %r16, 8388607;
	or.b32  	%r7967, %r322, 1065353216;
	mov.b32 	%f809, %r7967;
	add.s32 	%r323, %r16, -1073741824;
	and.b32  	%r7968, %r323, -8388608;
	setp.eq.s32 	%p106, %r7968, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r324, %r7968, 192937984;
	add.s32 	%r325, %r7967, %r324;
	mov.b32 	%f552, %r325;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7968, %r7968, %r324;
	mov.b32 	%r7967, %f809;
	setp.ne.s32 	%p107, %r7968, 0;
	setp.ne.s32 	%p108, %r7967, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p101, %r15, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r15, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p105, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p103, %f39, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p104, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p111, %f561, 0f7F800000;
	mov.b32 	%r326, %f106;
	and.b32  	%r23, %r326, -2147483648;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r327, %f810;
	or.b32  	%r328, %r23, %r327;
	mov.b32 	%f810, %r328;
$L__BB0_45:                             // %__nv_fmodf.exit
	div.approx.f32 	%f53, %f35, %f177;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p119, %f826, 0f40000000;
	@%p119 bra 	$L__BB0_107;
// %bb.46:
	setp.gtu.f32 	%p120, %f826, 0f4B800000;
	@%p120 bra 	$L__BB0_103;
	bra.uni 	$L__BB0_47;
$L__BB0_103:
	mov.b32 	%r103, %f826;
	and.b32  	%r349, %r103, 8388607;
	or.b32  	%r7988, %r349, 1065353216;
	mov.b32 	%f825, %r7988;
	add.s32 	%r350, %r103, -1073741824;
	and.b32  	%r7989, %r350, -8388608;
	setp.eq.s32 	%p126, %r7989, 0;
	@%p126 bra 	$L__BB0_106;
// %bb.104:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_105:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r351, %r7989, 192937984;
	add.s32 	%r352, %r7988, %r351;
	mov.b32 	%f605, %r352;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r7989, %r7989, %r351;
	mov.b32 	%r7988, %f825;
	setp.ne.s32 	%p127, %r7989, 0;
	setp.ne.s32 	%p128, %r7988, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_105;
$L__BB0_106:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p130, %r103, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_107;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r102, %f109;
	setp.lt.u32 	%p121, %r102, 1073741824;
	@%p121 bra 	$L__BB0_102;
// %bb.48:
	setp.lt.u32 	%p122, %r102, -2147483647;
	@%p122 bra 	$L__BB0_100;
// %bb.49:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p125;
	bra.uni 	$L__BB0_102;
$L__BB0_100:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_102;
// %bb.101:                             // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p124;
$L__BB0_102:                            // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_107:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p131, %f614, 0f7F800000;
	@%p131 bra 	$L__BB0_109;
// %bb.108:
	mov.b32 	%r353, %f53;
	and.b32  	%r354, %r353, -2147483648;
	mov.b32 	%r355, %f826;
	or.b32  	%r356, %r354, %r355;
	mov.b32 	%f826, %r356;
$L__BB0_109:                            // %__nv_fmodf.exit960
	div.approx.f32 	%f125, %f105, %f177;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p139, %f814, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f814, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r29, %f814;
	and.b32  	%r365, %r29, 8388607;
	or.b32  	%r7969, %r365, 1065353216;
	mov.b32 	%f813, %r7969;
	add.s32 	%r366, %r29, -1073741824;
	and.b32  	%r7970, %r366, -8388608;
	setp.eq.s32 	%p146, %r7970, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r367, %r7970, 192937984;
	add.s32 	%r368, %r7969, %r367;
	mov.b32 	%f656, %r368;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7970, %r7970, %r367;
	mov.b32 	%r7969, %f813;
	setp.ne.s32 	%p147, %r7970, 0;
	setp.ne.s32 	%p148, %r7969, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p150, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p141, %r28, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r28, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p145, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p143, %f56, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p144, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p151, %f665, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r369, %f125;
	and.b32  	%r370, %r369, -2147483648;
	mov.b32 	%r371, %f814;
	or.b32  	%r372, %r370, %r371;
	mov.b32 	%f814, %r372;
$L__BB0_63:                             // %__nv_fmodf.exit867
	@%p79 bra 	$L__BB0_117;
// %bb.64:
	@%p236 bra 	$L__BB0_113;
	bra.uni 	$L__BB0_65;
$L__BB0_113:
	mov.b32 	%r111, %f830;
	and.b32  	%r387, %r111, 8388607;
	or.b32  	%r7990, %r387, 1065353216;
	mov.b32 	%f829, %r7990;
	add.s32 	%r388, %r111, -1073741824;
	and.b32  	%r7991, %r388, -8388608;
	setp.eq.s32 	%p166, %r7991, 0;
	@%p166 bra 	$L__BB0_116;
// %bb.114:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_115:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r389, %r7991, 192937984;
	add.s32 	%r390, %r7990, %r389;
	mov.b32 	%f708, %r390;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r7991, %r7991, %r389;
	mov.b32 	%r7990, %f829;
	setp.ne.s32 	%p167, %r7991, 0;
	setp.ne.s32 	%p168, %r7990, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_115;
$L__BB0_116:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p170, %r111, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_117;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r110, %f128;
	setp.lt.u32 	%p161, %r110, 1073741824;
	@%p161 bra 	$L__BB0_112;
// %bb.66:
	setp.lt.u32 	%p162, %r110, -2147483647;
	@%p162 bra 	$L__BB0_110;
// %bb.67:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p165;
	bra.uni 	$L__BB0_112;
$L__BB0_110:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_112;
// %bb.111:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p164;
$L__BB0_112:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_117:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p171, %f717, 0f7F800000;
	@%p171 bra 	$L__BB0_119;
// %bb.118:
	mov.b32 	%r391, %f830;
	or.b32  	%r392, %r101, %r391;
	mov.b32 	%f830, %r392;
$L__BB0_119:                            // %__nv_fmodf.exit991
	@%p99 bra 	$L__BB0_79;
// %bb.68:
	@%p237 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r39, %f818;
	and.b32  	%r401, %r39, 8388607;
	or.b32  	%r7971, %r401, 1065353216;
	mov.b32 	%f817, %r7971;
	add.s32 	%r402, %r39, -1073741824;
	and.b32  	%r7972, %r402, -8388608;
	setp.eq.s32 	%p186, %r7972, 0;
	@%p186 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r403, %r7972, 192937984;
	add.s32 	%r404, %r7971, %r403;
	mov.b32 	%f758, %r404;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7972, %r7972, %r403;
	mov.b32 	%r7971, %f817;
	setp.ne.s32 	%p187, %r7972, 0;
	setp.ne.s32 	%p188, %r7971, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p190, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p181, %r38, 1073741824;
	@%p181 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p182, %r38, -2147483647;
	@%p182 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p185, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p185;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p183, %f71, 0f40800000;
	@%p183 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p184, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p184;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p191, %f767, 0f7F800000;
	@%p191 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r405, %f818;
	or.b32  	%r406, %r23, %r405;
	mov.b32 	%f818, %r406;
$L__BB0_81:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p199, %r169, %r168;
	mov.u32 	%r7966, 0;
	@%p199 bra 	$L__BB0_89;
// %bb.82:                              // %L1450.lr.ph
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r276, %r91, 63;
	shr.u16 	%rs6, %rs4, 4;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r286, %r276, 96;
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r277, %r276, 127;
	and.b32  	%r287, %r286, 127;
	or.b16  	%rs8, %rs7, %rs5;
	setp.gt.f32 	%p17, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p23, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p29, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p35, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p41, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p47, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p53, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p59, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r277;
	cvt.rn.f32.s32 	%f457, %r287;
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	shr.u32 	%r185, %r4, 3;
	selp.f32 	%f153, %f152, %f150, %p17;
	selp.f32 	%f187, %f186, %f184, %p23;
	selp.f32 	%f222, %f221, %f219, %p29;
	selp.f32 	%f256, %f255, %f253, %p35;
	selp.f32 	%f291, %f290, %f288, %p41;
	selp.f32 	%f325, %f324, %f322, %p47;
	selp.f32 	%f360, %f359, %f357, %p53;
	selp.f32 	%f394, %f393, %f391, %p59;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	cvt.u16.u32 	%rs20, %r185;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs21, %rs20, 255;
	mov.b32 	%r199, %f154;
	mov.b32 	%r206, %f188;
	mov.b32 	%r217, %f223;
	mov.b32 	%r224, %f257;
	mov.b32 	%r235, %f292;
	mov.b32 	%r242, %f326;
	mov.b32 	%r253, %f361;
	mov.b32 	%r260, %f395;
	mov.b32 	%r278, %f425;
	mov.b32 	%r288, %f459;
	mov.b32 	%r310, %f511;
	mov.b32 	%r341, %f562;
	and.b16  	%rs15, %rs13, 16384;
	mul.lo.s16 	%rs22, %rs21, 171;
	and.b32  	%r200, %r199, -2147483648;
	and.b32  	%r207, %r206, -2147483648;
	and.b32  	%r218, %r217, -2147483648;
	and.b32  	%r225, %r224, -2147483648;
	and.b32  	%r236, %r235, -2147483648;
	and.b32  	%r243, %r242, -2147483648;
	and.b32  	%r254, %r253, -2147483648;
	and.b32  	%r261, %r260, -2147483648;
	and.b32  	%r279, %r278, -2147483648;
	and.b32  	%r289, %r288, -2147483648;
	and.b32  	%r311, %r310, -2147483648;
	and.b32  	%r342, %r341, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	shr.u16 	%rs14, %rs13, 1;
	shl.b16 	%rs16, %rs15, 1;
	shr.u16 	%rs23, %rs22, 13;
	or.b32  	%r201, %r200, 1056964608;
	or.b32  	%r208, %r207, 1056964608;
	or.b32  	%r219, %r218, 1056964608;
	or.b32  	%r226, %r225, 1056964608;
	or.b32  	%r237, %r236, 1056964608;
	or.b32  	%r244, %r243, 1056964608;
	or.b32  	%r255, %r254, 1056964608;
	or.b32  	%r262, %r261, 1056964608;
	or.b32  	%r280, %r279, 1056964608;
	or.b32  	%r290, %r289, 1056964608;
	or.b32  	%r312, %r311, 1056964608;
	or.b32  	%r343, %r342, 1056964608;
	mov.b32 	%r357, %f615;
	mov.b32 	%r379, %f666;
	or.b16  	%rs17, %rs14, %rs16;
	mul.lo.s16 	%rs24, %rs23, 48;
	mov.b32 	%f155, %r201;
	mov.b32 	%f189, %r208;
	mov.b32 	%f224, %r219;
	mov.b32 	%f258, %r226;
	mov.b32 	%f293, %r237;
	mov.b32 	%f327, %r244;
	mov.b32 	%f362, %r255;
	mov.b32 	%f396, %r262;
	mov.b32 	%f426, %r280;
	mov.b32 	%f460, %r290;
	mov.b32 	%f512, %r312;
	mov.b32 	%f563, %r343;
	and.b32  	%r358, %r357, -2147483648;
	and.b32  	%r380, %r379, -2147483648;
	add.f32 	%f718, %f830, %f830;
	shr.u16 	%rs18, %rs17, 13;
	sub.s16 	%rs25, %rs20, %rs24;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r359, %r358, 1056964608;
	or.b32  	%r381, %r380, 1056964608;
	mov.b32 	%r393, %f718;
	and.b16  	%rs19, %rs18, 6;
	and.b16  	%rs26, %rs25, 255;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p18, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p24, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p30, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p36, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p42, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p48, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p54, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p60, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p65, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p72, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p92, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p112, %f566, 0f4B000000;
	mov.b32 	%f616, %r359;
	mov.b32 	%f667, %r381;
	and.b32  	%r394, %r393, -2147483648;
	cvt.u32.u16 	%r184, %rs19;
	mul.wide.u16 	%r81, %rs26, 64;
	selp.f32 	%f159, %f154, %f157, %p18;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p19, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p24;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p25, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p30;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p31, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p36;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p37, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p42;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p43, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p48;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p49, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p54;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p55, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p60;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p61, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p65;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p66, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p72;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p73, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p92;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p93, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p112;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p113, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r395, %r394, 1056964608;
	or.b32  	%r186, %r81, %r184;
	and.b32  	%r82, %r1, 16;
	selp.f32 	%f161, %f160, %f159, %p19;
	selp.f32 	%f195, %f194, %f193, %p25;
	selp.f32 	%f230, %f229, %f228, %p31;
	selp.f32 	%f264, %f263, %f262, %p37;
	selp.f32 	%f299, %f298, %f297, %p43;
	selp.f32 	%f333, %f332, %f331, %p49;
	selp.f32 	%f368, %f367, %f366, %p55;
	selp.f32 	%f402, %f401, %f400, %p61;
	selp.f32 	%f432, %f431, %f430, %p66;
	selp.f32 	%f466, %f465, %f464, %p73;
	selp.f32 	%f518, %f517, %f516, %p93;
	selp.f32 	%f569, %f568, %f567, %p113;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p132, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p153, %f670, 0f4B000000;
	mov.b32 	%f719, %r395;
	shl.b32 	%r79, %r1, 2;
	or.b32  	%r187, %r186, %r82;
	and.b32  	%r84, %r83, 8;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p132;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p133, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p153;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p154, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	or.b32  	%r188, %r187, %r84;
	and.b32  	%r85, %r79, 32;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p133;
	selp.f32 	%f673, %f672, %f671, %p154;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p173, %f722, 0f4B000000;
	or.b32  	%r189, %r188, %r85;
	cvt.rzi.s32.f32 	%r202, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r209, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r220, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r227, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r238, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r245, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r256, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r263, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p173;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p174, %f722, 0f3F000000;
	shr.u32 	%r190, %r189, 1;
	add.s32 	%r203, %r202, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r210, %r209, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r221, %r220, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r228, %r227, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r239, %r238, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r246, %r245, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r257, %r256, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r264, %r263, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r281, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r291, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r313, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r344, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p174;
	cvt.u16.u32 	%rs27, %r190;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r204, %r203, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r211, %r210, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r222, %r221, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r229, %r228, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r240, %r239, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r247, %r246, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r258, %r257, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r265, %r264, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r282, %r281, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r292, %r291, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r314, %r313, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r345, %r344, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	mul.hi.u16 	%rs28, %rs27, -21845;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p20, %r204, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p26, %r211, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p32, %r222, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p38, %r229, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p44, %r240, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p50, %r247, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p56, %r258, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p62, %r265, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p67, %r282, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p74, %r292, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p94, %r314, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p114, %r345, 1;
	cvt.rzi.s32.f32 	%r360, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r382, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	shr.u16 	%rs29, %rs28, 10;
	selp.f32 	%f173, %f171, %f172, %p20;
	and.b32  	%r205, %r203, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p26;
	and.b32  	%r212, %r210, 2;
	selp.f32 	%f242, %f240, %f241, %p32;
	and.b32  	%r223, %r221, 2;
	selp.f32 	%f276, %f274, %f275, %p38;
	and.b32  	%r230, %r228, 2;
	selp.f32 	%f311, %f309, %f310, %p44;
	and.b32  	%r241, %r239, 2;
	selp.f32 	%f345, %f343, %f344, %p50;
	and.b32  	%r248, %r246, 2;
	selp.f32 	%f380, %f378, %f379, %p56;
	and.b32  	%r259, %r257, 2;
	selp.f32 	%f414, %f412, %f413, %p62;
	and.b32  	%r266, %r264, 2;
	selp.f32 	%f444, %f442, %f443, %p67;
	and.b32  	%r283, %r281, 2;
	selp.f32 	%f478, %f476, %f477, %p74;
	and.b32  	%r293, %r291, 2;
	selp.f32 	%f530, %f528, %f529, %p94;
	and.b32  	%r315, %r313, 2;
	selp.f32 	%f581, %f579, %f580, %p114;
	and.b32  	%r346, %r344, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r361, %r360, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r383, %r382, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s16 	%rs30, %rs29, 1536;
	setp.eq.s32 	%p21, %r205, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p27, %r212, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p33, %r223, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p39, %r230, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p45, %r241, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p51, %r248, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p57, %r259, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p63, %r266, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p68, %r283, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r284, %r281, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p75, %r293, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r294, %r291, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p95, %r315, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r316, %r313, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p115, %r346, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r347, %r344, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p134, %r361, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p155, %r383, 1;
	cvt.rzi.s32.f32 	%r396, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	sub.s16 	%rs31, %rs27, %rs30;
	selp.f32 	%f176, %f173, %f175, %p21;
	selp.f32 	%f210, %f207, %f209, %p27;
	selp.f32 	%f245, %f242, %f244, %p33;
	selp.f32 	%f279, %f276, %f278, %p39;
	selp.f32 	%f314, %f311, %f313, %p45;
	selp.f32 	%f348, %f345, %f347, %p51;
	selp.f32 	%f383, %f380, %f382, %p57;
	selp.f32 	%f417, %f414, %f416, %p63;
	selp.f32 	%f445, %f443, %f442, %p67;
	selp.f32 	%f447, %f444, %f446, %p68;
	and.b32  	%r285, %r284, 2;
	setp.eq.f32 	%p70, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p74;
	selp.f32 	%f481, %f478, %f480, %p75;
	and.b32  	%r295, %r294, 2;
	setp.eq.f32 	%p77, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p94;
	selp.f32 	%f533, %f530, %f532, %p95;
	and.b32  	%r317, %r316, 2;
	setp.eq.f32 	%p97, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p114;
	selp.f32 	%f584, %f581, %f583, %p115;
	and.b32  	%r348, %r347, 2;
	setp.eq.f32 	%p117, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p134;
	and.b32  	%r362, %r360, 2;
	selp.f32 	%f685, %f683, %f684, %p155;
	and.b32  	%r384, %r382, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r397, %r396, 1;
	cvt.u32.u16 	%r191, %rs31;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p69, %r285, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p70;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p76, %r295, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p77;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p96, %r317, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p97;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p116, %r348, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p117;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p135, %r362, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r363, %r360, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p156, %r384, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r385, %r382, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p175, %r397, 1;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd44, %r191, 4;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p69;
	setp.gt.f32 	%p71, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p76;
	setp.gt.f32 	%p78, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p96;
	setp.gt.f32 	%p98, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p116;
	setp.gt.f32 	%p118, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p134;
	selp.f32 	%f637, %f634, %f636, %p135;
	and.b32  	%r364, %r363, 2;
	setp.eq.f32 	%p137, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p155;
	selp.f32 	%f688, %f685, %f687, %p156;
	and.b32  	%r386, %r385, 2;
	setp.eq.f32 	%p158, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p175;
	and.b32  	%r398, %r396, 2;
	add.s64 	%rd45, %rd1, %rd44;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p71;
	selp.f32 	%f489, %f488, %f483, %p78;
	selp.f32 	%f104, %f540, %f536, %p98;
	selp.f32 	%f593, %f592, %f587, %p118;
	setp.eq.s32 	%p136, %r364, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p137;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p157, %r386, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p158;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p176, %r398, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r399, %r396, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r78, %r1, 2;
	and.b32  	%r80, %r79, 4;
	ld.global.u32 	%r86, [%rd45];
	mov.b32 	%r215, %f215;
	mov.b32 	%r214, %f3;
	mov.b32 	%r233, %f284;
	mov.b32 	%r232, %f12;
	mov.b32 	%r251, %f353;
	mov.b32 	%r250, %f21;
	mov.b32 	%r269, %f421;
	mov.b32 	%r268, %f30;
	mov.b32 	%r271, %f456;
	mov.b32 	%r272, %f489;
	mov.b32 	%r274, %f453;
	mov.b32 	%r275, %f486;
	mov.b32 	%r331, %f593;
	mov.b32 	%r330, %f104;
	mov.b32 	%r337, %f590;
	mov.b32 	%r336, %f103;
	selp.f32 	%f640, %f635, %f639, %p136;
	setp.gt.f32 	%p138, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p157;
	setp.gt.f32 	%p159, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p175;
	selp.f32 	%f740, %f737, %f739, %p176;
	and.b32  	%r400, %r399, 2;
	setp.eq.f32 	%p178, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r213, %r215, %r214;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r249, %r251, %r250;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r275, %r274;
	// end inline asm
	xor.b32  	%r334, %r337, -2147483648;
	xor.b32  	%r333, %r336, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p138;
	selp.f32 	%f697, %f696, %f691, %p159;
	setp.eq.s32 	%p177, %r400, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p178;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r329, %r331, %r330;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r334, %r333;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r335, %r337, %r336;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r338, %r331, %r330;
	// end inline asm
	mov.b32 	%r375, %f697;
	mov.b32 	%r374, %f124;
	mov.b32 	%r378, %f694;
	mov.b32 	%r377, %f123;
	selp.f32 	%f743, %f738, %f742, %p177;
	setp.gt.f32 	%p179, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r373, %r375, %r374;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r376, %r378, %r377;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p179;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r419, %f768;
	and.b32  	%r420, %r419, -2147483648;
	or.b32  	%r421, %r420, 1056964608;
	mov.b32 	%f769, %r421;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p192, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p192;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p193, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p193;
	cvt.rzi.s32.f32 	%r422, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r423, %r422, 1;
	setp.eq.b32 	%p194, %r423, 1;
	selp.f32 	%f787, %f785, %f786, %p194;
	selp.f32 	%f788, %f786, %f785, %p194;
	and.b32  	%r424, %r422, 2;
	setp.eq.s32 	%p195, %r424, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p195;
	add.s32 	%r425, %r422, 1;
	and.b32  	%r426, %r425, 2;
	setp.eq.s32 	%p196, %r426, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p196;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p197, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p197;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p198, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p198;
	mov.b32 	%r409, %f799;
	mov.b32 	%r408, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r407, %r409, %r408;
	// end inline asm
	mov.b32 	%r415, %f796;
	xor.b32  	%r412, %r415, -2147483648;
	mov.b32 	%r414, %f142;
	xor.b32  	%r411, %r414, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r410, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r413, %r415, %r414;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r416, %r409, %r408;
	// end inline asm
	shl.b32 	%r428, %r172, 8;
	cvt.u16.u32 	%rs32, %r81;
	mul.hi.u16 	%rs33, %rs32, -21845;
	shr.u16 	%rs34, %rs33, 5;
	mul.lo.s16 	%rs35, %rs34, 48;
	sub.s16 	%rs36, %rs32, %rs35;
	shl.b16 	%rs37, %rs36, 8;
	cvt.u32.u16 	%r429, %rs37;
	shl.b32 	%r430, %r4, 5;
	and.b32  	%r431, %r430, 128;
	and.b32  	%r432, %r430, 96;
	and.b32  	%r433, %r79, 28;
	or.b32  	%r434, %r432, %r433;
	or.b32  	%r435, %r434, %r431;
	or.b32  	%r436, %r435, %r428;
	add.s32 	%r50, %r436, %r429;
	bfe.s32 	%r437, %r1, 3, 1;
	and.b32  	%r51, %r1, 8;
	shl.b32 	%r438, %r1, 4;
	or.b32  	%r439, %r51, %r438;
	shr.u32 	%r440, %r439, 2;
	and.b32  	%r441, %r440, 30;
	and.b32  	%r52, %r1, 4;
	and.b32  	%r442, %r3, 32;
	shr.u32 	%r443, %r2, 1;
	or.b32  	%r444, %r442, %r443;
	or.b32  	%r445, %r444, 8;
	or.b32  	%r446, %r444, 16;
	or.b32  	%r447, %r444, 24;
	or.b32  	%r448, %r81, %r78;
	or.b32  	%r449, %r448, %r82;
	or.b32  	%r450, %r449, %r85;
	or.b32  	%r451, %r450, %r84;
	or.b32  	%r452, %r451, %r80;
	bfe.u32 	%r453, %r452, 1, 5;
	mul.lo.s32 	%r454, %r453, 65;
	add.s32 	%r455, %r444, %r454;
	add.s32 	%r456, %r445, %r454;
	add.s32 	%r457, %r446, %r454;
	add.s32 	%r458, %r447, %r454;
	shl.b32 	%r459, %r2, 1;
	or.b32  	%r460, %r89, %r459;
	mul.lo.s32 	%r461, %r460, 65;
	add.s32 	%r462, %r441, %r461;
	mul.wide.u32 	%rd46, %r462, 4;
	mov.u64 	%rd47, shmem;
	add.s64 	%rd5, %rd47, %rd46;
	cvt.u64.u32 	%rd48, %r441;
	cvt.u64.u32 	%rd49, %r461;
	add.s64 	%rd50, %rd49, %rd48;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd6, %rd47, %rd51;
	mad.lo.s32 	%r463, %r170, 786432, -2359296;
	shl.b32 	%r464, %r2, 2;
	or.b32  	%r465, %r464, %r90;
	or.b32  	%r466, %r465, %r81;
	cvt.u16.u32 	%rs38, %r466;
	mul.hi.u16 	%rs39, %rs38, -21845;
	shr.u16 	%rs40, %rs39, 11;
	mul.lo.s16 	%rs41, %rs40, 3072;
	sub.s16 	%rs42, %rs38, %rs41;
	mul.wide.u16 	%r467, %rs42, 256;
	or.b32  	%r468, %r467, %r431;
	or.b32  	%r53, %r468, %r434;
	cvt.s64.s32 	%rd7, %r463;
	or.b32  	%r54, %r435, %r467;
	bfe.s32 	%r469, %r2, 2, 1;
	and.b32  	%r470, %r2, 4;
	setp.eq.s32 	%p200, %r470, 0;
	and.b32  	%r471, %r469, 260;
	shr.u32 	%r472, %r82, 4;
	mul.lo.s32 	%r473, %r472, 65;
	and.b32  	%r474, %r2, 1;
	neg.s32 	%r475, %r474;
	setp.eq.b32 	%p201, %r474, 1;
	and.b32  	%r476, %r475, 1040;
	bfe.s32 	%r477, %r2, 1, 1;
	and.b32  	%r478, %r2, 2;
	setp.eq.s32 	%p202, %r478, 0;
	and.b32  	%r479, %r477, 520;
	shr.u32 	%r480, %r2, 3;
	mul.lo.s32 	%r481, %r480, 130;
	add.s32 	%r482, %r476, %r441;
	add.s32 	%r483, %r482, %r473;
	add.s32 	%r484, %r483, %r471;
	add.s32 	%r485, %r484, %r479;
	add.s32 	%r486, %r485, %r481;
	mul.wide.u32 	%rd52, %r486, 4;
	add.s64 	%rd8, %rd47, %rd52;
	cvt.u64.u32 	%rd53, %r481;
	selp.b64 	%rd54, 0, 520, %p202;
	selp.b64 	%rd55, 0, 260, %p200;
	cvt.u64.u32 	%rd56, %r473;
	selp.b64 	%rd57, 1040, 0, %p201;
	add.s64 	%rd58, %rd48, %rd57;
	add.s64 	%rd59, %rd58, %rd56;
	add.s64 	%rd60, %rd59, %rd55;
	add.s64 	%rd61, %rd60, %rd54;
	add.s64 	%rd62, %rd61, %rd53;
	shl.b64 	%rd63, %rd62, 2;
	add.s64 	%rd9, %rd47, %rd63;
	cvt.u64.u32 	%rd64, %r484;
	add.s64 	%rd65, %rd64, %rd54;
	add.s64 	%rd66, %rd65, %rd53;
	shl.b64 	%rd67, %rd66, 2;
	add.s64 	%rd10, %rd47, %rd67;
	add.s32 	%r487, %r486, 2113;
	mul.wide.u32 	%rd68, %r487, 4;
	add.s64 	%rd11, %rd47, %rd68;
	add.s32 	%r488, %r486, 2082;
	mul.wide.u32 	%rd69, %r488, 4;
	add.s64 	%rd12, %rd47, %rd69;
	add.s32 	%r489, %r486, 2114;
	mul.wide.u32 	%rd70, %r489, 4;
	add.s64 	%rd13, %rd47, %rd70;
	add.s32 	%r490, %r486, 4194;
	mul.wide.u32 	%rd71, %r490, 4;
	add.s64 	%rd14, %rd47, %rd71;
	add.s32 	%r491, %r486, 4163;
	mul.wide.u32 	%rd72, %r491, 4;
	add.s64 	%rd15, %rd47, %rd72;
	add.s32 	%r492, %r486, 4195;
	mul.wide.u32 	%rd73, %r492, 4;
	add.s64 	%rd16, %rd47, %rd73;
	add.s32 	%r493, %r486, 6275;
	mul.wide.u32 	%rd74, %r493, 4;
	add.s64 	%rd17, %rd47, %rd74;
	add.s32 	%r494, %r486, 6244;
	mul.wide.u32 	%rd75, %r494, 4;
	add.s64 	%rd18, %rd47, %rd75;
	add.s32 	%r495, %r486, 6276;
	mul.wide.u32 	%rd76, %r495, 4;
	add.s64 	%rd19, %rd47, %rd76;
	setp.eq.s32 	%p203, %r78, 0;
	selp.b32 	%r496, 0, 65, %p203;
	and.b32  	%r497, %r437, 1040;
	mul.lo.s32 	%r55, %r89, 520;
	and.b32  	%r498, %r1, 1;
	neg.s32 	%r499, %r498;
	and.b32  	%r56, %r499, 130;
	or.b32  	%r500, %r444, %r497;
	add.s32 	%r57, %r500, %r496;
	or.b32  	%r501, %r445, %r497;
	add.s32 	%r58, %r501, %r496;
	add.s32 	%r502, %r446, %r497;
	add.s32 	%r59, %r502, %r496;
	add.s32 	%r503, %r447, %r497;
	add.s32 	%r60, %r503, %r496;
	mul.wide.u32 	%rd77, %r458, 4;
	add.s64 	%rd20, %rd47, %rd77;
	mul.wide.u32 	%rd78, %r457, 4;
	add.s64 	%rd21, %rd47, %rd78;
	mul.wide.u32 	%rd79, %r456, 4;
	add.s64 	%rd22, %rd47, %rd79;
	mul.wide.u32 	%rd80, %r455, 4;
	add.s64 	%rd23, %rd47, %rd80;
	setp.eq.s32 	%p204, %r51, 0;
	mov.u16 	%rs1218, 25600;
	mov.u16 	%rs1114, 21504;
	mov.u32 	%r8005, %r7966;
	mov.u32 	%r8004, %r7966;
	mov.u32 	%r8003, %r7966;
	mov.u32 	%r8002, %r7966;
	mov.u32 	%r8001, %r7966;
	mov.u32 	%r8000, %r7966;
	mov.u32 	%r7999, %r7966;
	mov.u32 	%r7998, %r7966;
	mov.u32 	%r7997, %r7966;
	mov.u32 	%r7996, %r7966;
	mov.u32 	%r7995, %r7966;
	mov.u32 	%r7994, %r7966;
	mov.u32 	%r7985, %r7966;
	bra.uni 	$L__BB0_83;
$L__BB0_88:                             // %L40296
                                        //   in Loop: Header=BB0_83 Depth=1
	mad.lo.s32 	%r7961, %r148, 786432, %r54;
	cvt.u64.u32 	%rd137, %r7961;
	add.s64 	%rd138, %rd137, %rd7;
	mul.hi.s64 	%rd139, %rd138, 3074457345618258603;
	shr.u64 	%rd140, %rd139, 63;
	shr.s64 	%rd141, %rd139, 26;
	add.s64 	%rd142, %rd141, %rd140;
	setp.lt.s64 	%p232, %rd138, 0;
	mul.lo.s64 	%rd143, %rd142, 402653184;
	setp.ne.s64 	%p233, %rd143, %rd138;
	and.pred  	%p234, %p232, %p233;
	selp.s64 	%rd144, -1, 0, %p234;
	add.s64 	%rd145, %rd142, %rd144;
	mul.lo.s64 	%rd146, %rd145, 4611686018024734720;
	add.s64 	%rd147, %rd146, %rd138;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r163, %r165, %r164, %r166};
	add.s32 	%r7985, %r7985, 256;
	add.s32 	%r7962, %r7985, %r168;
	setp.lt.s32 	%p235, %r7962, %r169;
	@%p235 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_89;
$L__BB0_83:                             // %L1450
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	shr.u32 	%r74, %r7985, 6;
	or.b32  	%r569, %r7985, %r1;
	and.b32  	%r570, %r569, 32528;
	or.b32  	%r571, %r570, %r85;
	or.b32  	%r572, %r571, %r2;
	add.s32 	%r573, %r572, %r168;
	mad.lo.s32 	%r574, %r573, 12288, %r50;
	mul.hi.s32 	%r575, %r574, 715827883;
	shr.u32 	%r576, %r575, 31;
	shr.s32 	%r577, %r575, 26;
	add.s32 	%r578, %r577, %r576;
	setp.lt.s32 	%p205, %r574, 0;
	mul.lo.s32 	%r579, %r578, 402653184;
	setp.ne.s32 	%p206, %r579, %r574;
	and.pred  	%p207, %p205, %p206;
	selp.s32 	%r580, -1, 0, %p207;
	add.s32 	%r581, %r578, %r580;
	mad.lo.s32 	%r582, %r581, -402653184, %r574;
	mul.wide.s32 	%rd81, %r582, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r583, %r584, %r585, %r586}, [%rd82];
	or.b32  	%r587, %r572, 64;
	add.s32 	%r588, %r587, %r168;
	mad.lo.s32 	%r589, %r588, 12288, %r50;
	mul.hi.s32 	%r590, %r589, 715827883;
	shr.u32 	%r591, %r590, 31;
	shr.s32 	%r592, %r590, 26;
	add.s32 	%r593, %r592, %r591;
	setp.lt.s32 	%p208, %r589, 0;
	mul.lo.s32 	%r594, %r593, 402653184;
	setp.ne.s32 	%p209, %r594, %r589;
	and.pred  	%p210, %p208, %p209;
	selp.s32 	%r595, -1, 0, %p210;
	add.s32 	%r596, %r593, %r595;
	mad.lo.s32 	%r597, %r596, -402653184, %r589;
	mul.wide.s32 	%rd83, %r597, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r598, %r599, %r600, %r601}, [%rd84];
	or.b32  	%r602, %r572, 128;
	add.s32 	%r603, %r602, %r168;
	mad.lo.s32 	%r604, %r603, 12288, %r50;
	mul.hi.s32 	%r605, %r604, 715827883;
	shr.u32 	%r606, %r605, 31;
	shr.s32 	%r607, %r605, 26;
	add.s32 	%r608, %r607, %r606;
	setp.lt.s32 	%p211, %r604, 0;
	mul.lo.s32 	%r609, %r608, 402653184;
	setp.ne.s32 	%p212, %r609, %r604;
	and.pred  	%p213, %p211, %p212;
	selp.s32 	%r610, -1, 0, %p213;
	add.s32 	%r611, %r608, %r610;
	mad.lo.s32 	%r612, %r611, -402653184, %r604;
	mul.wide.s32 	%rd85, %r612, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r613, %r614, %r615, %r616}, [%rd86];
	or.b32  	%r617, %r572, 192;
	add.s32 	%r618, %r617, %r168;
	mad.lo.s32 	%r619, %r618, 12288, %r50;
	mul.hi.s32 	%r620, %r619, 715827883;
	shr.u32 	%r621, %r620, 31;
	shr.s32 	%r622, %r620, 26;
	add.s32 	%r623, %r622, %r621;
	setp.lt.s32 	%p214, %r619, 0;
	mul.lo.s32 	%r624, %r623, 402653184;
	setp.ne.s32 	%p215, %r624, %r619;
	and.pred  	%p216, %p214, %p215;
	selp.s32 	%r625, -1, 0, %p216;
	add.s32 	%r626, %r623, %r625;
	mad.lo.s32 	%r627, %r626, -402653184, %r619;
	mul.wide.s32 	%rd87, %r627, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r628, %r629, %r630, %r631}, [%rd88];
	selp.b32 	%r632, %r585, %r583, %p204;
	shfl.sync.bfly.b32	%r633, %r632, 8, 31, -1;
	selp.b32 	%r505, %r583, %r633, %p204;
	selp.b32 	%r506, %r633, %r585, %p204;
	selp.b32 	%r634, %r586, %r584, %p204;
	shfl.sync.bfly.b32	%r635, %r634, 8, 31, -1;
	selp.b32 	%r513, %r584, %r635, %p204;
	selp.b32 	%r514, %r635, %r586, %p204;
	selp.b32 	%r636, %r600, %r598, %p204;
	shfl.sync.bfly.b32	%r637, %r636, 8, 31, -1;
	selp.b32 	%r521, %r598, %r637, %p204;
	selp.b32 	%r522, %r637, %r600, %p204;
	selp.b32 	%r638, %r601, %r599, %p204;
	shfl.sync.bfly.b32	%r639, %r638, 8, 31, -1;
	selp.b32 	%r529, %r599, %r639, %p204;
	selp.b32 	%r530, %r639, %r601, %p204;
	selp.b32 	%r640, %r615, %r613, %p204;
	shfl.sync.bfly.b32	%r641, %r640, 8, 31, -1;
	selp.b32 	%r537, %r613, %r641, %p204;
	selp.b32 	%r538, %r641, %r615, %p204;
	selp.b32 	%r642, %r616, %r614, %p204;
	shfl.sync.bfly.b32	%r643, %r642, 8, 31, -1;
	selp.b32 	%r545, %r614, %r643, %p204;
	selp.b32 	%r546, %r643, %r616, %p204;
	selp.b32 	%r644, %r630, %r628, %p204;
	shfl.sync.bfly.b32	%r645, %r644, 8, 31, -1;
	selp.b32 	%r553, %r628, %r645, %p204;
	selp.b32 	%r554, %r645, %r630, %p204;
	selp.b32 	%r646, %r631, %r629, %p204;
	shfl.sync.bfly.b32	%r647, %r646, 8, 31, -1;
	selp.b32 	%r561, %r629, %r647, %p204;
	selp.b32 	%r562, %r647, %r631, %p204;
	mov.u32 	%r563, 21520;
	// begin inline asm
	prmt.b32 %r504, %r505, %r506, %r563;
	// end inline asm
	mov.u32 	%r567, 30258;
	// begin inline asm
	prmt.b32 %r508, %r505, %r506, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r513, %r514, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r513, %r514, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r521, %r522, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r521, %r522, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r529, %r530, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r529, %r530, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r537, %r538, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r537, %r538, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r545, %r546, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r545, %r546, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r553, %r554, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r553, %r554, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r560, %r561, %r562, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r564, %r561, %r562, %r567;
	// end inline asm
	st.shared.u32 	[%rd8], %r504;
	st.shared.u32 	[%rd9+128], %r508;
	st.shared.u32 	[%rd9+4], %r512;
	st.shared.u32 	[%rd9+132], %r516;
	st.shared.u32 	[%rd10+8324], %r520;
	st.shared.u32 	[%rd11], %r524;
	st.shared.u32 	[%rd12], %r528;
	st.shared.u32 	[%rd13], %r532;
	st.shared.u32 	[%rd10+16648], %r536;
	st.shared.u32 	[%rd14], %r540;
	st.shared.u32 	[%rd15], %r544;
	st.shared.u32 	[%rd16], %r548;
	st.shared.u32 	[%rd10+24972], %r552;
	st.shared.u32 	[%rd17], %r556;
	st.shared.u32 	[%rd18], %r560;
	st.shared.u32 	[%rd19], %r564;
	bar.sync 	0;
	or.b32  	%r75, %r7985, %r52;
	shr.u32 	%r7992, %r75, 6;
	mov.u64 	%rd154, %rd23;
	mov.u64 	%rd155, %rd22;
	mov.u64 	%rd156, %rd21;
	mov.u64 	%rd157, %rd20;
	mov.u32 	%r7993, %r7966;
$L__BB0_84:                             // %pass5548
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7832, %r75, %r7993;
	bfe.s32 	%r7833, %r7832, 2, 1;
	and.b32  	%r7834, %r7833, 260;
	and.b32  	%r7835, %r7992, 3;
	mul.lo.s32 	%r7836, %r7835, 2081;
	add.s32 	%r7837, %r57, %r7834;
	add.s32 	%r7838, %r7837, %r7836;
	add.s32 	%r7839, %r7838, %r55;
	add.s32 	%r7840, %r7839, %r56;
	mul.wide.u32 	%rd89, %r7840, 4;
	add.s64 	%rd91, %rd47, %rd89;
	ld.shared.u32 	%r7841, [%rd91];
	add.s32 	%r7842, %r58, %r7834;
	add.s32 	%r7843, %r7842, %r7836;
	add.s32 	%r7844, %r7843, %r55;
	add.s32 	%r7845, %r7844, %r56;
	mul.wide.u32 	%rd92, %r7845, 4;
	add.s64 	%rd93, %rd47, %rd92;
	ld.shared.u32 	%r7846, [%rd93];
	add.s32 	%r7847, %r59, %r7834;
	add.s32 	%r7848, %r7847, %r7836;
	add.s32 	%r7849, %r7848, %r55;
	add.s32 	%r7850, %r7849, %r56;
	mul.wide.u32 	%rd94, %r7850, 4;
	add.s64 	%rd95, %rd47, %rd94;
	ld.shared.u32 	%r7851, [%rd95];
	add.s32 	%r7852, %r60, %r7834;
	add.s32 	%r7853, %r7852, %r7836;
	add.s32 	%r7854, %r7853, %r55;
	add.s32 	%r7855, %r7854, %r56;
	mul.wide.u32 	%rd96, %r7855, 4;
	add.s64 	%rd97, %rd47, %rd96;
	ld.shared.u32 	%r7856, [%rd97];
	// begin inline asm
	mov.b32 %r653, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r664, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r652, %r7841, -2004318072;
	mov.u32 	%r651, 983055;
	// begin inline asm
	lop3.b32 %r650, %r651, %r652, %r653, 202;
	// end inline asm
	mov.u16 	%rs47, 18432;
	// begin inline asm
	mov.b32 %r654, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r655, %r653, %r654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r658, %r650, %r655;
	// end inline asm
	mov.u32 	%r662, 15728880;
	// begin inline asm
	lop3.b32 %r661, %r662, %r652, %r664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r665, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r666, %r664, %r665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r669, %r661, %r666;
	// end inline asm
	shr.u32 	%r674, %r652, 8;
	// begin inline asm
	lop3.b32 %r672, %r651, %r674, %r653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r676, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r677, %r653, %r676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r680, %r672, %r677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r683, %r662, %r674, %r664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r687, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r688, %r664, %r687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r691, %r683, %r688;
	// end inline asm
	// begin inline asm
	mov.b32 %r699, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r710, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r698, %r7846, -2004318072;
	// begin inline asm
	lop3.b32 %r696, %r651, %r698, %r699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r700, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r701, %r699, %r700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r704, %r696, %r701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r707, %r662, %r698, %r710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r711, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r712, %r710, %r711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r715, %r707, %r712;
	// end inline asm
	shr.u32 	%r720, %r698, 8;
	// begin inline asm
	lop3.b32 %r718, %r651, %r720, %r699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r723, %r699, %r722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r726, %r718, %r723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r729, %r662, %r720, %r710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r734, %r710, %r733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r737, %r729, %r734;
	// end inline asm
	// begin inline asm
	mov.b32 %r745, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r756, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r744, %r7851, -2004318072;
	// begin inline asm
	lop3.b32 %r742, %r651, %r744, %r745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r746, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r747, %r745, %r746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r750, %r742, %r747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r753, %r662, %r744, %r756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r757, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r758, %r756, %r757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r761, %r753, %r758;
	// end inline asm
	shr.u32 	%r766, %r744, 8;
	// begin inline asm
	lop3.b32 %r764, %r651, %r766, %r745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r768, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r769, %r745, %r768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r772, %r764, %r769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r775, %r662, %r766, %r756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r780, %r756, %r779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r783, %r775, %r780;
	// end inline asm
	// begin inline asm
	mov.b32 %r791, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r790, %r7856, -2004318072;
	// begin inline asm
	lop3.b32 %r788, %r651, %r790, %r791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r792, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r793, %r791, %r792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r796, %r788, %r793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r799, %r662, %r790, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r803, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r804, %r802, %r803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r807, %r799, %r804;
	// end inline asm
	shr.u32 	%r812, %r790, 8;
	// begin inline asm
	lop3.b32 %r810, %r651, %r812, %r791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r815, %r791, %r814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r818, %r810, %r815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r821, %r662, %r812, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r826, %r802, %r825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r829, %r821, %r826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r832, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r834, %r832, %r658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r837, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r839, %r837, %r669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r842, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r844, %r842, %r680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r847, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r849, %r847, %r691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r852, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r854, %r852, %r704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r857, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r859, %r857, %r715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r862, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r864, %r862, %r726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r867, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r869, %r867, %r737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r872, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r874, %r872, %r750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r877, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r879, %r877, %r761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r882, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r884, %r882, %r772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r887, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r889, %r887, %r783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r892, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r894, %r892, %r796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r897, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r899, %r897, %r807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r902, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r904, %r902, %r818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r907, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r909, %r907, %r829;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r916, %r8005, -2004318072;
	// begin inline asm
	lop3.b32 %r914, %r651, %r916, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r917, %r918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r914, %r919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r925, %r662, %r916, %r928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r930, %r928, %r929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r925, %r930;
	// end inline asm
	shr.u32 	%r938, %r916, 8;
	// begin inline asm
	lop3.b32 %r936, %r651, %r938, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r941, %r917, %r940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r944, %r936, %r941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r947, %r662, %r938, %r928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r928, %r951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r955, %r947, %r952;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r962, %r8004, -2004318072;
	// begin inline asm
	lop3.b32 %r960, %r651, %r962, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r963, %r964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r960, %r965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r971, %r662, %r962, %r974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r974, %r975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r971, %r976;
	// end inline asm
	shr.u32 	%r984, %r962, 8;
	// begin inline asm
	lop3.b32 %r982, %r651, %r984, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r987, %r963, %r986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r990, %r982, %r987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r993, %r662, %r984, %r974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r998, %r974, %r997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1001, %r993, %r998;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1008, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r1006, %r651, %r1008, %r1009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1010, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1011, %r1009, %r1010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1014, %r1006, %r1011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1017, %r662, %r1008, %r1020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1022, %r1020, %r1021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1025, %r1017, %r1022;
	// end inline asm
	shr.u32 	%r1030, %r1008, 8;
	// begin inline asm
	lop3.b32 %r1028, %r651, %r1030, %r1009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1032, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1033, %r1009, %r1032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1036, %r1028, %r1033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1039, %r662, %r1030, %r1020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1044, %r1020, %r1043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1047, %r1039, %r1044;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1054, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r1052, %r651, %r1054, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1057, %r1055, %r1056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1060, %r1052, %r1057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1063, %r662, %r1054, %r1066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1068, %r1066, %r1067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1071, %r1063, %r1068;
	// end inline asm
	shr.u32 	%r1076, %r1054, 8;
	// begin inline asm
	lop3.b32 %r1074, %r651, %r1076, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1079, %r1055, %r1078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1082, %r1074, %r1079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1085, %r662, %r1076, %r1066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1066, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1096, %r213, %r922, %r834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1100, %r213, %r933, %r839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1104, %r213, %r944, %r844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1108, %r213, %r955, %r849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1112, %r213, %r968, %r854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1116, %r213, %r979, %r859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1120, %r213, %r990, %r864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1124, %r213, %r1001, %r869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1128, %r213, %r1014, %r874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1132, %r213, %r1025, %r879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1136, %r213, %r1036, %r884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1140, %r213, %r1047, %r889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1144, %r213, %r1060, %r894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1148, %r213, %r1071, %r899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1152, %r213, %r1082, %r904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1156, %r213, %r1093, %r909;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1176, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1164, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r1162, %r651, %r1164, %r1165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1167, %r1165, %r1166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1170, %r1162, %r1167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1173, %r662, %r1164, %r1176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1178, %r1176, %r1177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1181, %r1173, %r1178;
	// end inline asm
	shr.u32 	%r1186, %r1164, 8;
	// begin inline asm
	lop3.b32 %r1184, %r651, %r1186, %r1165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1189, %r1165, %r1188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1192, %r1184, %r1189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1195, %r662, %r1186, %r1176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1200, %r1176, %r1199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1203, %r1195, %r1200;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1222, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1210, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r1208, %r651, %r1210, %r1211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1212, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1213, %r1211, %r1212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1216, %r1208, %r1213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1219, %r662, %r1210, %r1222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1223, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1224, %r1222, %r1223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1227, %r1219, %r1224;
	// end inline asm
	shr.u32 	%r1232, %r1210, 8;
	// begin inline asm
	lop3.b32 %r1230, %r651, %r1232, %r1211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1234, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1235, %r1211, %r1234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1238, %r1230, %r1235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1241, %r662, %r1232, %r1222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1245, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1246, %r1222, %r1245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1249, %r1241, %r1246;
	// end inline asm
	// begin inline asm
	mov.b32 %r1257, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1268, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1256, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r1254, %r651, %r1256, %r1257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1258, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1259, %r1257, %r1258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1262, %r1254, %r1259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1265, %r662, %r1256, %r1268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1269, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1270, %r1268, %r1269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1273, %r1265, %r1270;
	// end inline asm
	shr.u32 	%r1278, %r1256, 8;
	// begin inline asm
	lop3.b32 %r1276, %r651, %r1278, %r1257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1280, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1281, %r1257, %r1280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1284, %r1276, %r1281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1287, %r662, %r1278, %r1268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1291, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1292, %r1268, %r1291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1295, %r1287, %r1292;
	// end inline asm
	// begin inline asm
	mov.b32 %r1303, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1314, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1302, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r1300, %r651, %r1302, %r1303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1304, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1305, %r1303, %r1304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1308, %r1300, %r1305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1311, %r662, %r1302, %r1314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1315, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1316, %r1314, %r1315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1319, %r1311, %r1316;
	// end inline asm
	shr.u32 	%r1324, %r1302, 8;
	// begin inline asm
	lop3.b32 %r1322, %r651, %r1324, %r1303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1326, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1327, %r1303, %r1326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1330, %r1322, %r1327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1333, %r662, %r1324, %r1314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1337, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1338, %r1314, %r1337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1341, %r1333, %r1338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1346, %r1344, %r1170, %r1096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1352, %r1350, %r1181, %r1100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1358, %r1356, %r1192, %r1104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1364, %r1362, %r1203, %r1108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1368, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1370, %r1368, %r1216, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1374, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1376, %r1374, %r1227, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1382, %r1380, %r1238, %r1120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1386, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1388, %r1386, %r1249, %r1124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1392, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1394, %r1392, %r1262, %r1128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1398, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1400, %r1398, %r1273, %r1132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1404, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1406, %r1404, %r1284, %r1136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1410, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1412, %r1410, %r1295, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1416, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1418, %r1416, %r1308, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1422, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1424, %r1422, %r1319, %r1148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1428, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1430, %r1428, %r1330, %r1152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1434, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1436, %r1434, %r1341, %r1156;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1444, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r1442, %r651, %r1444, %r1445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1445, %r1446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1442, %r1447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1453, %r662, %r1444, %r1456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1456, %r1457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1461, %r1453, %r1458;
	// end inline asm
	shr.u32 	%r1466, %r1444, 8;
	// begin inline asm
	lop3.b32 %r1464, %r651, %r1466, %r1445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1445, %r1468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1472, %r1464, %r1469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1475, %r662, %r1466, %r1456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1480, %r1456, %r1479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1483, %r1475, %r1480;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1490, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r1488, %r651, %r1490, %r1491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1491, %r1492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1488, %r1493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1499, %r662, %r1490, %r1502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1502, %r1503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1507, %r1499, %r1504;
	// end inline asm
	shr.u32 	%r1512, %r1490, 8;
	// begin inline asm
	lop3.b32 %r1510, %r651, %r1512, %r1491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1515, %r1491, %r1514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1518, %r1510, %r1515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1521, %r662, %r1512, %r1502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1526, %r1502, %r1525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1529, %r1521, %r1526;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1536, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r1534, %r651, %r1536, %r1537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1539, %r1537, %r1538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1542, %r1534, %r1539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1545, %r662, %r1536, %r1548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1550, %r1548, %r1549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1553, %r1545, %r1550;
	// end inline asm
	shr.u32 	%r1558, %r1536, 8;
	// begin inline asm
	lop3.b32 %r1556, %r651, %r1558, %r1537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1561, %r1537, %r1560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1564, %r1556, %r1561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1567, %r662, %r1558, %r1548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1572, %r1548, %r1571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1575, %r1567, %r1572;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r1582, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r1580, %r651, %r1582, %r1583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1584, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1585, %r1583, %r1584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1588, %r1580, %r1585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1591, %r662, %r1582, %r1594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1596, %r1594, %r1595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1599, %r1591, %r1596;
	// end inline asm
	shr.u32 	%r1604, %r1582, 8;
	// begin inline asm
	lop3.b32 %r1602, %r651, %r1604, %r1583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1607, %r1583, %r1606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1610, %r1602, %r1607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1613, %r662, %r1604, %r1594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1618, %r1594, %r1617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1621, %r1613, %r1618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r249, %r1450, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r249, %r1461, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r249, %r1472, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1701, %r249, %r1483, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1713, %r249, %r1496, %r1370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r249, %r1507, %r1376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r249, %r1518, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r249, %r1529, %r1388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r249, %r1542, %r1394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r249, %r1553, %r1400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r249, %r1564, %r1406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r249, %r1575, %r1412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1749, %r249, %r1588, %r1418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1746, %r249, %r1599, %r1424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r249, %r1610, %r1430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r249, %r1621, %r1436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1688, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1690, %r1688, %r1692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1693, %r270, %r1695, %r1690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1697, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1699, %r1697, %r1701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r270, %r1704, %r1699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1706, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1708, %r1706, %r1710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1711, %r270, %r1713, %r1708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1715, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1717, %r1715, %r1719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r270, %r1722, %r1717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1724, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1726, %r1724, %r1728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1729, %r270, %r1731, %r1726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1733, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1735, %r1733, %r1737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r270, %r1740, %r1735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1742, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1744, %r1742, %r1746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r270, %r1749, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1751, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1753, %r1751, %r1755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r270, %r1758, %r1753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1760, %r273, %r1695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r270, %r1692, %r1760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1767, %r273, %r1704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r270, %r1701, %r1767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1774, %r273, %r1713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r270, %r1710, %r1774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1781, %r273, %r1722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r270, %r1719, %r1781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1788, %r273, %r1731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r270, %r1728, %r1788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1795, %r273, %r1740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r270, %r1737, %r1795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1802, %r273, %r1749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r270, %r1746, %r1802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1809, %r273, %r1758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r270, %r1755, %r1809;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1903, %r1900}, {%r329, %r335, %r332, %r338}, {%r1693, %r1763}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1912, %r1909}, {%r329, %r335, %r332, %r338}, {%r1702, %r1770}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1921, %r1918}, {%r329, %r335, %r332, %r338}, {%r1711, %r1777}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1930, %r1927}, {%r329, %r335, %r332, %r338}, {%r1720, %r1784}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1939, %r1936}, {%r329, %r335, %r332, %r338}, {%r1729, %r1791}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1948, %r1945}, {%r329, %r335, %r332, %r338}, {%r1738, %r1798}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1957, %r1954}, {%r329, %r335, %r332, %r338}, {%r1747, %r1805}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1966, %r1963}, {%r329, %r335, %r332, %r338}, {%r1756, %r1812}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1896, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1898, %r1896, %r1900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1901, %r373, %r1903, %r1898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1905, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1907, %r1905, %r1909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r373, %r1912, %r1907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1914, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1916, %r1914, %r1918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1919, %r373, %r1921, %r1916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1923, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1925, %r1923, %r1927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1928, %r373, %r1930, %r1925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1932, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1934, %r1932, %r1936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1937, %r373, %r1939, %r1934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1941, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1943, %r1941, %r1945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1946, %r373, %r1948, %r1943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1950, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1952, %r1950, %r1954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1955, %r373, %r1957, %r1952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1959, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1961, %r1959, %r1963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1964, %r373, %r1966, %r1961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1968, %r376, %r1903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1971, %r373, %r1900, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1975, %r376, %r1912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1978, %r373, %r1909, %r1975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1982, %r376, %r1921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1985, %r373, %r1918, %r1982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1989, %r376, %r1930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1992, %r373, %r1927, %r1989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r376, %r1939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1999, %r373, %r1936, %r1996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2003, %r376, %r1948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2006, %r373, %r1945, %r2003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2010, %r376, %r1957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2013, %r373, %r1954, %r2010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r376, %r1966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2020, %r373, %r1963, %r2017;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2024, %r2025}, {%r407, %r413, %r410, %r416}, {%r1901, %r1971}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2034, %r2035}, {%r407, %r413, %r410, %r416}, {%r1910, %r1978}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2044, %r2045}, {%r407, %r413, %r410, %r416}, {%r1919, %r1985}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2054, %r2055}, {%r407, %r413, %r410, %r416}, {%r1928, %r1992}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2064, %r2065}, {%r407, %r413, %r410, %r416}, {%r1937, %r1999}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2074, %r2075}, {%r407, %r413, %r410, %r416}, {%r1946, %r2006}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2084, %r2085}, {%r407, %r413, %r410, %r416}, {%r1955, %r2013}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2094, %r2095}, {%r407, %r413, %r410, %r416}, {%r1964, %r2020}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2104, %r86, %r2024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2107, %r86, %r2025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2110, %r86, %r2034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2113, %r86, %r2035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2116, %r86, %r2044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2119, %r86, %r2045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2122, %r86, %r2054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2125, %r86, %r2055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2128, %r86, %r2064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2131, %r86, %r2065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2134, %r86, %r2074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2137, %r86, %r2075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2140, %r86, %r2084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2143, %r86, %r2085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2146, %r86, %r2094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2149, %r86, %r2095;
	// end inline asm
	mov.u16 	%rs235, -14592;
	// begin inline asm
	mov.b32 %r2152, {%rs235, %rs235};
	// end inline asm
	mov.u16 	%rs237, 18176;
	// begin inline asm
	mov.b32 %r2153, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2154, %r2104, %r2152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2157, %r2154, %r2153;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2162, %r2107, %r2160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2165, %r2162, %r2161;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2170, %r2110, %r2168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2173, %r2170, %r2169;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2178, %r2113, %r2176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2181, %r2178, %r2177;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2186, %r2116, %r2184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2189, %r2186, %r2185;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2193, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2194, %r2119, %r2192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2197, %r2194, %r2193;
	// end inline asm
	// begin inline asm
	mov.b32 %r2200, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2202, %r2122, %r2200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2205, %r2202, %r2201;
	// end inline asm
	// begin inline asm
	mov.b32 %r2208, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2209, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2210, %r2125, %r2208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2213, %r2210, %r2209;
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2217, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2218, %r2128, %r2216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2221, %r2218, %r2217;
	// end inline asm
	// begin inline asm
	mov.b32 %r2224, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2225, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2226, %r2131, %r2224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2229, %r2226, %r2225;
	// end inline asm
	// begin inline asm
	mov.b32 %r2232, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2234, %r2134, %r2232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2237, %r2234, %r2233;
	// end inline asm
	// begin inline asm
	mov.b32 %r2240, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2241, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2242, %r2137, %r2240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2245, %r2242, %r2241;
	// end inline asm
	// begin inline asm
	mov.b32 %r2248, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2250, %r2140, %r2248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2253, %r2250, %r2249;
	// end inline asm
	// begin inline asm
	mov.b32 %r2256, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2258, %r2143, %r2256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2261, %r2258, %r2257;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2265, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2266, %r2146, %r2264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2269, %r2266, %r2265;
	// end inline asm
	// begin inline asm
	mov.b32 %r2272, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r2273, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2274, %r2149, %r2272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2277, %r2274, %r2273;
	// end inline asm
	// begin inline asm
	mov.b32 %r2283, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2281, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2282, %r2283, %r2281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2157, %r2282;
	// end inline asm
	// begin inline asm
	mov.b32 %r2288, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2289, %r2283, %r2288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2165, %r2289;
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2296, %r2283, %r2295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2173, %r2296;
	// end inline asm
	// begin inline asm
	mov.b32 %r2302, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2303, %r2283, %r2302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2181, %r2303;
	// end inline asm
	mov.u32 	%r2312, 25152;
	// begin inline asm
	prmt.b32 %r2309, %r2285, %r2299, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2313, %r2292, %r2306, %r2312;
	// end inline asm
	shl.b32 	%r2320, %r2313, 4;
	mov.u32 	%r2318, 252645135;
	// begin inline asm
	lop3.b32 %r2317, %r2318, %r2309, %r2320, 202;
	// end inline asm
	xor.b32  	%r7857, %r2317, -2004318072;
	// begin inline asm
	mov.b32 %r2324, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2322, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2323, %r2324, %r2322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2326, %r2189, %r2323;
	// end inline asm
	// begin inline asm
	mov.b32 %r2329, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2330, %r2324, %r2329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2333, %r2197, %r2330;
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2337, %r2324, %r2336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2340, %r2205, %r2337;
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2344, %r2324, %r2343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2347, %r2213, %r2344;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2350, %r2326, %r2340, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2354, %r2333, %r2347, %r2312;
	// end inline asm
	shl.b32 	%r2361, %r2354, 4;
	// begin inline asm
	lop3.b32 %r2358, %r2318, %r2350, %r2361, 202;
	// end inline asm
	xor.b32  	%r7858, %r2358, -2004318072;
	// begin inline asm
	mov.b32 %r2365, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2363, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2364, %r2365, %r2363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2221, %r2364;
	// end inline asm
	// begin inline asm
	mov.b32 %r2370, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2371, %r2365, %r2370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2229, %r2371;
	// end inline asm
	// begin inline asm
	mov.b32 %r2377, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2365, %r2377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2381, %r2237, %r2378;
	// end inline asm
	// begin inline asm
	mov.b32 %r2384, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2385, %r2365, %r2384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2388, %r2245, %r2385;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2391, %r2367, %r2381, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2395, %r2374, %r2388, %r2312;
	// end inline asm
	shl.b32 	%r2402, %r2395, 4;
	// begin inline asm
	lop3.b32 %r2399, %r2318, %r2391, %r2402, 202;
	// end inline asm
	xor.b32  	%r7859, %r2399, -2004318072;
	// begin inline asm
	mov.b32 %r2406, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2404, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2406, %r2404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2253, %r2405;
	// end inline asm
	// begin inline asm
	mov.b32 %r2411, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2406, %r2411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2261, %r2412;
	// end inline asm
	// begin inline asm
	mov.b32 %r2418, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2406, %r2418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2269, %r2419;
	// end inline asm
	// begin inline asm
	mov.b32 %r2425, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2426, %r2406, %r2425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2277, %r2426;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2432, %r2408, %r2422, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2436, %r2415, %r2429, %r2312;
	// end inline asm
	shl.b32 	%r2443, %r2436, 4;
	// begin inline asm
	lop3.b32 %r2440, %r2318, %r2432, %r2443, 202;
	// end inline asm
	xor.b32  	%r7860, %r2440, -2004318072;
	st.shared.u32 	[%rd154], %r7857;
	st.shared.u32 	[%rd155], %r7858;
	st.shared.u32 	[%rd156], %r7859;
	st.shared.u32 	[%rd157], %r7860;
	ld.shared.u32 	%r8005, [%rd91];
	ld.shared.u32 	%r8004, [%rd93];
	ld.shared.u32 	%r8003, [%rd95];
	ld.shared.u32 	%r8002, [%rd97];
	// begin inline asm
	mov.b32 %r2449, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2460, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r2448, %r8005, -2004318072;
	// begin inline asm
	lop3.b32 %r2446, %r651, %r2448, %r2449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2450, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2451, %r2449, %r2450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2454, %r2446, %r2451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2457, %r662, %r2448, %r2460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2461, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2462, %r2460, %r2461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2465, %r2457, %r2462;
	// end inline asm
	shr.u32 	%r2470, %r2448, 8;
	// begin inline asm
	lop3.b32 %r2468, %r651, %r2470, %r2449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2473, %r2449, %r2472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2476, %r2468, %r2473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2479, %r662, %r2470, %r2460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2484, %r2460, %r2483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2487, %r2479, %r2484;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r2494, %r8004, -2004318072;
	// begin inline asm
	lop3.b32 %r2492, %r651, %r2494, %r2495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2497, %r2495, %r2496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2500, %r2492, %r2497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2503, %r662, %r2494, %r2506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2507, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2508, %r2506, %r2507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2511, %r2503, %r2508;
	// end inline asm
	shr.u32 	%r2516, %r2494, 8;
	// begin inline asm
	lop3.b32 %r2514, %r651, %r2516, %r2495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2519, %r2495, %r2518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2522, %r2514, %r2519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2525, %r662, %r2516, %r2506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2530, %r2506, %r2529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2533, %r2525, %r2530;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r2540, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r2538, %r651, %r2540, %r2541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2542, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2543, %r2541, %r2542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2546, %r2538, %r2543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2549, %r662, %r2540, %r2552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2553, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2554, %r2552, %r2553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2557, %r2549, %r2554;
	// end inline asm
	shr.u32 	%r2562, %r2540, 8;
	// begin inline asm
	lop3.b32 %r2560, %r651, %r2562, %r2541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2565, %r2541, %r2564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2568, %r2560, %r2565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2571, %r662, %r2562, %r2552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2576, %r2552, %r2575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2579, %r2571, %r2576;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r2586, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r2584, %r651, %r2586, %r2587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2588, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2589, %r2587, %r2588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2592, %r2584, %r2589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2595, %r662, %r2586, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2599, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2600, %r2598, %r2599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2603, %r2595, %r2600;
	// end inline asm
	shr.u32 	%r2608, %r2586, 8;
	// begin inline asm
	lop3.b32 %r2606, %r651, %r2608, %r2587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2611, %r2587, %r2610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2614, %r2606, %r2611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2617, %r662, %r2608, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2622, %r2598, %r2621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2625, %r2617, %r2622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2628, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2630, %r2628, %r2454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2633, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2635, %r2633, %r2465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2638, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2640, %r2638, %r2476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2643, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2645, %r2643, %r2487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2648, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2650, %r2648, %r2500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2653, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2655, %r2653, %r2511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2658, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2660, %r2658, %r2522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2663, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2665, %r2663, %r2533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2668, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2670, %r2668, %r2546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2673, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2675, %r2673, %r2557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2678, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2680, %r2678, %r2568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2683, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2685, %r2683, %r2579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2688, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2690, %r2688, %r2592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2693, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2695, %r2693, %r2603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2698, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2700, %r2698, %r2614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2703, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2705, %r2703, %r2625;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2710, %r651, %r1164, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2713, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2721, %r662, %r1164, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2724, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2732, %r651, %r1186, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2737, %r2713, %r2736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2740, %r2732, %r2737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2743, %r662, %r1186, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2748, %r2724, %r2747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2751, %r2743, %r2748;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2756, %r651, %r1210, %r2759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2760, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2761, %r2759, %r2760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2764, %r2756, %r2761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2767, %r662, %r1210, %r2770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2771, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2772, %r2770, %r2771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2775, %r2767, %r2772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2778, %r651, %r1232, %r2759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2782, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2783, %r2759, %r2782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2786, %r2778, %r2783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2789, %r662, %r1232, %r2770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2794, %r2770, %r2793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2797, %r2789, %r2794;
	// end inline asm
	// begin inline asm
	mov.b32 %r2805, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2816, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2802, %r651, %r1256, %r2805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2806, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2807, %r2805, %r2806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2810, %r2802, %r2807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2813, %r662, %r1256, %r2816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2817, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2818, %r2816, %r2817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2821, %r2813, %r2818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2824, %r651, %r1278, %r2805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2828, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2829, %r2805, %r2828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2832, %r2824, %r2829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2835, %r662, %r1278, %r2816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2839, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2840, %r2816, %r2839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2843, %r2835, %r2840;
	// end inline asm
	// begin inline asm
	mov.b32 %r2851, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2862, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2848, %r651, %r1302, %r2851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2852, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2853, %r2851, %r2852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2856, %r2848, %r2853;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2859, %r662, %r1302, %r2862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2863, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2864, %r2862, %r2863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2867, %r2859, %r2864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2870, %r651, %r1324, %r2851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2874, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2875, %r2851, %r2874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2878, %r2870, %r2875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2881, %r662, %r1324, %r2862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2885, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2886, %r2862, %r2885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2889, %r2881, %r2886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2892, %r213, %r2718, %r2630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2896, %r213, %r2729, %r2635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r213, %r2740, %r2640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2904, %r213, %r2751, %r2645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r213, %r2764, %r2650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2912, %r213, %r2775, %r2655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r213, %r2786, %r2660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r213, %r2797, %r2665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r213, %r2810, %r2670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r213, %r2821, %r2675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r213, %r2832, %r2680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r213, %r2843, %r2685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r213, %r2856, %r2690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r213, %r2867, %r2695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r213, %r2878, %r2700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r213, %r2889, %r2705;
	// end inline asm
	// begin inline asm
	mov.b32 %r2961, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r2972, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2958, %r651, %r1444, %r2961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2962, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2963, %r2961, %r2962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2966, %r2958, %r2963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2969, %r662, %r1444, %r2972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2973, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2974, %r2972, %r2973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2977, %r2969, %r2974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2980, %r651, %r1466, %r2961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2984, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2985, %r2961, %r2984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2988, %r2980, %r2985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2991, %r662, %r1466, %r2972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2995, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2996, %r2972, %r2995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2999, %r2991, %r2996;
	// end inline asm
	// begin inline asm
	mov.b32 %r3007, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r3018, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3004, %r651, %r1490, %r3007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3008, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3009, %r3007, %r3008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3012, %r3004, %r3009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3015, %r662, %r1490, %r3018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3019, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3020, %r3018, %r3019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3023, %r3015, %r3020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3026, %r651, %r1512, %r3007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3030, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3031, %r3007, %r3030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3034, %r3026, %r3031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3037, %r662, %r1512, %r3018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3041, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3042, %r3018, %r3041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3045, %r3037, %r3042;
	// end inline asm
	// begin inline asm
	mov.b32 %r3053, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r3064, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3050, %r651, %r1536, %r3053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3054, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3055, %r3053, %r3054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3058, %r3050, %r3055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3061, %r662, %r1536, %r3064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3065, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3066, %r3064, %r3065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3069, %r3061, %r3066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3072, %r651, %r1558, %r3053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3076, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3077, %r3053, %r3076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3080, %r3072, %r3077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3083, %r662, %r1558, %r3064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3087, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3088, %r3064, %r3087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3091, %r3083, %r3088;
	// end inline asm
	// begin inline asm
	mov.b32 %r3099, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r3110, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3096, %r651, %r1582, %r3099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3100, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3101, %r3099, %r3100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3104, %r3096, %r3101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3107, %r662, %r1582, %r3110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3111, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3112, %r3110, %r3111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3115, %r3107, %r3112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3118, %r651, %r1604, %r3099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3122, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3123, %r3099, %r3122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3126, %r3118, %r3123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3129, %r662, %r1604, %r3110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3133, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3134, %r3110, %r3133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3137, %r3129, %r3134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3140, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r3140, %r2966, %r2892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3146, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r3146, %r2977, %r2896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3152, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r3152, %r2988, %r2900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3158, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3160, %r3158, %r2999, %r2904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3164, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3166, %r3164, %r3012, %r2908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3170, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r3170, %r3023, %r2912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3176, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3178, %r3176, %r3034, %r2916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3182, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3184, %r3182, %r3045, %r2920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3188, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3190, %r3188, %r3058, %r2924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3194, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3196, %r3194, %r3069, %r2928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3200, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3202, %r3200, %r3080, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3206, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3208, %r3206, %r3091, %r2936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3212, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3214, %r3212, %r3104, %r2940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3218, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3220, %r3218, %r3115, %r2944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3224, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3226, %r3224, %r3126, %r2948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3230, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3232, %r3230, %r3137, %r2952;
	// end inline asm
	// begin inline asm
	mov.b32 %r3241, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r3252, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3238, %r651, %r652, %r3241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3242, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3243, %r3241, %r3242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3246, %r3238, %r3243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3249, %r662, %r652, %r3252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3253, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3254, %r3252, %r3253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3257, %r3249, %r3254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3260, %r651, %r674, %r3241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3264, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3265, %r3241, %r3264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3268, %r3260, %r3265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3271, %r662, %r674, %r3252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3275, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3276, %r3252, %r3275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3279, %r3271, %r3276;
	// end inline asm
	// begin inline asm
	mov.b32 %r3287, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r3298, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3284, %r651, %r698, %r3287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3288, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3289, %r3287, %r3288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3292, %r3284, %r3289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3295, %r662, %r698, %r3298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3299, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3300, %r3298, %r3299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3303, %r3295, %r3300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3306, %r651, %r720, %r3287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3310, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3311, %r3287, %r3310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3314, %r3306, %r3311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3317, %r662, %r720, %r3298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3321, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3322, %r3298, %r3321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3325, %r3317, %r3322;
	// end inline asm
	// begin inline asm
	mov.b32 %r3333, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r3344, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3330, %r651, %r744, %r3333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3334, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3335, %r3333, %r3334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3338, %r3330, %r3335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3341, %r662, %r744, %r3344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3345, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3346, %r3344, %r3345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3349, %r3341, %r3346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3352, %r651, %r766, %r3333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3356, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3357, %r3333, %r3356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3360, %r3352, %r3357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3363, %r662, %r766, %r3344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3367, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3368, %r3344, %r3367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3371, %r3363, %r3368;
	// end inline asm
	// begin inline asm
	mov.b32 %r3379, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r3390, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3376, %r651, %r790, %r3379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3380, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3381, %r3379, %r3380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3384, %r3376, %r3381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3387, %r662, %r790, %r3390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3391, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3392, %r3390, %r3391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3395, %r3387, %r3392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3398, %r651, %r812, %r3379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3402, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3403, %r3379, %r3402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3406, %r3398, %r3403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3409, %r662, %r812, %r3390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3413, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3414, %r3390, %r3413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3417, %r3409, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r249, %r3246, %r3142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r249, %r3257, %r3148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r249, %r3268, %r3154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r249, %r3279, %r3160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r249, %r3292, %r3166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r249, %r3303, %r3172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r249, %r3314, %r3178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r249, %r3325, %r3184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r249, %r3338, %r3190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r249, %r3349, %r3196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r249, %r3360, %r3202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r249, %r3371, %r3208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r249, %r3384, %r3214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r249, %r3395, %r3220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r249, %r3406, %r3226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3551, %r249, %r3417, %r3232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3484, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r3484, %r3488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r270, %r3491, %r3486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3493, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r3493, %r3497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r270, %r3500, %r3495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3502, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r3502, %r3506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r270, %r3509, %r3504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3511, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3513, %r3511, %r3515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3516, %r270, %r3518, %r3513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3520, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r3520, %r3524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r270, %r3527, %r3522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3529, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r3529, %r3533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r270, %r3536, %r3531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3538, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3540, %r3538, %r3542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r270, %r3545, %r3540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3547, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3549, %r3547, %r3551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3552, %r270, %r3554, %r3549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3556, %r273, %r3491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3559, %r270, %r3488, %r3556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3563, %r273, %r3500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3566, %r270, %r3497, %r3563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3570, %r273, %r3509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r270, %r3506, %r3570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r273, %r3518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r270, %r3515, %r3577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3584, %r273, %r3527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r270, %r3524, %r3584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3591, %r273, %r3536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3594, %r270, %r3533, %r3591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3598, %r273, %r3545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3601, %r270, %r3542, %r3598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3605, %r273, %r3554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3608, %r270, %r3551, %r3605;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3699, %r3696}, {%r329, %r335, %r332, %r338}, {%r3489, %r3559}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3708, %r3705}, {%r329, %r335, %r332, %r338}, {%r3498, %r3566}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3717, %r3714}, {%r329, %r335, %r332, %r338}, {%r3507, %r3573}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3726, %r3723}, {%r329, %r335, %r332, %r338}, {%r3516, %r3580}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3735, %r3732}, {%r329, %r335, %r332, %r338}, {%r3525, %r3587}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3744, %r3741}, {%r329, %r335, %r332, %r338}, {%r3534, %r3594}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3753, %r3750}, {%r329, %r335, %r332, %r338}, {%r3543, %r3601}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3762, %r3759}, {%r329, %r335, %r332, %r338}, {%r3552, %r3608}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3692, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3694, %r3692, %r3696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3697, %r373, %r3699, %r3694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3701, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3703, %r3701, %r3705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3706, %r373, %r3708, %r3703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3710, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3712, %r3710, %r3714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3715, %r373, %r3717, %r3712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3719, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3721, %r3719, %r3723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3724, %r373, %r3726, %r3721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3728, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3730, %r3728, %r3732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3733, %r373, %r3735, %r3730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3737, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3739, %r3737, %r3741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3742, %r373, %r3744, %r3739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3746, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3748, %r3746, %r3750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3751, %r373, %r3753, %r3748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3755, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3757, %r3755, %r3759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3760, %r373, %r3762, %r3757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3764, %r376, %r3699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3767, %r373, %r3696, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3771, %r376, %r3708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3774, %r373, %r3705, %r3771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3778, %r376, %r3717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3781, %r373, %r3714, %r3778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3785, %r376, %r3726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3788, %r373, %r3723, %r3785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3792, %r376, %r3735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3795, %r373, %r3732, %r3792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3799, %r376, %r3744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3802, %r373, %r3741, %r3799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3806, %r376, %r3753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3809, %r373, %r3750, %r3806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r376, %r3762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3816, %r373, %r3759, %r3813;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3820, %r3821}, {%r407, %r413, %r410, %r416}, {%r3697, %r3767}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3830, %r3831}, {%r407, %r413, %r410, %r416}, {%r3706, %r3774}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3840, %r3841}, {%r407, %r413, %r410, %r416}, {%r3715, %r3781}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3850, %r3851}, {%r407, %r413, %r410, %r416}, {%r3724, %r3788}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3860, %r3861}, {%r407, %r413, %r410, %r416}, {%r3733, %r3795}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3870, %r3871}, {%r407, %r413, %r410, %r416}, {%r3742, %r3802}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3881}, {%r407, %r413, %r410, %r416}, {%r3751, %r3809}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3890, %r3891}, {%r407, %r413, %r410, %r416}, {%r3760, %r3816}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3900, %r86, %r3820;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3903, %r86, %r3821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3906, %r86, %r3830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3909, %r86, %r3831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3912, %r86, %r3840;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3915, %r86, %r3841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3918, %r86, %r3850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3921, %r86, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3924, %r86, %r3860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3927, %r86, %r3861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3930, %r86, %r3870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3933, %r86, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3936, %r86, %r3880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3939, %r86, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3942, %r86, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3945, %r86, %r3891;
	// end inline asm
	// begin inline asm
	mov.b32 %r3948, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r3949, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3950, %r3900, %r3948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3953, %r3950, %r3949;
	// end inline asm
	// begin inline asm
	mov.b32 %r3956, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r3957, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3958, %r3903, %r3956;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3961, %r3958, %r3957;
	// end inline asm
	// begin inline asm
	mov.b32 %r3964, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r3965, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3966, %r3906, %r3964;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3969, %r3966, %r3965;
	// end inline asm
	// begin inline asm
	mov.b32 %r3972, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r3973, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3974, %r3909, %r3972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3977, %r3974, %r3973;
	// end inline asm
	// begin inline asm
	mov.b32 %r3980, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r3981, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3982, %r3912, %r3980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3985, %r3982, %r3981;
	// end inline asm
	// begin inline asm
	mov.b32 %r3988, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r3989, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3990, %r3915, %r3988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3993, %r3990, %r3989;
	// end inline asm
	// begin inline asm
	mov.b32 %r3996, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r3997, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3998, %r3918, %r3996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4001, %r3998, %r3997;
	// end inline asm
	// begin inline asm
	mov.b32 %r4004, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4005, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4006, %r3921, %r4004;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4009, %r4006, %r4005;
	// end inline asm
	// begin inline asm
	mov.b32 %r4012, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4013, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4014, %r3924, %r4012;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4017, %r4014, %r4013;
	// end inline asm
	// begin inline asm
	mov.b32 %r4020, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4021, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4022, %r3927, %r4020;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4025, %r4022, %r4021;
	// end inline asm
	// begin inline asm
	mov.b32 %r4028, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4029, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4030, %r3930, %r4028;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4033, %r4030, %r4029;
	// end inline asm
	// begin inline asm
	mov.b32 %r4036, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4037, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4038, %r3933, %r4036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4041, %r4038, %r4037;
	// end inline asm
	// begin inline asm
	mov.b32 %r4044, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4045, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4046, %r3936, %r4044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4049, %r4046, %r4045;
	// end inline asm
	// begin inline asm
	mov.b32 %r4052, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4054, %r3939, %r4052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4057, %r4054, %r4053;
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4062, %r3942, %r4060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4065, %r4062, %r4061;
	// end inline asm
	// begin inline asm
	mov.b32 %r4068, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r4069, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4070, %r3945, %r4068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4073, %r4070, %r4069;
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4078, %r4079, %r4077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4081, %r3953, %r4078;
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4085, %r4079, %r4084;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4088, %r3961, %r4085;
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4092, %r4079, %r4091;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r3969, %r4092;
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4099, %r4079, %r4098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r3977, %r4099;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4105, %r4081, %r4095, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4109, %r4088, %r4102, %r2312;
	// end inline asm
	shl.b32 	%r4116, %r4109, 4;
	// begin inline asm
	lop3.b32 %r4113, %r2318, %r4105, %r4116, 202;
	// end inline asm
	xor.b32  	%r7861, %r4113, -2004318072;
	// begin inline asm
	mov.b32 %r4120, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4119, %r4120, %r4118;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4122, %r3985, %r4119;
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4126, %r4120, %r4125;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4129, %r3993, %r4126;
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4133, %r4120, %r4132;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4136, %r4001, %r4133;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4140, %r4120, %r4139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4143, %r4009, %r4140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4146, %r4122, %r4136, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4150, %r4129, %r4143, %r2312;
	// end inline asm
	shl.b32 	%r4157, %r4150, 4;
	// begin inline asm
	lop3.b32 %r4154, %r2318, %r4146, %r4157, 202;
	// end inline asm
	xor.b32  	%r7862, %r4154, -2004318072;
	// begin inline asm
	mov.b32 %r4161, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4160, %r4161, %r4159;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4163, %r4017, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4167, %r4161, %r4166;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4170, %r4025, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4174, %r4161, %r4173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4177, %r4033, %r4174;
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4181, %r4161, %r4180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4184, %r4041, %r4181;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4187, %r4163, %r4177, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4191, %r4170, %r4184, %r2312;
	// end inline asm
	shl.b32 	%r4198, %r4191, 4;
	// begin inline asm
	lop3.b32 %r4195, %r2318, %r4187, %r4198, 202;
	// end inline asm
	xor.b32  	%r7863, %r4195, -2004318072;
	// begin inline asm
	mov.b32 %r4202, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4201, %r4202, %r4200;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4204, %r4049, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4208, %r4202, %r4207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4211, %r4057, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4215, %r4202, %r4214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4218, %r4065, %r4215;
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4222, %r4202, %r4221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4225, %r4073, %r4222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4228, %r4204, %r4218, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4232, %r4211, %r4225, %r2312;
	// end inline asm
	shl.b32 	%r4239, %r4232, 4;
	// begin inline asm
	lop3.b32 %r4236, %r2318, %r4228, %r4239, 202;
	// end inline asm
	xor.b32  	%r7864, %r4236, -2004318072;
	st.shared.u32 	[%rd154], %r7861;
	st.shared.u32 	[%rd155], %r7862;
	st.shared.u32 	[%rd156], %r7863;
	st.shared.u32 	[%rd157], %r7864;
	ld.shared.u32 	%r8001, [%rd91];
	ld.shared.u32 	%r8000, [%rd93];
	ld.shared.u32 	%r7999, [%rd95];
	ld.shared.u32 	%r7998, [%rd97];
	// begin inline asm
	mov.b32 %r4245, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r4244, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r4242, %r651, %r4244, %r4245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4247, %r4245, %r4246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4250, %r4242, %r4247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4253, %r662, %r4244, %r4256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4258, %r4256, %r4257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4261, %r4253, %r4258;
	// end inline asm
	shr.u32 	%r4266, %r4244, 8;
	// begin inline asm
	lop3.b32 %r4264, %r651, %r4266, %r4245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4269, %r4245, %r4268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4272, %r4264, %r4269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4275, %r662, %r4266, %r4256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4280, %r4256, %r4279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4283, %r4275, %r4280;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r4290, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r4288, %r651, %r4290, %r4291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4293, %r4291, %r4292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4296, %r4288, %r4293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4299, %r662, %r4290, %r4302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4304, %r4302, %r4303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4307, %r4299, %r4304;
	// end inline asm
	shr.u32 	%r4312, %r4290, 8;
	// begin inline asm
	lop3.b32 %r4310, %r651, %r4312, %r4291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4315, %r4291, %r4314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4318, %r4310, %r4315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4321, %r662, %r4312, %r4302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4326, %r4302, %r4325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4329, %r4321, %r4326;
	// end inline asm
	// begin inline asm
	mov.b32 %r4337, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r4336, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r4334, %r651, %r4336, %r4337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4338, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4339, %r4337, %r4338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4342, %r4334, %r4339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4345, %r662, %r4336, %r4348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4349, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4348, %r4349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4353, %r4345, %r4350;
	// end inline asm
	shr.u32 	%r4358, %r4336, 8;
	// begin inline asm
	lop3.b32 %r4356, %r651, %r4358, %r4337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4337, %r4360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4364, %r4356, %r4361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4367, %r662, %r4358, %r4348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4348, %r4371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4375, %r4367, %r4372;
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r4382, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r4380, %r651, %r4382, %r4383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4384, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4385, %r4383, %r4384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4388, %r4380, %r4385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4391, %r662, %r4382, %r4394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4395, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4396, %r4394, %r4395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4399, %r4391, %r4396;
	// end inline asm
	shr.u32 	%r4404, %r4382, 8;
	// begin inline asm
	lop3.b32 %r4402, %r651, %r4404, %r4383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4383, %r4406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4410, %r4402, %r4407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4413, %r662, %r4404, %r4394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4417, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4394, %r4417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4421, %r4413, %r4418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4424, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4426, %r4424, %r4250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4429, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4431, %r4429, %r4261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4434, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4436, %r4434, %r4272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4439, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4441, %r4439, %r4283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4444, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4446, %r4444, %r4296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4449, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4451, %r4449, %r4307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4454, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4456, %r4454, %r4318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4459, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4461, %r4459, %r4329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4464, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4466, %r4464, %r4342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4469, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4471, %r4469, %r4353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4474, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4476, %r4474, %r4364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4479, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4481, %r4479, %r4375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4484, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4486, %r4484, %r4388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4489, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4491, %r4489, %r4399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4494, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4496, %r4494, %r4410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4499, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4501, %r4499, %r4421;
	// end inline asm
	// begin inline asm
	mov.b32 %r4509, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4520, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4506, %r651, %r1444, %r4509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4509, %r4510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4514, %r4506, %r4511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4517, %r662, %r1444, %r4520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4520, %r4521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4525, %r4517, %r4522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4528, %r651, %r1466, %r4509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4509, %r4532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4536, %r4528, %r4533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4539, %r662, %r1466, %r4520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4520, %r4543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4547, %r4539, %r4544;
	// end inline asm
	// begin inline asm
	mov.b32 %r4555, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4566, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4552, %r651, %r1490, %r4555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4556, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4555, %r4556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4560, %r4552, %r4557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4563, %r662, %r1490, %r4566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4567, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4566, %r4567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4571, %r4563, %r4568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4574, %r651, %r1512, %r4555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4578, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4555, %r4578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4582, %r4574, %r4579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4585, %r662, %r1512, %r4566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4589, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4590, %r4566, %r4589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4593, %r4585, %r4590;
	// end inline asm
	// begin inline asm
	mov.b32 %r4601, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4612, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4598, %r651, %r1536, %r4601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4602, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4601, %r4602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4606, %r4598, %r4603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4609, %r662, %r1536, %r4612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4613, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4612, %r4613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4617, %r4609, %r4614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4620, %r651, %r1558, %r4601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4624, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4601, %r4624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4628, %r4620, %r4625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4631, %r662, %r1558, %r4612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4635, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4612, %r4635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4639, %r4631, %r4636;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4644, %r651, %r1582, %r4647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4648, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4649, %r4647, %r4648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4652, %r4644, %r4649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4655, %r662, %r1582, %r4658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4659, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4660, %r4658, %r4659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4663, %r4655, %r4660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4666, %r651, %r1604, %r4647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4670, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4671, %r4647, %r4670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4674, %r4666, %r4671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4677, %r662, %r1604, %r4658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4658, %r4681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4685, %r4677, %r4682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4688, %r213, %r4514, %r4426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4692, %r213, %r4525, %r4431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4696, %r213, %r4536, %r4436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4700, %r213, %r4547, %r4441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4704, %r213, %r4560, %r4446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4708, %r213, %r4571, %r4451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4712, %r213, %r4582, %r4456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4716, %r213, %r4593, %r4461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4720, %r213, %r4606, %r4466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4724, %r213, %r4617, %r4471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4728, %r213, %r4628, %r4476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4732, %r213, %r4639, %r4481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4736, %r213, %r4652, %r4486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4740, %r213, %r4663, %r4491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4744, %r213, %r4674, %r4496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4748, %r213, %r4685, %r4501;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4754, %r651, %r652, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4759, %r4757, %r4758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4762, %r4754, %r4759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4765, %r662, %r652, %r4768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4770, %r4768, %r4769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4773, %r4765, %r4770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4776, %r651, %r674, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4781, %r4757, %r4780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4784, %r4776, %r4781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4787, %r662, %r674, %r4768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4792, %r4768, %r4791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4795, %r4787, %r4792;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4800, %r651, %r698, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4805, %r4803, %r4804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4808, %r4800, %r4805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4811, %r662, %r698, %r4814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4816, %r4814, %r4815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4819, %r4811, %r4816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4822, %r651, %r720, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4826, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4827, %r4803, %r4826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4830, %r4822, %r4827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4833, %r662, %r720, %r4814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4838, %r4814, %r4837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4841, %r4833, %r4838;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4846, %r651, %r744, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4850, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4851, %r4849, %r4850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4854, %r4846, %r4851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4857, %r662, %r744, %r4860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4862, %r4860, %r4861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4865, %r4857, %r4862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4868, %r651, %r766, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4872, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4873, %r4849, %r4872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4876, %r4868, %r4873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4879, %r662, %r766, %r4860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4884, %r4860, %r4883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4887, %r4879, %r4884;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4892, %r651, %r790, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4896, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4897, %r4895, %r4896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4900, %r4892, %r4897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4903, %r662, %r790, %r4906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4907, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4908, %r4906, %r4907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4911, %r4903, %r4908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4914, %r651, %r812, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4918, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4919, %r4895, %r4918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4922, %r4914, %r4919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4925, %r662, %r812, %r4906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4930, %r4906, %r4929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4933, %r4925, %r4930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4936, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4938, %r4936, %r4762, %r4688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4942, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4944, %r4942, %r4773, %r4692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4948, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4950, %r4948, %r4784, %r4696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4954, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4956, %r4954, %r4795, %r4700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4960, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4962, %r4960, %r4808, %r4704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4966, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4968, %r4966, %r4819, %r4708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4972, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4974, %r4972, %r4830, %r4712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4978, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4980, %r4978, %r4841, %r4716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4984, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4986, %r4984, %r4854, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4990, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4992, %r4990, %r4865, %r4724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4996, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4998, %r4996, %r4876, %r4728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5002, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5004, %r5002, %r4887, %r4732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5008, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5010, %r5008, %r4900, %r4736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5014, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5016, %r5014, %r4911, %r4740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5020, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5022, %r5020, %r4922, %r4744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5026, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5028, %r5026, %r4933, %r4748;
	// end inline asm
	// begin inline asm
	mov.b32 %r5037, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5048, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5034, %r651, %r2448, %r5037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5038, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5039, %r5037, %r5038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5042, %r5034, %r5039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5045, %r662, %r2448, %r5048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5049, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5050, %r5048, %r5049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5053, %r5045, %r5050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5056, %r651, %r2470, %r5037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5060, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5061, %r5037, %r5060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5064, %r5056, %r5061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5067, %r662, %r2470, %r5048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5072, %r5048, %r5071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5075, %r5067, %r5072;
	// end inline asm
	// begin inline asm
	mov.b32 %r5083, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5094, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5080, %r651, %r2494, %r5083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5084, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5085, %r5083, %r5084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5088, %r5080, %r5085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5091, %r662, %r2494, %r5094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5095, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5096, %r5094, %r5095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5099, %r5091, %r5096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5102, %r651, %r2516, %r5083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5106, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5107, %r5083, %r5106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5110, %r5102, %r5107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5113, %r662, %r2516, %r5094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5117, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5118, %r5094, %r5117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5121, %r5113, %r5118;
	// end inline asm
	// begin inline asm
	mov.b32 %r5129, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5140, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5126, %r651, %r2540, %r5129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5130, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5131, %r5129, %r5130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5134, %r5126, %r5131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5137, %r662, %r2540, %r5140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5141, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5142, %r5140, %r5141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5145, %r5137, %r5142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5148, %r651, %r2562, %r5129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5152, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5153, %r5129, %r5152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5156, %r5148, %r5153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5159, %r662, %r2562, %r5140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5163, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5164, %r5140, %r5163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5167, %r5159, %r5164;
	// end inline asm
	// begin inline asm
	mov.b32 %r5175, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5186, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5172, %r651, %r2586, %r5175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5176, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5177, %r5175, %r5176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5180, %r5172, %r5177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5183, %r662, %r2586, %r5186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5187, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5188, %r5186, %r5187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5191, %r5183, %r5188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5194, %r651, %r2608, %r5175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5198, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5199, %r5175, %r5198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5202, %r5194, %r5199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5205, %r662, %r2608, %r5186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5209, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5210, %r5186, %r5209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5213, %r5205, %r5210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r249, %r5042, %r4938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5284, %r249, %r5053, %r4944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5296, %r249, %r5064, %r4950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5293, %r249, %r5075, %r4956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5305, %r249, %r5088, %r4962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5302, %r249, %r5099, %r4968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5314, %r249, %r5110, %r4974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5311, %r249, %r5121, %r4980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5323, %r249, %r5134, %r4986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5320, %r249, %r5145, %r4992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5332, %r249, %r5156, %r4998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5329, %r249, %r5167, %r5004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5341, %r249, %r5180, %r5010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5338, %r249, %r5191, %r5016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5350, %r249, %r5202, %r5022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5347, %r249, %r5213, %r5028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5280, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5282, %r5280, %r5284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5285, %r270, %r5287, %r5282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5289, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5291, %r5289, %r5293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5294, %r270, %r5296, %r5291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5298, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5300, %r5298, %r5302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5303, %r270, %r5305, %r5300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5307, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5309, %r5307, %r5311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5312, %r270, %r5314, %r5309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5316, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5318, %r5316, %r5320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5321, %r270, %r5323, %r5318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5325, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5327, %r5325, %r5329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5330, %r270, %r5332, %r5327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5334, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5336, %r5334, %r5338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5339, %r270, %r5341, %r5336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5343, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5345, %r5343, %r5347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5348, %r270, %r5350, %r5345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5352, %r273, %r5287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5355, %r270, %r5284, %r5352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5359, %r273, %r5296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5362, %r270, %r5293, %r5359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5366, %r273, %r5305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5369, %r270, %r5302, %r5366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5373, %r273, %r5314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5376, %r270, %r5311, %r5373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5380, %r273, %r5323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5383, %r270, %r5320, %r5380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5387, %r273, %r5332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5390, %r270, %r5329, %r5387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5394, %r273, %r5341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5397, %r270, %r5338, %r5394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5401, %r273, %r5350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5404, %r270, %r5347, %r5401;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5495, %r5492}, {%r329, %r335, %r332, %r338}, {%r5285, %r5355}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5504, %r5501}, {%r329, %r335, %r332, %r338}, {%r5294, %r5362}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5513, %r5510}, {%r329, %r335, %r332, %r338}, {%r5303, %r5369}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5522, %r5519}, {%r329, %r335, %r332, %r338}, {%r5312, %r5376}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5531, %r5528}, {%r329, %r335, %r332, %r338}, {%r5321, %r5383}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5540, %r5537}, {%r329, %r335, %r332, %r338}, {%r5330, %r5390}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5549, %r5546}, {%r329, %r335, %r332, %r338}, {%r5339, %r5397}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5558, %r5555}, {%r329, %r335, %r332, %r338}, {%r5348, %r5404}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5488, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5490, %r5488, %r5492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5493, %r373, %r5495, %r5490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5497, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5499, %r5497, %r5501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5502, %r373, %r5504, %r5499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5506, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5508, %r5506, %r5510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5511, %r373, %r5513, %r5508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5515, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5517, %r5515, %r5519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5520, %r373, %r5522, %r5517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5524, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5526, %r5524, %r5528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5529, %r373, %r5531, %r5526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5533, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5535, %r5533, %r5537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5538, %r373, %r5540, %r5535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5542, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5544, %r5542, %r5546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5547, %r373, %r5549, %r5544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5551, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5553, %r5551, %r5555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r373, %r5558, %r5553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5560, %r376, %r5495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r373, %r5492, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5567, %r376, %r5504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r373, %r5501, %r5567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5574, %r376, %r5513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5577, %r373, %r5510, %r5574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5581, %r376, %r5522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r373, %r5519, %r5581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5588, %r376, %r5531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r373, %r5528, %r5588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5595, %r376, %r5540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r373, %r5537, %r5595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5602, %r376, %r5549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5605, %r373, %r5546, %r5602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r376, %r5558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r373, %r5555, %r5609;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5616, %r5617}, {%r407, %r413, %r410, %r416}, {%r5493, %r5563}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5626, %r5627}, {%r407, %r413, %r410, %r416}, {%r5502, %r5570}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5636, %r5637}, {%r407, %r413, %r410, %r416}, {%r5511, %r5577}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5646, %r5647}, {%r407, %r413, %r410, %r416}, {%r5520, %r5584}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5656, %r5657}, {%r407, %r413, %r410, %r416}, {%r5529, %r5591}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5666, %r5667}, {%r407, %r413, %r410, %r416}, {%r5538, %r5598}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5676, %r5677}, {%r407, %r413, %r410, %r416}, {%r5547, %r5605}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5686, %r5687}, {%r407, %r413, %r410, %r416}, {%r5556, %r5612}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5696, %r86, %r5616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5699, %r86, %r5617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5702, %r86, %r5626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5705, %r86, %r5627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5708, %r86, %r5636;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5711, %r86, %r5637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5714, %r86, %r5646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5717, %r86, %r5647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5720, %r86, %r5656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5723, %r86, %r5657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5726, %r86, %r5666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5729, %r86, %r5667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5732, %r86, %r5676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5735, %r86, %r5677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5738, %r86, %r5686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5741, %r86, %r5687;
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5746, %r5696, %r5744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5749, %r5746, %r5745;
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5754, %r5699, %r5752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5757, %r5754, %r5753;
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5762, %r5702, %r5760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5765, %r5762, %r5761;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5770, %r5705, %r5768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5773, %r5770, %r5769;
	// end inline asm
	// begin inline asm
	mov.b32 %r5776, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5778, %r5708, %r5776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5781, %r5778, %r5777;
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5786, %r5711, %r5784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5789, %r5786, %r5785;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5794, %r5714, %r5792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5797, %r5794, %r5793;
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5802, %r5717, %r5800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5805, %r5802, %r5801;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5809, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5810, %r5720, %r5808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5813, %r5810, %r5809;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5817, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5818, %r5723, %r5816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5821, %r5818, %r5817;
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5826, %r5726, %r5824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5829, %r5826, %r5825;
	// end inline asm
	// begin inline asm
	mov.b32 %r5832, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5833, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5834, %r5729, %r5832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5837, %r5834, %r5833;
	// end inline asm
	// begin inline asm
	mov.b32 %r5840, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5841, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5842, %r5732, %r5840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5845, %r5842, %r5841;
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5850, %r5735, %r5848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5853, %r5850, %r5849;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5858, %r5738, %r5856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5861, %r5858, %r5857;
	// end inline asm
	// begin inline asm
	mov.b32 %r5864, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5866, %r5741, %r5864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5869, %r5866, %r5865;
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5875, %r5873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5749, %r5874;
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5875, %r5880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5757, %r5881;
	// end inline asm
	// begin inline asm
	mov.b32 %r5887, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5888, %r5875, %r5887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5765, %r5888;
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5875, %r5894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5773, %r5895;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5901, %r5877, %r5891, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5905, %r5884, %r5898, %r2312;
	// end inline asm
	shl.b32 	%r5912, %r5905, 4;
	// begin inline asm
	lop3.b32 %r5909, %r2318, %r5901, %r5912, 202;
	// end inline asm
	xor.b32  	%r7865, %r5909, -2004318072;
	// begin inline asm
	mov.b32 %r5916, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5914, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5915, %r5916, %r5914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5781, %r5915;
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5916, %r5921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5789, %r5922;
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5916, %r5928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5797, %r5929;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5916, %r5935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5805, %r5936;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5942, %r5918, %r5932, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5946, %r5925, %r5939, %r2312;
	// end inline asm
	shl.b32 	%r5953, %r5946, 4;
	// begin inline asm
	lop3.b32 %r5950, %r2318, %r5942, %r5953, 202;
	// end inline asm
	xor.b32  	%r7866, %r5950, -2004318072;
	// begin inline asm
	mov.b32 %r5957, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5955, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5956, %r5957, %r5955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5813, %r5956;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5957, %r5962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5821, %r5963;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5957, %r5969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5829, %r5970;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5957, %r5976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5980, %r5837, %r5977;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5983, %r5959, %r5973, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5987, %r5966, %r5980, %r2312;
	// end inline asm
	shl.b32 	%r5994, %r5987, 4;
	// begin inline asm
	lop3.b32 %r5991, %r2318, %r5983, %r5994, 202;
	// end inline asm
	xor.b32  	%r7867, %r5991, -2004318072;
	// begin inline asm
	mov.b32 %r5998, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5997, %r5998, %r5996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5845, %r5997;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r5998, %r6003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6007, %r5853, %r6004;
	// end inline asm
	// begin inline asm
	mov.b32 %r6010, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6011, %r5998, %r6010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r5861, %r6011;
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6018, %r5998, %r6017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6021, %r5869, %r6018;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6024, %r6000, %r6014, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6028, %r6007, %r6021, %r2312;
	// end inline asm
	shl.b32 	%r6035, %r6028, 4;
	// begin inline asm
	lop3.b32 %r6032, %r2318, %r6024, %r6035, 202;
	// end inline asm
	xor.b32  	%r7868, %r6032, -2004318072;
	st.shared.u32 	[%rd154], %r7865;
	st.shared.u32 	[%rd155], %r7866;
	st.shared.u32 	[%rd156], %r7867;
	st.shared.u32 	[%rd157], %r7868;
	ld.shared.u32 	%r7997, [%rd91];
	ld.shared.u32 	%r7996, [%rd93];
	ld.shared.u32 	%r7995, [%rd95];
	ld.shared.u32 	%r7994, [%rd97];
	// begin inline asm
	mov.b32 %r6041, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6052, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r6040, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r6038, %r651, %r6040, %r6041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6042, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6043, %r6041, %r6042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6046, %r6038, %r6043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6049, %r662, %r6040, %r6052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6053, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6054, %r6052, %r6053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6057, %r6049, %r6054;
	// end inline asm
	shr.u32 	%r6062, %r6040, 8;
	// begin inline asm
	lop3.b32 %r6060, %r651, %r6062, %r6041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6064, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6065, %r6041, %r6064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6068, %r6060, %r6065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6071, %r662, %r6062, %r6052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6075, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6076, %r6052, %r6075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6079, %r6071, %r6076;
	// end inline asm
	// begin inline asm
	mov.b32 %r6087, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6098, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r6086, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r6084, %r651, %r6086, %r6087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6088, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6089, %r6087, %r6088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6092, %r6084, %r6089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6095, %r662, %r6086, %r6098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6099, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6100, %r6098, %r6099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6103, %r6095, %r6100;
	// end inline asm
	shr.u32 	%r6108, %r6086, 8;
	// begin inline asm
	lop3.b32 %r6106, %r651, %r6108, %r6087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6110, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6111, %r6087, %r6110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6114, %r6106, %r6111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6117, %r662, %r6108, %r6098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6121, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6122, %r6098, %r6121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6125, %r6117, %r6122;
	// end inline asm
	// begin inline asm
	mov.b32 %r6133, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6144, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r6132, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r6130, %r651, %r6132, %r6133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6134, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6135, %r6133, %r6134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6138, %r6130, %r6135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6141, %r662, %r6132, %r6144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6145, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6146, %r6144, %r6145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6149, %r6141, %r6146;
	// end inline asm
	shr.u32 	%r6154, %r6132, 8;
	// begin inline asm
	lop3.b32 %r6152, %r651, %r6154, %r6133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6156, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6157, %r6133, %r6156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6160, %r6152, %r6157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6163, %r662, %r6154, %r6144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6167, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6168, %r6144, %r6167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6171, %r6163, %r6168;
	// end inline asm
	// begin inline asm
	mov.b32 %r6179, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6190, {%rs1114, %rs1114};
	// end inline asm
	xor.b32  	%r6178, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r6176, %r651, %r6178, %r6179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6180, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6181, %r6179, %r6180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6184, %r6176, %r6181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6187, %r662, %r6178, %r6190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6191, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6192, %r6190, %r6191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6195, %r6187, %r6192;
	// end inline asm
	shr.u32 	%r6200, %r6178, 8;
	// begin inline asm
	lop3.b32 %r6198, %r651, %r6200, %r6179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6202, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6203, %r6179, %r6202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6206, %r6198, %r6203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6209, %r662, %r6200, %r6190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6213, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6214, %r6190, %r6213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6217, %r6209, %r6214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6220, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6222, %r6220, %r6046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6225, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6227, %r6225, %r6057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6232, %r6230, %r6068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6235, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6237, %r6235, %r6079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6240, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6242, %r6240, %r6092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6245, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6247, %r6245, %r6103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6250, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6252, %r6250, %r6114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6255, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6257, %r6255, %r6125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6260, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6262, %r6260, %r6138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6265, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6267, %r6265, %r6149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6270, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6272, %r6270, %r6160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6275, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6277, %r6275, %r6171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6280, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6282, %r6280, %r6184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6285, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6287, %r6285, %r6195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6290, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6292, %r6290, %r6206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6295, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6297, %r6295, %r6217;
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r651, %r652, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6305, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r662, %r652, %r6316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6316, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r651, %r674, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6305, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6335, %r662, %r674, %r6316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6340, %r6316, %r6339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6343, %r6335, %r6340;
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r651, %r698, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6351, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r662, %r698, %r6362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6362, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6370, %r651, %r720, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6374, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6375, %r6351, %r6374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6378, %r6370, %r6375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6381, %r662, %r720, %r6362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6386, %r6362, %r6385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6389, %r6381, %r6386;
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6408, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r651, %r744, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6397, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r662, %r744, %r6408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6408, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6416, %r651, %r766, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6420, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6421, %r6397, %r6420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6424, %r6416, %r6421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6427, %r662, %r766, %r6408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6432, %r6408, %r6431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6435, %r6427, %r6432;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r651, %r790, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6443, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r662, %r790, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6454, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r651, %r812, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6443, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r662, %r812, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6454, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6484, %r213, %r6310, %r6222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6488, %r213, %r6321, %r6227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6492, %r213, %r6332, %r6232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6496, %r213, %r6343, %r6237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6500, %r213, %r6356, %r6242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6504, %r213, %r6367, %r6247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6508, %r213, %r6378, %r6252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6512, %r213, %r6389, %r6257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6516, %r213, %r6402, %r6262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6520, %r213, %r6413, %r6267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6524, %r213, %r6424, %r6272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6528, %r213, %r6435, %r6277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6532, %r213, %r6448, %r6282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6536, %r213, %r6459, %r6287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6540, %r213, %r6470, %r6292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6544, %r213, %r6481, %r6297;
	// end inline asm
	// begin inline asm
	mov.b32 %r6553, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r651, %r2448, %r6553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6553, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r662, %r2448, %r6564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6564, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6572, %r651, %r2470, %r6553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6577, %r6553, %r6576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6580, %r6572, %r6577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6583, %r662, %r2470, %r6564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6588, %r6564, %r6587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6591, %r6583, %r6588;
	// end inline asm
	// begin inline asm
	mov.b32 %r6599, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6610, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r651, %r2494, %r6599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6599, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r662, %r2494, %r6610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6610, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6618, %r651, %r2516, %r6599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6622, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6623, %r6599, %r6622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6626, %r6618, %r6623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6629, %r662, %r2516, %r6610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6633, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6634, %r6610, %r6633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6637, %r6629, %r6634;
	// end inline asm
	// begin inline asm
	mov.b32 %r6645, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6656, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6642, %r651, %r2540, %r6645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6646, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6647, %r6645, %r6646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6650, %r6642, %r6647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6653, %r662, %r2540, %r6656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6657, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6658, %r6656, %r6657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6661, %r6653, %r6658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6664, %r651, %r2562, %r6645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6668, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6669, %r6645, %r6668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6672, %r6664, %r6669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6675, %r662, %r2562, %r6656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6679, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6680, %r6656, %r6679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6683, %r6675, %r6680;
	// end inline asm
	// begin inline asm
	mov.b32 %r6691, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6702, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6688, %r651, %r2586, %r6691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6692, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6693, %r6691, %r6692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6696, %r6688, %r6693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6699, %r662, %r2586, %r6702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6703, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6704, %r6702, %r6703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6707, %r6699, %r6704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6710, %r651, %r2608, %r6691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6714, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6715, %r6691, %r6714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6718, %r6710, %r6715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6721, %r662, %r2608, %r6702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6725, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6726, %r6702, %r6725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6729, %r6721, %r6726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6732, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r6732, %r6558, %r6484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6738, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r6738, %r6569, %r6488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6744, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r6744, %r6580, %r6492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6750, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r6750, %r6591, %r6496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6756, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r6756, %r6604, %r6500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6762, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r6762, %r6615, %r6504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r6768, %r6626, %r6508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6774, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r6774, %r6637, %r6512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6780, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r6780, %r6650, %r6516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r6786, %r6661, %r6520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6792, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r6792, %r6672, %r6524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r6798, %r6683, %r6528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r6804, %r6696, %r6532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6810, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r6810, %r6707, %r6536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6816, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r6816, %r6718, %r6540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r6822, %r6729, %r6544;
	// end inline asm
	// begin inline asm
	mov.b32 %r6833, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6844, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6830, %r651, %r4244, %r6833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6834, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6835, %r6833, %r6834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6838, %r6830, %r6835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6841, %r662, %r4244, %r6844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6845, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6846, %r6844, %r6845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6849, %r6841, %r6846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6852, %r651, %r4266, %r6833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6856, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6857, %r6833, %r6856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6860, %r6852, %r6857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6863, %r662, %r4266, %r6844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6867, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6868, %r6844, %r6867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6871, %r6863, %r6868;
	// end inline asm
	// begin inline asm
	mov.b32 %r6879, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6890, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6876, %r651, %r4290, %r6879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6880, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6881, %r6879, %r6880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6884, %r6876, %r6881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6887, %r662, %r4290, %r6890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6891, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6892, %r6890, %r6891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6895, %r6887, %r6892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6898, %r651, %r4312, %r6879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6902, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6903, %r6879, %r6902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6906, %r6898, %r6903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6909, %r662, %r4312, %r6890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6913, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6914, %r6890, %r6913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6917, %r6909, %r6914;
	// end inline asm
	// begin inline asm
	mov.b32 %r6925, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6936, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6922, %r651, %r4336, %r6925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6926, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6927, %r6925, %r6926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6930, %r6922, %r6927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6933, %r662, %r4336, %r6936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6937, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6938, %r6936, %r6937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6941, %r6933, %r6938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6944, %r651, %r4358, %r6925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6948, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6949, %r6925, %r6948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6952, %r6944, %r6949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6955, %r662, %r4358, %r6936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6959, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6960, %r6936, %r6959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6963, %r6955, %r6960;
	// end inline asm
	// begin inline asm
	mov.b32 %r6971, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r6982, {%rs1114, %rs1114};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6968, %r651, %r4382, %r6971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6972, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6973, %r6971, %r6972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6976, %r6968, %r6973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6979, %r662, %r4382, %r6982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6983, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6984, %r6982, %r6983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6987, %r6979, %r6984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6990, %r651, %r4404, %r6971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6994, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6995, %r6971, %r6994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6998, %r6990, %r6995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7001, %r662, %r4404, %r6982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7005, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7006, %r6982, %r7005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7009, %r7001, %r7006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r249, %r6838, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7080, %r249, %r6849, %r6740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7092, %r249, %r6860, %r6746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7089, %r249, %r6871, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7101, %r249, %r6884, %r6758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7098, %r249, %r6895, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7110, %r249, %r6906, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7107, %r249, %r6917, %r6776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r249, %r6930, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7116, %r249, %r6941, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r249, %r6952, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7125, %r249, %r6963, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7137, %r249, %r6976, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7134, %r249, %r6987, %r6812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7146, %r249, %r6998, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7143, %r249, %r7009, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7076, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7078, %r7076, %r7080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7081, %r270, %r7083, %r7078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7085, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7087, %r7085, %r7089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7090, %r270, %r7092, %r7087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7094, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7096, %r7094, %r7098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7099, %r270, %r7101, %r7096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7103, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7105, %r7103, %r7107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7108, %r270, %r7110, %r7105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7112, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7114, %r7112, %r7116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7117, %r270, %r7119, %r7114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7121, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7123, %r7121, %r7125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7126, %r270, %r7128, %r7123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7130, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7132, %r7130, %r7134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7135, %r270, %r7137, %r7132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7139, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7141, %r7139, %r7143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7144, %r270, %r7146, %r7141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7148, %r273, %r7083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7151, %r270, %r7080, %r7148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7155, %r273, %r7092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7158, %r270, %r7089, %r7155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7162, %r273, %r7101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r270, %r7098, %r7162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7169, %r273, %r7110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7172, %r270, %r7107, %r7169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7176, %r273, %r7119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7179, %r270, %r7116, %r7176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7183, %r273, %r7128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7186, %r270, %r7125, %r7183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7190, %r273, %r7137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7193, %r270, %r7134, %r7190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7197, %r273, %r7146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7200, %r270, %r7143, %r7197;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7291, %r7288}, {%r329, %r335, %r332, %r338}, {%r7081, %r7151}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7300, %r7297}, {%r329, %r335, %r332, %r338}, {%r7090, %r7158}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7309, %r7306}, {%r329, %r335, %r332, %r338}, {%r7099, %r7165}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7318, %r7315}, {%r329, %r335, %r332, %r338}, {%r7108, %r7172}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7327, %r7324}, {%r329, %r335, %r332, %r338}, {%r7117, %r7179}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7333}, {%r329, %r335, %r332, %r338}, {%r7126, %r7186}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7345, %r7342}, {%r329, %r335, %r332, %r338}, {%r7135, %r7193}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7354, %r7351}, {%r329, %r335, %r332, %r338}, {%r7144, %r7200}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7284, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r7284, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r373, %r7291, %r7286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7293, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r7293, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r373, %r7300, %r7295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7302, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r7302, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r373, %r7309, %r7304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7311, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r7311, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r373, %r7318, %r7313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7320, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7322, %r7320, %r7324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7325, %r373, %r7327, %r7322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7329, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r7329, %r7333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r373, %r7336, %r7331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7338, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7340, %r7338, %r7342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7343, %r373, %r7345, %r7340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7347, %r376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r7347, %r7351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r373, %r7354, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r376, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r373, %r7288, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r376, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r373, %r7297, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7370, %r376, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7373, %r373, %r7306, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r376, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r373, %r7315, %r7377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r376, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7387, %r373, %r7324, %r7384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r376, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7394, %r373, %r7333, %r7391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r376, %r7345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7401, %r373, %r7342, %r7398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r376, %r7354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7408, %r373, %r7351, %r7405;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7412, %r7413}, {%r407, %r413, %r410, %r416}, {%r7289, %r7359}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7422, %r7423}, {%r407, %r413, %r410, %r416}, {%r7298, %r7366}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7432, %r7433}, {%r407, %r413, %r410, %r416}, {%r7307, %r7373}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7442, %r7443}, {%r407, %r413, %r410, %r416}, {%r7316, %r7380}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7452, %r7453}, {%r407, %r413, %r410, %r416}, {%r7325, %r7387}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7462, %r7463}, {%r407, %r413, %r410, %r416}, {%r7334, %r7394}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7472, %r7473}, {%r407, %r413, %r410, %r416}, {%r7343, %r7401}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7482, %r7483}, {%r407, %r413, %r410, %r416}, {%r7352, %r7408}, {%r7966, %r7966};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7492, %r86, %r7412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7495, %r86, %r7413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7498, %r86, %r7422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7501, %r86, %r7423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7504, %r86, %r7432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7507, %r86, %r7433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7510, %r86, %r7442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7513, %r86, %r7443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7516, %r86, %r7452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7519, %r86, %r7453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7522, %r86, %r7462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7525, %r86, %r7463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7528, %r86, %r7472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7531, %r86, %r7473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7534, %r86, %r7482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7537, %r86, %r7483;
	// end inline asm
	// begin inline asm
	mov.b32 %r7540, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7541, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7542, %r7492, %r7540;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7545, %r7542, %r7541;
	// end inline asm
	// begin inline asm
	mov.b32 %r7548, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7549, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7550, %r7495, %r7548;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7553, %r7550, %r7549;
	// end inline asm
	// begin inline asm
	mov.b32 %r7556, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7557, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7558, %r7498, %r7556;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7561, %r7558, %r7557;
	// end inline asm
	// begin inline asm
	mov.b32 %r7564, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7565, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7566, %r7501, %r7564;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7569, %r7566, %r7565;
	// end inline asm
	// begin inline asm
	mov.b32 %r7572, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7573, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7574, %r7504, %r7572;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7577, %r7574, %r7573;
	// end inline asm
	// begin inline asm
	mov.b32 %r7580, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7581, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7582, %r7507, %r7580;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7585, %r7582, %r7581;
	// end inline asm
	// begin inline asm
	mov.b32 %r7588, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7589, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7590, %r7510, %r7588;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7593, %r7590, %r7589;
	// end inline asm
	// begin inline asm
	mov.b32 %r7596, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7597, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7598, %r7513, %r7596;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7601, %r7598, %r7597;
	// end inline asm
	// begin inline asm
	mov.b32 %r7604, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7605, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7606, %r7516, %r7604;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7609, %r7606, %r7605;
	// end inline asm
	// begin inline asm
	mov.b32 %r7612, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7613, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7614, %r7519, %r7612;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7617, %r7614, %r7613;
	// end inline asm
	// begin inline asm
	mov.b32 %r7620, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7621, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7622, %r7522, %r7620;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7625, %r7622, %r7621;
	// end inline asm
	// begin inline asm
	mov.b32 %r7628, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7629, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7630, %r7525, %r7628;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7633, %r7630, %r7629;
	// end inline asm
	// begin inline asm
	mov.b32 %r7636, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7637, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7638, %r7528, %r7636;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7641, %r7638, %r7637;
	// end inline asm
	// begin inline asm
	mov.b32 %r7644, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7645, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7646, %r7531, %r7644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7649, %r7646, %r7645;
	// end inline asm
	// begin inline asm
	mov.b32 %r7652, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7653, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7654, %r7534, %r7652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7657, %r7654, %r7653;
	// end inline asm
	// begin inline asm
	mov.b32 %r7660, {%rs235, %rs235};
	// end inline asm
	// begin inline asm
	mov.b32 %r7661, {%rs237, %rs237};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7662, %r7537, %r7660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7665, %r7662, %r7661;
	// end inline asm
	// begin inline asm
	mov.b32 %r7671, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r7669, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7671, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7545, %r7670;
	// end inline asm
	// begin inline asm
	mov.b32 %r7676, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7671, %r7676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7553, %r7677;
	// end inline asm
	// begin inline asm
	mov.b32 %r7683, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7671, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7561, %r7684;
	// end inline asm
	// begin inline asm
	mov.b32 %r7690, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7671, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7569, %r7691;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7697, %r7673, %r7687, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7701, %r7680, %r7694, %r2312;
	// end inline asm
	shl.b32 	%r7708, %r7701, 4;
	// begin inline asm
	lop3.b32 %r7705, %r2318, %r7697, %r7708, 202;
	// end inline asm
	xor.b32  	%r7869, %r7705, -2004318072;
	// begin inline asm
	mov.b32 %r7712, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r7710, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7711, %r7712, %r7710;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7577, %r7711;
	// end inline asm
	// begin inline asm
	mov.b32 %r7717, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7712, %r7717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7585, %r7718;
	// end inline asm
	// begin inline asm
	mov.b32 %r7724, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7712, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7593, %r7725;
	// end inline asm
	// begin inline asm
	mov.b32 %r7731, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7732, %r7712, %r7731;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7601, %r7732;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7738, %r7714, %r7728, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7742, %r7721, %r7735, %r2312;
	// end inline asm
	shl.b32 	%r7749, %r7742, 4;
	// begin inline asm
	lop3.b32 %r7746, %r2318, %r7738, %r7749, 202;
	// end inline asm
	xor.b32  	%r7870, %r7746, -2004318072;
	// begin inline asm
	mov.b32 %r7753, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r7751, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7753, %r7751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7609, %r7752;
	// end inline asm
	// begin inline asm
	mov.b32 %r7758, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7753, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7617, %r7759;
	// end inline asm
	// begin inline asm
	mov.b32 %r7765, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7766, %r7753, %r7765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7769, %r7625, %r7766;
	// end inline asm
	// begin inline asm
	mov.b32 %r7772, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7753, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7633, %r7773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7779, %r7755, %r7769, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7783, %r7762, %r7776, %r2312;
	// end inline asm
	shl.b32 	%r7790, %r7783, 4;
	// begin inline asm
	lop3.b32 %r7787, %r2318, %r7779, %r7790, 202;
	// end inline asm
	xor.b32  	%r7871, %r7787, -2004318072;
	// begin inline asm
	mov.b32 %r7794, {%rs1218, %rs1218};
	// end inline asm
	// begin inline asm
	mov.b32 %r7792, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7793, %r7794, %r7792;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7796, %r7641, %r7793;
	// end inline asm
	// begin inline asm
	mov.b32 %r7799, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7800, %r7794, %r7799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7803, %r7649, %r7800;
	// end inline asm
	// begin inline asm
	mov.b32 %r7806, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7807, %r7794, %r7806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7810, %r7657, %r7807;
	// end inline asm
	// begin inline asm
	mov.b32 %r7813, {%rs47, %rs47};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7814, %r7794, %r7813;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7817, %r7665, %r7814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7820, %r7796, %r7810, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7824, %r7803, %r7817, %r2312;
	// end inline asm
	shl.b32 	%r7831, %r7824, 4;
	// begin inline asm
	lop3.b32 %r7828, %r2318, %r7820, %r7831, 202;
	// end inline asm
	xor.b32  	%r7872, %r7828, -2004318072;
	st.shared.u32 	[%rd154], %r7869;
	st.shared.u32 	[%rd155], %r7870;
	st.shared.u32 	[%rd156], %r7871;
	st.shared.u32 	[%rd157], %r7872;
	add.s32 	%r7993, %r7993, 64;
	add.s64 	%rd157, %rd157, 8324;
	add.s64 	%rd156, %rd156, 8324;
	add.s64 	%rd155, %rd155, 8324;
	add.s64 	%rd154, %rd154, 8324;
	add.s32 	%r7992, %r7992, 1;
	setp.eq.s32 	%p217, %r7993, 256;
	@%p217 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit17352
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7878, [%rd5];
	ld.shared.u32 	%r7879, [%rd6+128];
	ld.shared.u32 	%r7886, [%rd6+4];
	ld.shared.u32 	%r7887, [%rd6+132];
	ld.shared.u32 	%r7894, [%rd5+8324];
	ld.shared.u32 	%r7895, [%rd6+8452];
	ld.shared.u32 	%r7902, [%rd6+8328];
	ld.shared.u32 	%r7903, [%rd6+8456];
	ld.shared.u32 	%r7910, [%rd5+16648];
	ld.shared.u32 	%r7911, [%rd6+16776];
	ld.shared.u32 	%r7918, [%rd6+16652];
	ld.shared.u32 	%r7919, [%rd6+16780];
	ld.shared.u32 	%r7926, [%rd5+24972];
	ld.shared.u32 	%r7927, [%rd6+25100];
	ld.shared.u32 	%r7934, [%rd6+24976];
	ld.shared.u32 	%r7935, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7873, %r7878, %r7879, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7877, %r7878, %r7879, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7881, %r7886, %r7887, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7885, %r7886, %r7887, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7889, %r7894, %r7895, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7893, %r7894, %r7895, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7897, %r7902, %r7903, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7901, %r7902, %r7903, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7905, %r7910, %r7911, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7909, %r7910, %r7911, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7913, %r7918, %r7919, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7917, %r7918, %r7919, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7921, %r7926, %r7927, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7925, %r7926, %r7927, %r567;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7929, %r7934, %r7935, %r563;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r567;
	// end inline asm
	selp.b32 	%r7937, %r7877, %r7873, %p204;
	shfl.sync.bfly.b32	%r153, %r7937, 8, 31, -1;
	selp.b32 	%r7938, %r7885, %r7881, %p204;
	shfl.sync.bfly.b32	%r154, %r7938, 8, 31, -1;
	selp.b32 	%r7939, %r7893, %r7889, %p204;
	shfl.sync.bfly.b32	%r7940, %r7939, 8, 31, -1;
	selp.b32 	%r7941, %r7901, %r7897, %p204;
	shfl.sync.bfly.b32	%r7942, %r7941, 8, 31, -1;
	selp.b32 	%r7943, %r7909, %r7905, %p204;
	shfl.sync.bfly.b32	%r7944, %r7943, 8, 31, -1;
	selp.b32 	%r7945, %r7917, %r7913, %p204;
	shfl.sync.bfly.b32	%r7946, %r7945, 8, 31, -1;
	selp.b32 	%r7947, %r7925, %r7921, %p204;
	shfl.sync.bfly.b32	%r7948, %r7947, 8, 31, -1;
	selp.b32 	%r7949, %r7933, %r7929, %p204;
	shfl.sync.bfly.b32	%r7950, %r7949, 8, 31, -1;
	setp.eq.s32 	%p219, %r7985, 0;
	@%p219 bra 	$L__BB0_86;
// %bb.122:                             // %pass16539
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r7951, %r154, %r7885, %p204;
	selp.b32 	%r7952, %r7881, %r154, %p204;
	selp.b32 	%r7953, %r153, %r7877, %p204;
	selp.b32 	%r7954, %r7873, %r153, %p204;
	mul.lo.s32 	%r7955, %r74, 786432;
	or.b32  	%r7956, %r7955, %r53;
	cvt.u64.u32 	%rd98, %r7956;
	add.s64 	%rd99, %rd98, %rd7;
	mul.hi.s64 	%rd100, %rd99, 3074457345618258603;
	shr.u64 	%rd101, %rd100, 63;
	shr.s64 	%rd102, %rd100, 26;
	add.s64 	%rd103, %rd102, %rd101;
	setp.lt.s64 	%p221, %rd99, 0;
	mul.lo.s64 	%rd104, %rd103, 402653184;
	setp.ne.s64 	%p222, %rd104, %rd99;
	and.pred  	%p223, %p221, %p222;
	selp.s64 	%rd105, -1, 0, %p223;
	add.s64 	%rd106, %rd103, %rd105;
	mul.lo.s64 	%rd107, %rd106, 4611686018024734720;
	add.s64 	%rd108, %rd107, %rd99;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd110, %rd3, %rd109;
	st.global.v4.u32 	[%rd110], {%r7954, %r7952, %r7953, %r7951};
$L__BB0_86:                             // %L39860
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7957, %r7985, 64;
	setp.gt.u32 	%p224, %r7957, 191;
	@%p224 bra 	$L__BB0_120;
	bra.uni 	$L__BB0_87;
$L__BB0_120:                            // %pass16646
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r146, %r74, 1;
	selp.b32 	%r155, %r7889, %r7940, %p204;
	selp.b32 	%r156, %r7940, %r7893, %p204;
	selp.b32 	%r157, %r7897, %r7942, %p204;
	selp.b32 	%r158, %r7942, %r7901, %p204;
	mad.lo.s32 	%r7958, %r146, 786432, %r54;
	cvt.u64.u32 	%rd111, %r7958;
	add.s64 	%rd112, %rd111, %rd7;
	mul.hi.s64 	%rd113, %rd112, 3074457345618258603;
	shr.u64 	%rd114, %rd113, 63;
	shr.s64 	%rd115, %rd113, 26;
	add.s64 	%rd116, %rd115, %rd114;
	setp.lt.s64 	%p225, %rd112, 0;
	mul.lo.s64 	%rd117, %rd116, 402653184;
	setp.ne.s64 	%p226, %rd117, %rd112;
	and.pred  	%p227, %p225, %p226;
	selp.s64 	%rd118, -1, 0, %p227;
	add.s64 	%rd119, %rd116, %rd118;
	mul.lo.s64 	%rd120, %rd119, 4611686018024734720;
	add.s64 	%rd121, %rd120, %rd112;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.v4.u32 	[%rd123], {%r155, %r157, %r156, %r158};
$L__BB0_87:                             // %L40078
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r148, %r74, 3;
	selp.b32 	%r163, %r7921, %r7948, %p204;
	selp.b32 	%r164, %r7948, %r7925, %p204;
	selp.b32 	%r165, %r7929, %r7950, %p204;
	selp.b32 	%r166, %r7950, %r7933, %p204;
	or.b32  	%r7959, %r7985, 128;
	setp.gt.u32 	%p228, %r7959, 191;
	@%p228 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_88;
$L__BB0_121:                            // %pass16753
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r147, %r74, 2;
	selp.b32 	%r159, %r7905, %r7944, %p204;
	selp.b32 	%r160, %r7944, %r7909, %p204;
	selp.b32 	%r161, %r7913, %r7946, %p204;
	selp.b32 	%r162, %r7946, %r7917, %p204;
	mad.lo.s32 	%r7960, %r147, 786432, %r54;
	cvt.u64.u32 	%rd124, %r7960;
	add.s64 	%rd125, %rd124, %rd7;
	mul.hi.s64 	%rd126, %rd125, 3074457345618258603;
	shr.u64 	%rd127, %rd126, 63;
	shr.s64 	%rd128, %rd126, 26;
	add.s64 	%rd129, %rd128, %rd127;
	setp.lt.s64 	%p229, %rd125, 0;
	mul.lo.s64 	%rd130, %rd129, 402653184;
	setp.ne.s64 	%p230, %rd130, %rd125;
	and.pred  	%p231, %p229, %p230;
	selp.s64 	%rd131, -1, 0, %p231;
	add.s64 	%rd132, %rd129, %rd131;
	mul.lo.s64 	%rd133, %rd132, 4611686018024734720;
	add.s64 	%rd134, %rd133, %rd125;
	shl.b64 	%rd135, %rd134, 2;
	add.s64 	%rd136, %rd3, %rd135;
	st.global.v4.u32 	[%rd136], {%r159, %r161, %r160, %r162};
	bra.uni 	$L__BB0_88;
$L__BB0_89:                             // %L40525
	st.global.u32 	[%rd4], %r7966;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r7965, 2;
	st.global.u32 	[%rd4], %r7965;
	mov.u64 	%rd152, exception3410;
	cvta.global.u64 	%rd153, %rd152;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd153;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r167;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7964, 3;
	st.global.u32 	[%rd4], %r7964;
	mov.u64 	%rd150, exception3410;
	cvta.global.u64 	%rd151, %rd150;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd151;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r167;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd41, exception1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r167;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
