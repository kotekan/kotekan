// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_10147
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_10158
(
	.param .align 8 .b8 julia_power_by_squaring_10158_param_0[16],
	.param .b64 julia_power_by_squaring_10158_param_1,
	.param .b64 julia_power_by_squaring_10158_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2333[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12354[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7825>;
	.reg .f32 	%f<922>;
	.reg .b64 	%rd<110>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r166, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r167, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r167, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r168, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r169, %r168, %r4;
	or.b32  	%r170, %r169, %r2;
	mul.wide.u32 	%rd45, %r170, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r171, 1;
	st.global.u32 	[%rd4], %r171;
	ld.global.u32 	%r5, [%rd23];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd27, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd27];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd31, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd31];
	sub.s32 	%r172, %r6, %r5;
	and.b32  	%r173, %r172, 255;
	setp.ne.s32 	%p6, %r173, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd35];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	not.b32 	%r174, %r7;
	add.s32 	%r175, %r174, %r8;
	and.b32  	%r176, %r175, 3;
	setp.eq.s32 	%p12, %r176, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r17, %r4, 1, 1;
	and.b32  	%r18, %r4, 1;
	bfe.u32 	%r20, %r4, 2, 1;
	shr.u32 	%r21, %r4, 4;
	shl.b32 	%r182, %r21, 1;
	shl.b32 	%r183, %r20, 2;
	shl.b32 	%r184, %r18, 3;
	shl.b32 	%r185, %r17, 4;
	or.b32  	%r186, %r184, %r185;
	or.b32  	%r187, %r183, %r186;
	or.b32  	%r188, %r182, %r187;
	bfe.u32 	%r23, %r4, 3, 1;
	or.b32  	%r24, %r23, %r188;
	or.b32  	%r25, %r24, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r24;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f889, 0f3F800000;
	mov.f32 	%f882, %f889;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L552
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f882, %f218, %f3;
LBB0_10:                                // %L555
	cvt.rn.f32.s32 	%f221, %r25;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f883, %f889;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L572
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f883, %f252, %f8;
LBB0_12:                                // %L575
	or.b32  	%r206, %r24, 64;
	or.b32  	%r27, %r24, 96;
	cvt.rn.f32.s32 	%f256, %r206;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f884, %f889;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L654
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f884, %f287, %f12;
LBB0_14:                                // %L657
	cvt.rn.f32.s32 	%f290, %r27;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f885, %f889;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L674
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f885, %f321, %f17;
LBB0_16:                                // %L677
	shl.b32 	%r10, %r4, 2;
	or.b32  	%r224, %r24, 128;
	or.b32  	%r29, %r24, 160;
	cvt.rn.f32.s32 	%f325, %r224;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f886, %f889;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L756
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f886, %f356, %f21;
LBB0_18:                                // %L759
	and.b32  	%r11, %r10, 32;
	and.b32  	%r14, %r4, 18;
	cvt.rn.f32.s32 	%f359, %r29;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f887, %f889;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L776
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f887, %f390, %f26;
LBB0_20:                                // %L779
	and.b32  	%r12, %r10, 4;
	shl.b32 	%r177, %r4, 1;
	or.b32  	%r178, %r14, %r11;
	or.b32  	%r242, %r24, 192;
	or.b32  	%r31, %r24, 224;
	cvt.rn.f32.s32 	%f394, %r242;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f888, %f889;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L858
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f888, %f425, %f30;
LBB0_22:                                // %L861
	and.b32  	%r13, %r177, 8;
	or.b32  	%r179, %r178, %r12;
	cvt.rn.f32.s32 	%f428, %r31;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L878
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f889, %f459, %f35;
LBB0_24:                                // %L881
	or.b32  	%r180, %r179, %r13;
	mul.lo.s32 	%r33, %r24, 63;
	cvt.rn.f32.s32 	%f462, %r33;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f892, %f38;
	setp.lt.f32 	%p61, %f892, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f892, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r35, %f892;
	and.b32  	%r260, %r35, 8388607;
	or.b32  	%r7783, %r260, 1065353216;
	mov.b32 	%f891, %r7783;
	add.s32 	%r261, %r35, -1073741824;
	and.b32  	%r7784, %r261, -8388608;
	setp.eq.s32 	%p68, %r7784, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r262, %r7784, 192937984;
	add.s32 	%r263, %r262, %r7783;
	mov.b32 	%f474, %r263;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f891, %f474, %f480;
	sub.s32 	%r7784, %r7784, %r262;
	mov.b32 	%r7783, %f891;
	setp.ne.s32 	%p69, %r7784, 0;
	setp.ne.s32 	%p70, %r7783, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r35, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f482, %f891, 0f34000000;
	mul.f32 	%f892, %f481, %f482;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f892, %f185;
	cvt.rzi.f32.f32 	%f890, %f465;
	fma.rn.f32 	%f41, %f890, 0fC0000000, %f892;
	mov.b32 	%r34, %f41;
	setp.lt.u32 	%p63, %r34, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r34, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f470, %f890, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f890, %f471, %f470, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f890, %f890, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f890, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f890, %f469, %f466, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f892;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r181, %r180, 1;
	abs.f32 	%f483, %f892;
	setp.gtu.f32 	%p73, %f483, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r264, %f38;
	and.b32  	%r265, %r264, -2147483648;
	mov.b32 	%r266, %f892;
	or.b32  	%r267, %r265, %r266;
	mov.b32 	%f892, %r267;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd46, %r181, 4;
	add.s32 	%r276, %r33, 2016;
	cvt.rn.f32.s32 	%f514, %r276;
	div.approx.f32 	%f57, %f514, %f217;
	abs.f32 	%f896, %f57;
	setp.lt.f32 	%p81, %f896, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f896, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r43, %f896;
	and.b32  	%r277, %r43, 8388607;
	or.b32  	%r7785, %r277, 1065353216;
	mov.b32 	%f895, %r7785;
	add.s32 	%r278, %r43, -1073741824;
	and.b32  	%r7786, %r278, -8388608;
	setp.eq.s32 	%p88, %r7786, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i1163.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i1163
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r279, %r7786, 192937984;
	add.s32 	%r280, %r279, %r7785;
	mov.b32 	%f526, %r280;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f895, %f526, %f532;
	sub.s32 	%r7786, %r7786, %r279;
	mov.b32 	%r7785, %f895;
	setp.ne.s32 	%p89, %r7786, 0;
	setp.ne.s32 	%p90, %r7785, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1165
	setp.gt.u32 	%p92, %r43, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f534, %f895, 0f34000000;
	mul.f32 	%f896, %f533, %f534;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1135
	div.approx.f32 	%f517, %f896, %f185;
	cvt.rzi.f32.f32 	%f894, %f517;
	fma.rn.f32 	%f60, %f894, 0fC0000000, %f896;
	mov.b32 	%r42, %f60;
	setp.lt.u32 	%p83, %r42, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r42, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f522, %f894, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f523, %f522, 0fBF800000;
	selp.f32 	%f894, %f523, %f522, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f894, %f894, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1140
	add.f32 	%f518, %f894, 0f3F800000;
	fma.rn.f32 	%f520, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f520, 0f00000000;
	add.f32 	%f521, %f518, 0f3F800000;
	selp.f32 	%f894, %f521, %f518, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1144
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f896;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1169
	add.s64 	%rd47, %rd1, %rd46;
	abs.f32 	%f535, %f896;
	setp.gtu.f32 	%p93, %f535, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r281, %f57;
	and.b32  	%r282, %r281, -2147483648;
	mov.b32 	%r283, %f896;
	or.b32  	%r284, %r282, %r283;
	mov.b32 	%f896, %r284;
LBB0_52:                                // %__nv_fmodf.exit1170
	ld.global.u32 	%r15, [%rd47];
	mov.u64 	%rd48, 2;
	mov.u64 	%rd49, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10158, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd50, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd50, 64;
	@%p101 bra 	LBB0_124;
// %bb.53:                              // %L978
	shr.u32 	%r19, %r4, 2;
	and.b32  	%r299, %r4, 3;
	shl.b32 	%r300, %r299, 1;
	neg.s32 	%r52, %r300;
	mul.lo.s32 	%r53, %r52, %r19;
	cvt.rn.f32.s32 	%f74, %r53;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f75, %f74, %f568;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r55, %f900;
	and.b32  	%r301, %r55, 8388607;
	or.b32  	%r7787, %r301, 1065353216;
	mov.b32 	%f899, %r7787;
	add.s32 	%r302, %r55, -1073741824;
	and.b32  	%r7788, %r302, -8388608;
	setp.eq.s32 	%p109, %r7788, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %__nv_fmaf_rn.exit4.i.i.i1209.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
LBB0_63:                                // %__nv_fmaf_rn.exit4.i.i.i1209
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r303, %r7788, 192937984;
	add.s32 	%r304, %r303, %r7787;
	mov.b32 	%f579, %r304;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f899, %f579, %f585;
	sub.s32 	%r7788, %r7788, %r303;
	mov.b32 	%r7787, %f899;
	setp.ne.s32 	%p110, %r7788, 0;
	setp.ne.s32 	%p111, %r7787, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1211
	setp.gt.u32 	%p113, %r55, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f587, %f899, 0f34000000;
	mul.f32 	%f900, %f586, %f587;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1181
	div.approx.f32 	%f570, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f570;
	fma.rn.f32 	%f78, %f898, 0fC0000000, %f900;
	mov.b32 	%r54, %f78;
	setp.lt.u32 	%p104, %r54, 1073741824;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r54, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f575, %f898, 0fBF800000;
	setp.lt.f32 	%p108, %f78, 0fC0000000;
	add.f32 	%f576, %f575, 0fBF800000;
	selp.f32 	%f898, %f576, %f575, %p108;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p106, %f78, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1186
	add.f32 	%f571, %f898, 0f3F800000;
	fma.rn.f32 	%f573, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p107, %f573, 0f00000000;
	add.f32 	%f574, %f571, 0f3F800000;
	selp.f32 	%f898, %f574, %f571, %p107;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1190
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1215
	abs.f32 	%f588, %f900;
	setp.gtu.f32 	%p114, %f588, 0f7F800000;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r305, %f75;
	and.b32  	%r306, %r305, -2147483648;
	mov.b32 	%r307, %f900;
	or.b32  	%r308, %r306, %r307;
	mov.b32 	%f900, %r308;
LBB0_67:                                // %__nv_fmodf.exit1216
	shl.b32 	%r317, %r19, 3;
	sub.s32 	%r318, %r53, %r317;
	cvt.rn.f32.s32 	%f94, %r318;
	div.approx.f32 	%f95, %f94, %f568;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r63, %f904;
	and.b32  	%r319, %r63, 8388607;
	or.b32  	%r7789, %r319, 1065353216;
	mov.b32 	%f903, %r7789;
	add.s32 	%r320, %r63, -1073741824;
	and.b32  	%r7790, %r320, -8388608;
	setp.eq.s32 	%p129, %r7790, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i1255.preheader
	mov.f32 	%f629, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f628,%f629;
	// end inline asm
LBB0_77:                                // %__nv_fmaf_rn.exit4.i.i.i1255
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r321, %r7790, 192937984;
	add.s32 	%r322, %r321, %r7789;
	mov.b32 	%f630, %r322;
	mul.f32 	%f631, %f628, %f630;
	sub.f32 	%f632, %f630, %f631;
	fma.rn.f32 	%f633, %f632, %f628, %f631;
	sub.f32 	%f634, %f630, %f633;
	fma.rz.f32 	%f635, %f634, %f628, %f633;
	cvt.rzi.f32.f32 	%f636, %f635;
	sub.f32 	%f903, %f630, %f636;
	sub.s32 	%r7790, %r7790, %r321;
	mov.b32 	%r7789, %f903;
	setp.ne.s32 	%p130, %r7790, 0;
	setp.ne.s32 	%p131, %r7789, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1257
	setp.gt.u32 	%p133, %r63, 2139095039;
	selp.f32 	%f637, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f638, %f903, 0f34000000;
	mul.f32 	%f904, %f637, %f638;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1227
	div.approx.f32 	%f621, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f621;
	fma.rn.f32 	%f98, %f902, 0fC0000000, %f904;
	mov.b32 	%r62, %f98;
	setp.lt.u32 	%p124, %r62, 1073741824;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r62, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f626, %f902, 0fBF800000;
	setp.lt.f32 	%p128, %f98, 0fC0000000;
	add.f32 	%f627, %f626, 0fBF800000;
	selp.f32 	%f902, %f627, %f626, %p128;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p126, %f98, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1232
	add.f32 	%f622, %f902, 0f3F800000;
	fma.rn.f32 	%f624, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p127, %f624, 0f00000000;
	add.f32 	%f625, %f622, 0f3F800000;
	selp.f32 	%f902, %f625, %f622, %p127;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1236
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1261
	abs.f32 	%f639, %f904;
	setp.gtu.f32 	%p134, %f639, 0f7F800000;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r323, %f95;
	and.b32  	%r324, %r323, -2147483648;
	mov.b32 	%r325, %f904;
	or.b32  	%r326, %r324, %r325;
	mov.b32 	%f904, %r326;
LBB0_81:                                // %__nv_fmodf.exit1262
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10158, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd56, [retval0+0];
	} // callseq 6
	setp.ne.s64 	%p142, %rd56, 64;
	@%p142 bra 	LBB0_123;
// %bb.82:                              // %L1116
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10158, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 10
	cvt.rn.f32.s64 	%f672, %rd62;
	div.approx.f32 	%f112, %f74, %f672;
	abs.f32 	%f916, %f112;
	setp.lt.f32 	%p143, %f916, 0f40000000;
	@%p143 bra 	LBB0_132;
// %bb.83:
	setp.gtu.f32 	%p144, %f916, 0f4B800000;
	@%p144 bra 	LBB0_128;
	bra.uni 	LBB0_84;
LBB0_128:
	mov.b32 	%r143, %f916;
	and.b32  	%r347, %r143, 8388607;
	or.b32  	%r7821, %r347, 1065353216;
	mov.b32 	%f915, %r7821;
	add.s32 	%r348, %r143, -1073741824;
	and.b32  	%r7822, %r348, -8388608;
	setp.eq.s32 	%p150, %r7822, 0;
	@%p150 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1393.preheader
	mov.f32 	%f682, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f681,%f682;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i1393
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r349, %r7822, 192937984;
	add.s32 	%r350, %r349, %r7821;
	mov.b32 	%f683, %r350;
	mul.f32 	%f684, %f681, %f683;
	sub.f32 	%f685, %f683, %f684;
	fma.rn.f32 	%f686, %f685, %f681, %f684;
	sub.f32 	%f687, %f683, %f686;
	fma.rz.f32 	%f688, %f687, %f681, %f686;
	cvt.rzi.f32.f32 	%f689, %f688;
	sub.f32 	%f915, %f683, %f689;
	sub.s32 	%r7822, %r7822, %r349;
	mov.b32 	%r7821, %f915;
	setp.ne.s32 	%p151, %r7822, 0;
	setp.ne.s32 	%p152, %r7821, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i1395
	setp.gt.u32 	%p154, %r143, 2139095039;
	selp.f32 	%f690, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f691, %f915, 0f34000000;
	mul.f32 	%f916, %f690, %f691;
	bra.uni 	LBB0_132;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1365
	div.approx.f32 	%f674, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f674;
	fma.rn.f32 	%f151, %f914, 0fC0000000, %f916;
	mov.b32 	%r142, %f151;
	setp.lt.u32 	%p145, %r142, 1073741824;
	@%p145 bra 	LBB0_127;
// %bb.85:
	setp.lt.u32 	%p146, %r142, -2147483647;
	@%p146 bra 	LBB0_125;
// %bb.86:
	add.f32 	%f679, %f914, 0fBF800000;
	setp.lt.f32 	%p149, %f151, 0fC0000000;
	add.f32 	%f680, %f679, 0fBF800000;
	selp.f32 	%f914, %f680, %f679, %p149;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p147, %f151, 0f40800000;
	@%p147 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1370
	add.f32 	%f675, %f914, 0f3F800000;
	fma.rn.f32 	%f677, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p148, %f677, 0f00000000;
	add.f32 	%f678, %f675, 0f3F800000;
	selp.f32 	%f914, %f678, %f675, %p148;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i1374
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i1399
	abs.f32 	%f692, %f916;
	setp.gtu.f32 	%p155, %f692, 0f7F800000;
	@%p155 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r351, %f112;
	and.b32  	%r352, %r351, -2147483648;
	mov.b32 	%r353, %f916;
	or.b32  	%r354, %r352, %r353;
	mov.b32 	%f916, %r354;
LBB0_134:                               // %__nv_fmodf.exit1400
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10158, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd66, [retval0+0];
	} // callseq 11
	cvt.rn.f32.s64 	%f723, %rd66;
	div.approx.f32 	%f167, %f94, %f723;
	abs.f32 	%f920, %f167;
	setp.lt.f32 	%p163, %f920, 0f40000000;
	@%p163 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p164, %f920, 0f4B800000;
	@%p164 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r151, %f920;
	and.b32  	%r363, %r151, 8388607;
	or.b32  	%r7823, %r363, 1065353216;
	mov.b32 	%f919, %r7823;
	add.s32 	%r364, %r151, -1073741824;
	and.b32  	%r7824, %r364, -8388608;
	setp.eq.s32 	%p170, %r7824, 0;
	@%p170 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i1439.preheader
	mov.f32 	%f733, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f732,%f733;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i1439
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r365, %r7824, 192937984;
	add.s32 	%r366, %r365, %r7823;
	mov.b32 	%f734, %r366;
	mul.f32 	%f735, %f732, %f734;
	sub.f32 	%f736, %f734, %f735;
	fma.rn.f32 	%f737, %f736, %f732, %f735;
	sub.f32 	%f738, %f734, %f737;
	fma.rz.f32 	%f739, %f738, %f732, %f737;
	cvt.rzi.f32.f32 	%f740, %f739;
	sub.f32 	%f919, %f734, %f740;
	sub.s32 	%r7824, %r7824, %r365;
	mov.b32 	%r7823, %f919;
	setp.ne.s32 	%p171, %r7824, 0;
	setp.ne.s32 	%p172, %r7823, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i1441
	setp.gt.u32 	%p174, %r151, 2139095039;
	selp.f32 	%f741, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f742, %f919, 0f34000000;
	mul.f32 	%f920, %f741, %f742;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i1411
	div.approx.f32 	%f725, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f725;
	fma.rn.f32 	%f170, %f918, 0fC0000000, %f920;
	mov.b32 	%r150, %f170;
	setp.lt.u32 	%p165, %r150, 1073741824;
	@%p165 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p166, %r150, -2147483647;
	@%p166 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f730, %f918, 0fBF800000;
	setp.lt.f32 	%p169, %f170, 0fC0000000;
	add.f32 	%f731, %f730, 0fBF800000;
	selp.f32 	%f918, %f731, %f730, %p169;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p167, %f170, 0f40800000;
	@%p167 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i1416
	add.f32 	%f726, %f918, 0f3F800000;
	fma.rn.f32 	%f728, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p168, %f728, 0f00000000;
	add.f32 	%f729, %f726, 0f3F800000;
	selp.f32 	%f918, %f729, %f726, %p168;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i1420
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i1445
	abs.f32 	%f743, %f920;
	setp.gtu.f32 	%p175, %f743, 0f7F800000;
	@%p175 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r367, %f167;
	and.b32  	%r368, %r367, -2147483648;
	mov.b32 	%r369, %f920;
	or.b32  	%r370, %r368, %r369;
	mov.b32 	%f920, %r370;
LBB0_148:                               // %__nv_fmodf.exit1446
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10158, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd70, [retval0+0];
	} // callseq 12
	setp.eq.s64 	%p183, %rd70, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_149;
LBB0_87:                                // %L1200
	shr.u32 	%r16, %r4, 1;
	shr.u32 	%r22, %r4, 3;
	and.b32  	%r385, %r22, 2;
	and.b32  	%r386, %r16, 4;
	or.b32  	%r387, %r20, %r385;
	or.b32  	%r74, %r387, %r386;
	mul.lo.s32 	%r75, %r52, %r74;
	cvt.rn.f32.s32 	%f776, %r75;
	div.approx.f32 	%f114, %f776, %f568;
	abs.f32 	%f908, %f114;
	setp.lt.f32 	%p184, %f908, 0f40000000;
	@%p184 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f908, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r77, %f908;
	and.b32  	%r388, %r77, 8388607;
	or.b32  	%r7791, %r388, 1065353216;
	mov.b32 	%f907, %r7791;
	add.s32 	%r389, %r77, -1073741824;
	and.b32  	%r7792, %r389, -8388608;
	setp.eq.s32 	%p191, %r7792, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %__nv_fmaf_rn.exit4.i.i.i1301.preheader
	mov.f32 	%f787, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f786,%f787;
	// end inline asm
LBB0_97:                                // %__nv_fmaf_rn.exit4.i.i.i1301
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r390, %r7792, 192937984;
	add.s32 	%r391, %r390, %r7791;
	mov.b32 	%f788, %r391;
	mul.f32 	%f789, %f786, %f788;
	sub.f32 	%f790, %f788, %f789;
	fma.rn.f32 	%f791, %f790, %f786, %f789;
	sub.f32 	%f792, %f788, %f791;
	fma.rz.f32 	%f793, %f792, %f786, %f791;
	cvt.rzi.f32.f32 	%f794, %f793;
	sub.f32 	%f907, %f788, %f794;
	sub.s32 	%r7792, %r7792, %r390;
	mov.b32 	%r7791, %f907;
	setp.ne.s32 	%p192, %r7792, 0;
	setp.ne.s32 	%p193, %r7791, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1303
	setp.gt.u32 	%p195, %r77, 2139095039;
	selp.f32 	%f795, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f796, %f907, 0f34000000;
	mul.f32 	%f908, %f795, %f796;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1273
	div.approx.f32 	%f779, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f779;
	fma.rn.f32 	%f117, %f906, 0fC0000000, %f908;
	mov.b32 	%r76, %f117;
	setp.lt.u32 	%p186, %r76, 1073741824;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r76, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f784, %f906, 0fBF800000;
	setp.lt.f32 	%p190, %f117, 0fC0000000;
	add.f32 	%f785, %f784, 0fBF800000;
	selp.f32 	%f906, %f785, %f784, %p190;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p188, %f117, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1278
	add.f32 	%f780, %f906, 0f3F800000;
	fma.rn.f32 	%f782, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p189, %f782, 0f00000000;
	add.f32 	%f783, %f780, 0f3F800000;
	selp.f32 	%f906, %f783, %f780, %p189;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1282
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1307
	abs.f32 	%f797, %f908;
	setp.gtu.f32 	%p196, %f797, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r392, %f114;
	and.b32  	%r393, %r392, -2147483648;
	mov.b32 	%r394, %f908;
	or.b32  	%r395, %r393, %r394;
	mov.b32 	%f908, %r395;
LBB0_101:                               // %__nv_fmodf.exit1308
	shl.b32 	%r404, %r74, 3;
	sub.s32 	%r405, %r75, %r404;
	cvt.rn.f32.s32 	%f828, %r405;
	div.approx.f32 	%f133, %f828, %f568;
	abs.f32 	%f912, %f133;
	setp.lt.f32 	%p204, %f912, 0f40000000;
	@%p204 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f912, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r85, %f912;
	and.b32  	%r406, %r85, 8388607;
	or.b32  	%r7793, %r406, 1065353216;
	mov.b32 	%f911, %r7793;
	add.s32 	%r407, %r85, -1073741824;
	and.b32  	%r7794, %r407, -8388608;
	setp.eq.s32 	%p211, %r7794, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1347.preheader
	mov.f32 	%f839, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f838,%f839;
	// end inline asm
LBB0_111:                               // %__nv_fmaf_rn.exit4.i.i.i1347
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r408, %r7794, 192937984;
	add.s32 	%r409, %r408, %r7793;
	mov.b32 	%f840, %r409;
	mul.f32 	%f841, %f838, %f840;
	sub.f32 	%f842, %f840, %f841;
	fma.rn.f32 	%f843, %f842, %f838, %f841;
	sub.f32 	%f844, %f840, %f843;
	fma.rz.f32 	%f845, %f844, %f838, %f843;
	cvt.rzi.f32.f32 	%f846, %f845;
	sub.f32 	%f911, %f840, %f846;
	sub.s32 	%r7794, %r7794, %r408;
	mov.b32 	%r7793, %f911;
	setp.ne.s32 	%p212, %r7794, 0;
	setp.ne.s32 	%p213, %r7793, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1349
	setp.gt.u32 	%p215, %r85, 2139095039;
	selp.f32 	%f847, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f848, %f911, 0f34000000;
	mul.f32 	%f912, %f847, %f848;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1319
	div.approx.f32 	%f831, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f831;
	fma.rn.f32 	%f136, %f910, 0fC0000000, %f912;
	mov.b32 	%r84, %f136;
	setp.lt.u32 	%p206, %r84, 1073741824;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r84, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f836, %f910, 0fBF800000;
	setp.lt.f32 	%p210, %f136, 0fC0000000;
	add.f32 	%f837, %f836, 0fBF800000;
	selp.f32 	%f910, %f837, %f836, %p210;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p208, %f136, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1324
	add.f32 	%f832, %f910, 0f3F800000;
	fma.rn.f32 	%f834, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p209, %f834, 0f00000000;
	add.f32 	%f835, %f832, 0f3F800000;
	selp.f32 	%f910, %f835, %f832, %p209;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1328
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1353
	abs.f32 	%f849, %f912;
	setp.gtu.f32 	%p216, %f849, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r410, %f133;
	and.b32  	%r411, %r410, -2147483648;
	mov.b32 	%r412, %f912;
	or.b32  	%r413, %r411, %r412;
	mov.b32 	%f912, %r413;
LBB0_115:                               // %__nv_fmodf.exit1354
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7782, 0;
	@%p224 bra 	LBB0_122;
// %bb.116:                             // %L1370.lr.ph
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	setp.gt.f32 	%p13, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p19, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p25, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p31, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p37, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p43, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p49, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p55, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	selp.f32 	%f193, %f192, %f190, %p13;
	selp.f32 	%f227, %f226, %f224, %p19;
	selp.f32 	%f262, %f261, %f259, %p25;
	selp.f32 	%f296, %f295, %f293, %p31;
	selp.f32 	%f331, %f330, %f328, %p37;
	selp.f32 	%f365, %f364, %f362, %p43;
	selp.f32 	%f400, %f399, %f397, %p49;
	selp.f32 	%f434, %f433, %f431, %p55;
	add.f32 	%f589, %f900, %f900;
	add.f32 	%f640, %f904, %f904;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f484, %f892, %f892;
	add.f32 	%f536, %f896, %f896;
	mov.b32 	%r309, %f589;
	mov.b32 	%r339, %f640;
	add.f32 	%f693, %f916, %f916;
	add.f32 	%f744, %f920, %f920;
	mov.b32 	%r189, %f194;
	mov.b32 	%r196, %f228;
	mov.b32 	%r207, %f263;
	mov.b32 	%r214, %f297;
	mov.b32 	%r225, %f332;
	mov.b32 	%r232, %f366;
	mov.b32 	%r243, %f401;
	mov.b32 	%r250, %f435;
	mov.b32 	%r268, %f484;
	mov.b32 	%r291, %f536;
	and.b32  	%r310, %r309, -2147483648;
	and.b32  	%r340, %r339, -2147483648;
	mov.b32 	%r355, %f693;
	mov.b32 	%r377, %f744;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r197, %r196, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r215, %r214, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r233, %r232, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	and.b32  	%r251, %r250, -2147483648;
	and.b32  	%r269, %r268, -2147483648;
	and.b32  	%r292, %r291, -2147483648;
	or.b32  	%r311, %r310, 1056964608;
	or.b32  	%r341, %r340, 1056964608;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r378, %r377, -2147483648;
	add.f32 	%f798, %f908, %f908;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r198, %r197, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r216, %r215, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r234, %r233, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	or.b32  	%r252, %r251, 1056964608;
	or.b32  	%r270, %r269, 1056964608;
	or.b32  	%r293, %r292, 1056964608;
	mov.b32 	%f590, %r311;
	mov.b32 	%f641, %r341;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r379, %r378, 1056964608;
	mov.b32 	%r396, %f798;
	mov.b32 	%f195, %r191;
	mov.b32 	%f229, %r198;
	mov.b32 	%f264, %r209;
	mov.b32 	%f298, %r216;
	mov.b32 	%f333, %r227;
	mov.b32 	%f367, %r234;
	mov.b32 	%f402, %r245;
	mov.b32 	%f436, %r252;
	mov.b32 	%f485, %r270;
	mov.b32 	%f537, %r293;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f642, %f640, %f641;
	abs.f32 	%f644, %f640;
	mov.b32 	%f694, %r357;
	mov.b32 	%f745, %r379;
	and.b32  	%r397, %r396, -2147483648;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f538, %f536, %f537;
	abs.f32 	%f540, %f536;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p115, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f643, %f642;
	setp.gt.f32 	%p135, %f644, 0f4B000000;
	add.f32 	%f695, %f693, %f694;
	abs.f32 	%f697, %f693;
	add.f32 	%f746, %f744, %f745;
	abs.f32 	%f748, %f744;
	or.b32  	%r398, %r397, 1056964608;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p14, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p20, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p26, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p32, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p38, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p44, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p50, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p56, %f439, 0f4B000000;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p74, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f539, %f538;
	setp.gt.f32 	%p94, %f540, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p115;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p116, %f593, 0f3F000000;
	selp.f32 	%f645, %f640, %f643, %p135;
	cvt.rzi.f32.f32 	%f646, %f640;
	setp.lt.f32 	%p136, %f644, 0f3F000000;
	cvt.rzi.f32.f32 	%f696, %f695;
	setp.gt.f32 	%p156, %f697, 0f4B000000;
	cvt.rzi.f32.f32 	%f747, %f746;
	setp.gt.f32 	%p176, %f748, 0f4B000000;
	mov.b32 	%f799, %r398;
	selp.f32 	%f199, %f194, %f197, %p14;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p15, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p20;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p21, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p26;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p27, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p32;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p33, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p38;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p39, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p44;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p45, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p50;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p51, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p56;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p57, %f439, 0f3F000000;
	selp.f32 	%f489, %f484, %f487, %p74;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p75, %f488, 0f3F000000;
	selp.f32 	%f541, %f536, %f539, %p94;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p95, %f540, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p116;
	selp.f32 	%f647, %f646, %f645, %p136;
	selp.f32 	%f698, %f693, %f696, %p156;
	cvt.rzi.f32.f32 	%f699, %f693;
	setp.lt.f32 	%p157, %f697, 0f3F000000;
	selp.f32 	%f749, %f744, %f747, %p176;
	cvt.rzi.f32.f32 	%f750, %f744;
	setp.lt.f32 	%p177, %f748, 0f3F000000;
	add.f32 	%f800, %f798, %f799;
	abs.f32 	%f802, %f798;
	selp.f32 	%f201, %f200, %f199, %p15;
	selp.f32 	%f235, %f234, %f233, %p21;
	selp.f32 	%f270, %f269, %f268, %p27;
	selp.f32 	%f304, %f303, %f302, %p33;
	selp.f32 	%f339, %f338, %f337, %p39;
	selp.f32 	%f373, %f372, %f371, %p45;
	selp.f32 	%f408, %f407, %f406, %p51;
	selp.f32 	%f442, %f441, %f440, %p57;
	selp.f32 	%f491, %f490, %f489, %p75;
	selp.f32 	%f543, %f542, %f541, %p95;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f900;
	fma.rn.f32 	%f648, %f647, 0fBF000000, %f904;
	selp.f32 	%f700, %f699, %f698, %p157;
	selp.f32 	%f751, %f750, %f749, %p177;
	cvt.rzi.f32.f32 	%f801, %f800;
	setp.gt.f32 	%p197, %f802, 0f4B000000;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f892;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f896;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f649, %f648, %f648;
	fma.rn.f32 	%f701, %f700, 0fBF000000, %f916;
	fma.rn.f32 	%f752, %f751, 0fBF000000, %f920;
	selp.f32 	%f803, %f798, %f801, %p197;
	cvt.rzi.f32.f32 	%f804, %f798;
	setp.lt.f32 	%p198, %f802, 0f3F000000;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f493, %f492, %f492;
	mul.f32 	%f545, %f544, %f544;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f650, %f649, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f651, %f649, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f702, %f701, %f701;
	mul.f32 	%f753, %f752, %f752;
	selp.f32 	%f805, %f804, %f803, %p198;
	cvt.rzi.s32.f32 	%r192, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r199, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r217, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r235, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r246, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r253, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f494, %f493, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f495, %f493, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f546, %f545, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f547, %f545, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r312, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r342, %f647;
	fma.rn.f32 	%f652, %f650, %f649, 0fC0A55DF6;
	fma.rn.f32 	%f653, %f651, %f649, 0f4081E0CF;
	fma.rn.f32 	%f654, %f649, %f648, 0f00000000;
	fma.rn.f32 	%f703, %f702, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f704, %f702, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f754, %f753, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f755, %f753, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f806, %f805, 0fBF000000, %f908;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r200, %r199, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r218, %r217, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r236, %r235, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r247, %r246, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r254, %r253, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r271, %f491;
	fma.rn.f32 	%f496, %f494, %f493, 0fC0A55DF6;
	fma.rn.f32 	%f497, %f495, %f493, 0f4081E0CF;
	fma.rn.f32 	%f498, %f493, %f492, 0f00000000;
	cvt.rzi.s32.f32 	%r294, %f543;
	fma.rn.f32 	%f548, %f546, %f545, 0fC0A55DF6;
	fma.rn.f32 	%f549, %f547, %f545, 0f4081E0CF;
	fma.rn.f32 	%f550, %f545, %f544, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r313, %r312, 1;
	fma.rn.f32 	%f655, %f653, %f649, 0fC09DE9E6;
	fma.rn.f32 	%f656, %f652, %f654, 0f00000000;
	and.b32  	%r343, %r342, 1;
	cvt.rzi.s32.f32 	%r358, %f700;
	fma.rn.f32 	%f705, %f703, %f702, 0fC0A55DF6;
	fma.rn.f32 	%f706, %f704, %f702, 0f4081E0CF;
	fma.rn.f32 	%f707, %f702, %f701, 0f00000000;
	cvt.rzi.s32.f32 	%r380, %f751;
	fma.rn.f32 	%f756, %f754, %f753, 0fC0A55DF6;
	fma.rn.f32 	%f757, %f755, %f753, 0f4081E0CF;
	fma.rn.f32 	%f758, %f753, %f752, 0f00000000;
	mul.f32 	%f807, %f806, %f806;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r201, %r200, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r219, %r218, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r237, %r236, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r248, %r247, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f499, %f497, %f493, 0fC09DE9E6;
	fma.rn.f32 	%f500, %f496, %f498, 0f00000000;
	and.b32  	%r272, %r271, 1;
	fma.rn.f32 	%f551, %f549, %f545, 0fC09DE9E6;
	fma.rn.f32 	%f552, %f548, %f550, 0f00000000;
	and.b32  	%r295, %r294, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p117, %r313, 1;
	fma.rn.f32 	%f657, %f655, %f649, 0f3F800000;
	fma.rn.f32 	%f658, %f648, 0f40490FDB, %f656;
	setp.eq.b32 	%p137, %r343, 1;
	fma.rn.f32 	%f708, %f706, %f702, 0fC09DE9E6;
	fma.rn.f32 	%f709, %f705, %f707, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f759, %f757, %f753, 0fC09DE9E6;
	fma.rn.f32 	%f760, %f756, %f758, 0f00000000;
	and.b32  	%r381, %r380, 1;
	fma.rn.f32 	%f808, %f807, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f809, %f807, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p16, %r194, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p22, %r201, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p28, %r212, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p34, %r219, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p40, %r230, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p46, %r237, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p52, %r248, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p58, %r255, 1;
	fma.rn.f32 	%f501, %f499, %f493, 0f3F800000;
	fma.rn.f32 	%f502, %f492, 0f40490FDB, %f500;
	setp.eq.b32 	%p76, %r272, 1;
	fma.rn.f32 	%f553, %f551, %f545, 0f3F800000;
	fma.rn.f32 	%f554, %f544, 0f40490FDB, %f552;
	setp.eq.b32 	%p96, %r295, 1;
	selp.f32 	%f608, %f606, %f607, %p117;
	and.b32  	%r314, %r312, 2;
	selp.f32 	%f659, %f657, %f658, %p137;
	and.b32  	%r344, %r342, 2;
	fma.rn.f32 	%f710, %f708, %f702, 0f3F800000;
	fma.rn.f32 	%f711, %f701, 0f40490FDB, %f709;
	setp.eq.b32 	%p158, %r359, 1;
	fma.rn.f32 	%f761, %f759, %f753, 0f3F800000;
	fma.rn.f32 	%f762, %f752, 0f40490FDB, %f760;
	setp.eq.b32 	%p178, %r381, 1;
	cvt.rzi.s32.f32 	%r399, %f805;
	fma.rn.f32 	%f810, %f808, %f807, 0fC0A55DF6;
	fma.rn.f32 	%f811, %f809, %f807, 0f4081E0CF;
	fma.rn.f32 	%f812, %f807, %f806, 0f00000000;
	selp.f32 	%f213, %f211, %f212, %p16;
	and.b32  	%r195, %r193, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p22;
	and.b32  	%r202, %r200, 2;
	selp.f32 	%f282, %f280, %f281, %p28;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f316, %f314, %f315, %p34;
	and.b32  	%r220, %r218, 2;
	selp.f32 	%f351, %f349, %f350, %p40;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f385, %f383, %f384, %p46;
	and.b32  	%r238, %r236, 2;
	selp.f32 	%f420, %f418, %f419, %p52;
	and.b32  	%r249, %r247, 2;
	selp.f32 	%f454, %f452, %f453, %p58;
	and.b32  	%r256, %r254, 2;
	selp.f32 	%f503, %f501, %f502, %p76;
	and.b32  	%r273, %r271, 2;
	selp.f32 	%f555, %f553, %f554, %p96;
	and.b32  	%r296, %r294, 2;
	setp.eq.s32 	%p118, %r314, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r315, %r312, 1;
	cvt.rzi.f32.f32 	%f615, %f900;
	setp.eq.s32 	%p138, %r344, 0;
	neg.f32 	%f661, %f659;
	add.s32 	%r345, %r342, 1;
	cvt.rzi.f32.f32 	%f666, %f904;
	selp.f32 	%f712, %f710, %f711, %p158;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f763, %f761, %f762, %p178;
	and.b32  	%r382, %r380, 2;
	fma.rn.f32 	%f813, %f811, %f807, 0fC09DE9E6;
	fma.rn.f32 	%f814, %f810, %f812, 0f00000000;
	and.b32  	%r400, %r399, 1;
	setp.eq.s32 	%p17, %r195, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p23, %r202, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p29, %r213, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p35, %r220, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p41, %r231, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p47, %r238, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p53, %r249, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p59, %r256, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p77, %r273, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r274, %r271, 1;
	cvt.rzi.f32.f32 	%f510, %f892;
	setp.eq.s32 	%p97, %r296, 0;
	neg.f32 	%f557, %f555;
	add.s32 	%r297, %r294, 1;
	cvt.rzi.f32.f32 	%f562, %f896;
	selp.f32 	%f609, %f607, %f606, %p117;
	selp.f32 	%f611, %f608, %f610, %p118;
	and.b32  	%r316, %r315, 2;
	setp.eq.f32 	%p120, %f615, %f900;
	mul.f32 	%f616, %f900, 0f00000000;
	selp.f32 	%f660, %f658, %f657, %p137;
	selp.f32 	%f662, %f659, %f661, %p138;
	and.b32  	%r346, %r345, 2;
	setp.eq.f32 	%p140, %f666, %f904;
	mul.f32 	%f667, %f904, 0f00000000;
	setp.eq.s32 	%p159, %r360, 0;
	neg.f32 	%f714, %f712;
	add.s32 	%r361, %r358, 1;
	cvt.rzi.f32.f32 	%f719, %f916;
	setp.eq.s32 	%p179, %r382, 0;
	neg.f32 	%f765, %f763;
	add.s32 	%r383, %r380, 1;
	cvt.rzi.f32.f32 	%f770, %f920;
	fma.rn.f32 	%f815, %f813, %f807, 0f3F800000;
	fma.rn.f32 	%f816, %f806, 0f40490FDB, %f814;
	setp.eq.b32 	%p199, %r400, 1;
	selp.f32 	%f216, %f213, %f215, %p17;
	selp.f32 	%f250, %f247, %f249, %p23;
	selp.f32 	%f285, %f282, %f284, %p29;
	selp.f32 	%f319, %f316, %f318, %p35;
	selp.f32 	%f354, %f351, %f353, %p41;
	selp.f32 	%f388, %f385, %f387, %p47;
	selp.f32 	%f423, %f420, %f422, %p53;
	selp.f32 	%f457, %f454, %f456, %p59;
	selp.f32 	%f504, %f502, %f501, %p76;
	selp.f32 	%f506, %f503, %f505, %p77;
	and.b32  	%r275, %r274, 2;
	setp.eq.f32 	%p79, %f510, %f892;
	mul.f32 	%f511, %f892, 0f00000000;
	selp.f32 	%f556, %f554, %f553, %p96;
	selp.f32 	%f558, %f555, %f557, %p97;
	and.b32  	%r298, %r297, 2;
	setp.eq.f32 	%p99, %f562, %f896;
	mul.f32 	%f563, %f896, 0f00000000;
	setp.eq.s32 	%p119, %r316, 0;
	sub.f32 	%f613, %f214, %f609;
	selp.f32 	%f92, %f616, %f611, %p120;
	abs.f32 	%f617, %f900;
	setp.eq.s32 	%p139, %r346, 0;
	sub.f32 	%f664, %f214, %f660;
	selp.f32 	%f668, %f667, %f662, %p140;
	abs.f32 	%f669, %f904;
	selp.f32 	%f713, %f711, %f710, %p158;
	selp.f32 	%f715, %f712, %f714, %p159;
	and.b32  	%r362, %r361, 2;
	setp.eq.f32 	%p161, %f719, %f916;
	mul.f32 	%f720, %f916, 0f00000000;
	selp.f32 	%f764, %f762, %f761, %p178;
	selp.f32 	%f766, %f763, %f765, %p179;
	and.b32  	%r384, %r383, 2;
	setp.eq.f32 	%p181, %f770, %f920;
	mul.f32 	%f771, %f920, 0f00000000;
	selp.f32 	%f817, %f815, %f816, %p199;
	and.b32  	%r401, %r399, 2;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p78, %r275, 0;
	sub.f32 	%f508, %f214, %f504;
	selp.f32 	%f55, %f511, %f506, %p79;
	abs.f32 	%f512, %f892;
	setp.eq.s32 	%p98, %r298, 0;
	sub.f32 	%f560, %f214, %f556;
	selp.f32 	%f564, %f563, %f558, %p99;
	abs.f32 	%f565, %f896;
	selp.f32 	%f614, %f609, %f613, %p119;
	setp.gt.f32 	%p121, %f617, 0f4B800000;
	add.f32 	%f618, %f92, 0f3F800000;
	selp.f32 	%f665, %f660, %f664, %p139;
	setp.gt.f32 	%p141, %f669, 0f4B800000;
	add.f32 	%f670, %f668, 0f3F800000;
	setp.eq.s32 	%p160, %r362, 0;
	sub.f32 	%f717, %f214, %f713;
	selp.f32 	%f165, %f720, %f715, %p161;
	abs.f32 	%f721, %f916;
	setp.eq.s32 	%p180, %r384, 0;
	sub.f32 	%f768, %f214, %f764;
	selp.f32 	%f772, %f771, %f766, %p181;
	abs.f32 	%f773, %f920;
	setp.eq.s32 	%p200, %r401, 0;
	neg.f32 	%f819, %f817;
	add.s32 	%r402, %r399, 1;
	cvt.rzi.f32.f32 	%f824, %f908;
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f509, %f504, %f508, %p78;
	setp.gt.f32 	%p80, %f512, 0f4B800000;
	add.f32 	%f513, %f55, 0f3F800000;
	selp.f32 	%f561, %f556, %f560, %p98;
	setp.gt.f32 	%p100, %f565, 0f4B800000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32 	%f93, %f618, %f614, %p121;
	selp.f32 	%f671, %f670, %f665, %p141;
	selp.f32 	%f718, %f713, %f717, %p160;
	setp.gt.f32 	%p162, %f721, 0f4B800000;
	add.f32 	%f722, %f165, 0f3F800000;
	selp.f32 	%f769, %f764, %f768, %p180;
	setp.gt.f32 	%p182, %f773, 0f4B800000;
	add.f32 	%f774, %f772, 0f3F800000;
	selp.f32 	%f818, %f816, %f815, %p199;
	selp.f32 	%f820, %f817, %f819, %p200;
	and.b32  	%r403, %r402, 2;
	setp.eq.f32 	%p202, %f824, %f908;
	mul.f32 	%f825, %f908, 0f00000000;
	mul.f32 	%f6, %f220, %f882;
	mul.f32 	%f255, %f254, %f883;
	mul.f32 	%f15, %f289, %f884;
	mul.f32 	%f324, %f323, %f885;
	mul.f32 	%f24, %f358, %f886;
	mul.f32 	%f393, %f392, %f887;
	mul.f32 	%f33, %f427, %f888;
	mul.f32 	%f461, %f460, %f889;
	selp.f32 	%f56, %f513, %f509, %p80;
	selp.f32 	%f567, %f566, %f561, %p100;
	mov.b32 	%r329, %f671;
	mov.b32 	%r328, %f93;
	mov.b32 	%r335, %f668;
	mov.b32 	%r334, %f92;
	selp.f32 	%f166, %f722, %f718, %p162;
	selp.f32 	%f775, %f774, %f769, %p182;
	setp.eq.s32 	%p201, %r403, 0;
	sub.f32 	%f822, %f214, %f818;
	selp.f32 	%f131, %f825, %f820, %p202;
	abs.f32 	%f826, %f908;
	mov.b32 	%r205, %f255;
	mov.b32 	%r204, %f6;
	mov.b32 	%r223, %f324;
	mov.b32 	%r222, %f15;
	mov.b32 	%r241, %f393;
	mov.b32 	%r240, %f24;
	mov.b32 	%r259, %f461;
	mov.b32 	%r258, %f33;
	mov.b32 	%r287, %f567;
	mov.b32 	%r286, %f56;
	mov.b32 	%r290, %f564;
	mov.b32 	%r289, %f55;
	xor.b32  	%r332, %r335, -2147483648;
	xor.b32  	%r331, %r334, -2147483648;
	mov.b32 	%r373, %f775;
	mov.b32 	%r372, %f166;
	mov.b32 	%r376, %f772;
	mov.b32 	%r375, %f165;
	selp.f32 	%f823, %f818, %f822, %p201;
	setp.gt.f32 	%p203, %f826, 0f4B800000;
	add.f32 	%f827, %f131, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r9, %r4, 16;
	// begin inline asm
	cvt.rn.f16x2.f32 %r203, %r205, %r204;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r221, %r223, %r222;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r239, %r241, %r240;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r257, %r259, %r258;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r287, %r286;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r327, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r332, %r331;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r371, %r373, %r372;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r374, %r376, %r375;
	// end inline asm
	selp.f32 	%f132, %f827, %f823, %p203;
	add.f32 	%f850, %f912, %f912;
	mov.b32 	%r426, %f850;
	and.b32  	%r427, %r426, -2147483648;
	or.b32  	%r428, %r427, 1056964608;
	mov.b32 	%f851, %r428;
	add.f32 	%f852, %f850, %f851;
	cvt.rzi.f32.f32 	%f853, %f852;
	abs.f32 	%f854, %f850;
	setp.gt.f32 	%p217, %f854, 0f4B000000;
	selp.f32 	%f855, %f850, %f853, %p217;
	cvt.rzi.f32.f32 	%f856, %f850;
	setp.lt.f32 	%p218, %f854, 0f3F000000;
	selp.f32 	%f857, %f856, %f855, %p218;
	cvt.rzi.s32.f32 	%r429, %f857;
	fma.rn.f32 	%f858, %f857, 0fBF000000, %f912;
	mul.f32 	%f859, %f858, %f858;
	fma.rn.f32 	%f860, %f859, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f861, %f859, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f862, %f860, %f859, 0fC0A55DF6;
	fma.rn.f32 	%f863, %f861, %f859, 0f4081E0CF;
	fma.rn.f32 	%f864, %f859, %f858, 0f00000000;
	fma.rn.f32 	%f865, %f863, %f859, 0fC09DE9E6;
	fma.rn.f32 	%f866, %f862, %f864, 0f00000000;
	fma.rn.f32 	%f867, %f865, %f859, 0f3F800000;
	fma.rn.f32 	%f868, %f858, 0f40490FDB, %f866;
	and.b32  	%r430, %r429, 1;
	setp.eq.b32 	%p219, %r430, 1;
	selp.f32 	%f869, %f867, %f868, %p219;
	selp.f32 	%f870, %f868, %f867, %p219;
	and.b32  	%r431, %r429, 2;
	setp.eq.s32 	%p220, %r431, 0;
	neg.f32 	%f871, %f869;
	selp.f32 	%f872, %f869, %f871, %p220;
	add.s32 	%r432, %r429, 1;
	and.b32  	%r433, %r432, 2;
	setp.eq.s32 	%p221, %r433, 0;
	sub.f32 	%f874, %f214, %f870;
	selp.f32 	%f875, %f870, %f874, %p221;
	cvt.rzi.f32.f32 	%f876, %f912;
	setp.eq.f32 	%p222, %f876, %f912;
	mul.f32 	%f877, %f912, 0f00000000;
	selp.f32 	%f878, %f877, %f872, %p222;
	abs.f32 	%f879, %f912;
	setp.gt.f32 	%p223, %f879, 0f4B800000;
	add.f32 	%f880, %f878, 0f3F800000;
	selp.f32 	%f881, %f880, %f875, %p223;
	mov.b32 	%r416, %f881;
	mov.b32 	%r415, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r414, %r416, %r415;
	// end inline asm
	mov.b32 	%r422, %f878;
	xor.b32  	%r419, %r422, -2147483648;
	mov.b32 	%r421, %f131;
	xor.b32  	%r418, %r421, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r417, %r419, %r418;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r420, %r422, %r421;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r423, %r416, %r415;
	// end inline asm
	shl.b32 	%r435, %r5, 12;
	and.b32  	%r436, %r10, 28;
	shl.b32 	%r437, %r3, 5;
	and.b32  	%r438, %r437, 96;
	or.b32  	%r96, %r436, %r438;
	and.b32  	%r97, %r437, 128;
	or.b32  	%r439, %r9, %r1;
	or.b32  	%r98, %r439, %r11;
	or.b32  	%r440, %r96, %r97;
	or.b32  	%r99, %r440, %r435;
	and.b32  	%r100, %r4, 8;
	and.b32  	%r441, %r1, 1;
	mul.lo.s32 	%r442, %r441, 1040;
	shr.u32 	%r443, %r1, 1;
	bfe.u32 	%r444, %r1, 1, 1;
	bfe.u32 	%r445, %r1, 2, 1;
	shr.u32 	%r446, %r1, 3;
	shl.b32 	%r447, %r4, 4;
	or.b32  	%r448, %r100, %r447;
	shr.u32 	%r449, %r448, 2;
	and.b32  	%r450, %r449, 30;
	mad.lo.s32 	%r451, %r21, 65, %r442;
	mad.lo.s32 	%r452, %r446, 130, %r451;
	mad.lo.s32 	%r453, %r444, 520, %r452;
	mad.lo.s32 	%r454, %r445, 260, %r453;
	add.s32 	%r455, %r454, %r450;
	mul.wide.u32 	%rd74, %r455, 4;
	mov.u64 	%rd75, shmem;
	add.s64 	%rd5, %rd75, %rd74;
	add.s32 	%r456, %r455, 32;
	mul.wide.u32 	%rd76, %r456, 4;
	add.s64 	%rd6, %rd75, %rd76;
	add.s32 	%r457, %r455, 1;
	mul.wide.u32 	%rd77, %r457, 4;
	add.s64 	%rd7, %rd75, %rd77;
	add.s32 	%r458, %r455, 33;
	mul.wide.u32 	%rd78, %r458, 4;
	add.s64 	%rd8, %rd75, %rd78;
	and.b32  	%r459, %r2, 32;
	mul.lo.s32 	%r460, %r17, 65;
	mul.lo.s32 	%r461, %r23, 1040;
	mul.lo.s32 	%r462, %r21, 520;
	mul.lo.s32 	%r463, %r20, 260;
	mul.lo.s32 	%r464, %r18, 130;
	or.b32  	%r465, %r459, %r443;
	add.s32 	%r466, %r465, %r462;
	add.s32 	%r467, %r466, %r464;
	add.s32 	%r468, %r467, %r460;
	add.s32 	%r469, %r468, %r461;
	add.s32 	%r470, %r469, %r463;
	or.b32  	%r471, %r443, 8;
	add.s32 	%r472, %r462, %r459;
	add.s32 	%r473, %r472, %r464;
	add.s32 	%r474, %r473, %r471;
	add.s32 	%r475, %r474, %r460;
	add.s32 	%r476, %r475, %r461;
	add.s32 	%r477, %r476, %r463;
	or.b32  	%r478, %r443, 16;
	add.s32 	%r479, %r473, %r478;
	add.s32 	%r480, %r479, %r460;
	add.s32 	%r481, %r480, %r461;
	add.s32 	%r482, %r481, %r463;
	or.b32  	%r483, %r443, 24;
	add.s32 	%r484, %r473, %r483;
	add.s32 	%r485, %r484, %r460;
	add.s32 	%r486, %r485, %r461;
	add.s32 	%r487, %r486, %r463;
	or.b32  	%r488, %r14, %r13;
	or.b32  	%r489, %r488, %r12;
	or.b32  	%r490, %r489, %r11;
	shr.u32 	%r491, %r490, 1;
	mul.lo.s32 	%r492, %r491, 65;
	add.s32 	%r493, %r465, %r492;
	or.b32  	%r494, %r471, %r459;
	add.s32 	%r495, %r494, %r492;
	or.b32  	%r496, %r478, %r459;
	add.s32 	%r497, %r496, %r492;
	or.b32  	%r498, %r483, %r459;
	add.s32 	%r499, %r498, %r492;
	shl.b32 	%r500, %r1, 1;
	or.b32  	%r501, %r21, %r500;
	mul.lo.s32 	%r502, %r501, 65;
	add.s32 	%r503, %r450, %r502;
	mul.wide.u32 	%rd79, %r503, 4;
	add.s64 	%rd9, %rd75, %rd79;
	cvt.u64.u32 	%rd80, %r450;
	cvt.u64.u32 	%rd81, %r502;
	add.s64 	%rd82, %rd81, %rd80;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd10, %rd75, %rd83;
	shl.b32 	%r504, %r7, 18;
	add.s32 	%r505, %r504, -786432;
	shl.b32 	%r506, %r3, 3;
	and.b32  	%r507, %r506, 960;
	or.b32  	%r508, %r507, %r22;
	shl.b32 	%r509, %r1, 10;
	shl.b32 	%r510, %r508, 8;
	or.b32  	%r101, %r509, %r510;
	cvt.s64.s32 	%rd11, %r505;
	mul.wide.u32 	%rd12, %r499, 4;
	mul.wide.u32 	%rd13, %r497, 4;
	mul.wide.u32 	%rd14, %r495, 4;
	mul.wide.u32 	%rd15, %r493, 4;
	mul.wide.u32 	%rd16, %r487, 4;
	mul.wide.u32 	%rd17, %r482, 4;
	mul.wide.u32 	%rd18, %r477, 4;
	mul.wide.u32 	%rd19, %r470, 4;
	setp.eq.s32 	%p225, %r100, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7795, %r7782;
	mov.u32 	%r7820, %r7782;
	mov.u32 	%r7819, %r7782;
	mov.u32 	%r7818, %r7782;
	mov.u32 	%r7817, %r7782;
	mov.u32 	%r7816, %r7782;
	mov.u32 	%r7815, %r7782;
	mov.u32 	%r7814, %r7782;
	mov.u32 	%r7813, %r7782;
	mov.u32 	%r7812, %r7782;
	mov.u32 	%r7811, %r7782;
	mov.u32 	%r7810, %r7782;
	mov.u32 	%r7809, %r7782;
	bra.uni 	LBB0_117;
LBB0_121:                               // %L29544
                                        //   in Loop: Header=BB0_117 Depth=1
	setp.ne.s32 	%p236, %r7795, 130816;
	add.s32 	%r7795, %r7795, 256;
	add.s32 	%r7779, %r7795, %r5;
	setp.gt.s32 	%p237, %r6, %r7779;
	and.pred  	%p238, %p236, %p237;
	@%p238 bra 	LBB0_117;
	bra.uni 	LBB0_122;
LBB0_117:                               // %L1370
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r528, %r98, %r7795;
	shl.b32 	%r529, %r528, 12;
	add.s32 	%r530, %r99, %r529;
	shr.s32 	%r531, %r530, 31;
	shr.u32 	%r532, %r531, 3;
	add.s32 	%r533, %r530, %r532;
	shr.s32 	%r534, %r533, 29;
	setp.lt.s32 	%p226, %r530, 0;
	and.b32  	%r535, %r533, -536870912;
	setp.ne.s32 	%p227, %r535, %r530;
	and.pred  	%p228, %p226, %p227;
	selp.u32 	%r536, 1, 0, %p228;
	sub.s32 	%r537, %r536, %r534;
	shl.b32 	%r538, %r537, 29;
	add.s32 	%r539, %r538, %r530;
	mul.wide.s32 	%rd85, %r539, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r540, %r541, %r542, %r543}, [%rd86];
	selp.b32 	%r544, %r542, %r540, %p225;
	shfl.sync.bfly.b32	%r545, %r544, 8, 31, -1;
	selp.b32 	%r512, %r540, %r545, %p225;
	selp.b32 	%r513, %r545, %r542, %p225;
	selp.b32 	%r546, %r543, %r541, %p225;
	shfl.sync.bfly.b32	%r547, %r546, 8, 31, -1;
	selp.b32 	%r520, %r541, %r547, %p225;
	selp.b32 	%r521, %r547, %r543, %p225;
	mov.u32 	%r522, 21520;
	// begin inline asm
	prmt.b32 %r511, %r512, %r513, %r522;
	// end inline asm
	mov.u32 	%r526, 30258;
	// begin inline asm
	prmt.b32 %r515, %r512, %r513, %r526;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r520, %r521, %r522;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r520, %r521, %r526;
	// end inline asm
	st.shared.u32 	[%rd5], %r511;
	st.shared.u32 	[%rd6], %r515;
	st.shared.u32 	[%rd7], %r519;
	st.shared.u32 	[%rd8], %r523;
	bar.sync 	0;
	mov.u32 	%r7808, 256;
	mov.u64 	%rd109, %rd75;
LBB0_118:                               // %L4504
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd87, %rd109, %rd19;
	ld.shared.u32 	%r7732, [%rd87];
	add.s64 	%rd88, %rd109, %rd18;
	ld.shared.u32 	%r7733, [%rd88];
	add.s64 	%rd89, %rd109, %rd17;
	ld.shared.u32 	%r7734, [%rd89];
	add.s64 	%rd90, %rd109, %rd16;
	ld.shared.u32 	%r7735, [%rd90];
	// begin inline asm
	mov.b32 %r553, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r564, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r552, %r7732, -2004318072;
	mov.u32 	%r551, 983055;
	// begin inline asm
	lop3.b32 %r550, %r551, %r552, %r553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r554, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r555, %r553, %r554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r558, %r550, %r555;
	// end inline asm
	mov.u32 	%r562, 15728880;
	// begin inline asm
	lop3.b32 %r561, %r562, %r552, %r564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r565, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r566, %r564, %r565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r569, %r561, %r566;
	// end inline asm
	shr.u32 	%r574, %r552, 8;
	// begin inline asm
	lop3.b32 %r572, %r551, %r574, %r553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r576, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r577, %r553, %r576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r580, %r572, %r577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r583, %r562, %r574, %r564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r587, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r588, %r564, %r587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r591, %r583, %r588;
	// end inline asm
	// begin inline asm
	mov.b32 %r599, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r610, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r598, %r7733, -2004318072;
	// begin inline asm
	lop3.b32 %r596, %r551, %r598, %r599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r601, %r599, %r600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r604, %r596, %r601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r607, %r562, %r598, %r610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r611, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r612, %r610, %r611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r615, %r607, %r612;
	// end inline asm
	shr.u32 	%r620, %r598, 8;
	// begin inline asm
	lop3.b32 %r618, %r551, %r620, %r599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r622, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r623, %r599, %r622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r626, %r618, %r623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r629, %r562, %r620, %r610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r633, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r634, %r610, %r633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r637, %r629, %r634;
	// end inline asm
	// begin inline asm
	mov.b32 %r645, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r656, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r644, %r7734, -2004318072;
	// begin inline asm
	lop3.b32 %r642, %r551, %r644, %r645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r646, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r647, %r645, %r646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r650, %r642, %r647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r653, %r562, %r644, %r656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r658, %r656, %r657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r661, %r653, %r658;
	// end inline asm
	shr.u32 	%r666, %r644, 8;
	// begin inline asm
	lop3.b32 %r664, %r551, %r666, %r645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r669, %r645, %r668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r672, %r664, %r669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r675, %r562, %r666, %r656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r679, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r680, %r656, %r679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r683, %r675, %r680;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r690, %r7735, -2004318072;
	// begin inline asm
	lop3.b32 %r688, %r551, %r690, %r691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r693, %r691, %r692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r696, %r688, %r693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r699, %r562, %r690, %r702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r704, %r702, %r703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r707, %r699, %r704;
	// end inline asm
	shr.u32 	%r712, %r690, 8;
	// begin inline asm
	lop3.b32 %r710, %r551, %r712, %r691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r714, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r715, %r691, %r714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r718, %r710, %r715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r721, %r562, %r712, %r702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r725, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r726, %r702, %r725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r729, %r721, %r726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r732, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r734, %r732, %r558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r737, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r739, %r737, %r569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r742, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r744, %r742, %r580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r747, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r749, %r747, %r591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r752, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r754, %r752, %r604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r757, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r759, %r757, %r615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r772, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r774, %r772, %r650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r777, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r779, %r777, %r661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r782, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r784, %r782, %r672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r787, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r789, %r787, %r683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r792, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r794, %r792, %r696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r797, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r799, %r797, %r707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r802, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r804, %r802, %r718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r807, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r809, %r807, %r729;
	// end inline asm
	// begin inline asm
	mov.b32 %r817, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r816, %r7809, -2004318072;
	// begin inline asm
	lop3.b32 %r814, %r551, %r816, %r817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r819, %r817, %r818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r822, %r814, %r819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r825, %r562, %r816, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r830, %r828, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r833, %r825, %r830;
	// end inline asm
	shr.u32 	%r838, %r816, 8;
	// begin inline asm
	lop3.b32 %r836, %r551, %r838, %r817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r841, %r817, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r844, %r836, %r841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r847, %r562, %r838, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r828, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	mov.b32 %r863, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r874, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r862, %r7810, -2004318072;
	// begin inline asm
	lop3.b32 %r860, %r551, %r862, %r863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r865, %r863, %r864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r868, %r860, %r865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r871, %r562, %r862, %r874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r876, %r874, %r875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r879, %r871, %r876;
	// end inline asm
	shr.u32 	%r884, %r862, 8;
	// begin inline asm
	lop3.b32 %r882, %r551, %r884, %r863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r887, %r863, %r886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r890, %r882, %r887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r893, %r562, %r884, %r874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r898, %r874, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r901, %r893, %r898;
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r908, %r7811, -2004318072;
	// begin inline asm
	lop3.b32 %r906, %r551, %r908, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r917, %r562, %r908, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r920, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	shr.u32 	%r930, %r908, 8;
	// begin inline asm
	lop3.b32 %r928, %r551, %r930, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r909, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r939, %r562, %r930, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r920, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r954, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r952, %r551, %r954, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r955, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r963, %r562, %r954, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r966, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	shr.u32 	%r976, %r954, 8;
	// begin inline asm
	lop3.b32 %r974, %r551, %r976, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r955, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r985, %r562, %r976, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r966, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r996, %r203, %r822, %r734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1000, %r203, %r833, %r739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1004, %r203, %r844, %r744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1008, %r203, %r855, %r749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1012, %r203, %r868, %r754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1016, %r203, %r879, %r759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1020, %r203, %r890, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1024, %r203, %r901, %r769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1028, %r203, %r914, %r774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r203, %r925, %r779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1036, %r203, %r936, %r784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1040, %r203, %r947, %r789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1044, %r203, %r960, %r794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1048, %r203, %r971, %r799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1052, %r203, %r982, %r804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1056, %r203, %r993, %r809;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1064, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r1062, %r551, %r1064, %r1065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1065, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1073, %r562, %r1064, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1076, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	shr.u32 	%r1086, %r1064, 8;
	// begin inline asm
	lop3.b32 %r1084, %r551, %r1086, %r1065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1089, %r1065, %r1088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1092, %r1084, %r1089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1095, %r562, %r1086, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1076, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1110, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r1108, %r551, %r1110, %r1111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1111, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1119, %r562, %r1110, %r1122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1124, %r1122, %r1123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1127, %r1119, %r1124;
	// end inline asm
	shr.u32 	%r1132, %r1110, 8;
	// begin inline asm
	lop3.b32 %r1130, %r551, %r1132, %r1111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1135, %r1111, %r1134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1138, %r1130, %r1135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1141, %r562, %r1132, %r1122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1146, %r1122, %r1145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1149, %r1141, %r1146;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1156, %r7815, -2004318072;
	// begin inline asm
	lop3.b32 %r1154, %r551, %r1156, %r1157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1159, %r1157, %r1158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1162, %r1154, %r1159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1165, %r562, %r1156, %r1168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1170, %r1168, %r1169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1173, %r1165, %r1170;
	// end inline asm
	shr.u32 	%r1178, %r1156, 8;
	// begin inline asm
	lop3.b32 %r1176, %r551, %r1178, %r1157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1181, %r1157, %r1180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1184, %r1176, %r1181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1187, %r562, %r1178, %r1168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1192, %r1168, %r1191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1195, %r1187, %r1192;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1202, %r7816, -2004318072;
	// begin inline asm
	lop3.b32 %r1200, %r551, %r1202, %r1203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1205, %r1203, %r1204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1208, %r1200, %r1205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1211, %r562, %r1202, %r1214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1216, %r1214, %r1215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1219, %r1211, %r1216;
	// end inline asm
	shr.u32 	%r1224, %r1202, 8;
	// begin inline asm
	lop3.b32 %r1222, %r551, %r1224, %r1203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1227, %r1203, %r1226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1230, %r1222, %r1227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1233, %r562, %r1224, %r1214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1238, %r1214, %r1237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1241, %r1233, %r1238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1246, %r1244, %r1070, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1252, %r1250, %r1081, %r1000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1258, %r1256, %r1092, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1264, %r1262, %r1103, %r1008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1268, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1270, %r1268, %r1116, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1276, %r1274, %r1127, %r1016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1282, %r1280, %r1138, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1288, %r1286, %r1149, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1294, %r1292, %r1162, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1298, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1300, %r1298, %r1173, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1306, %r1304, %r1184, %r1036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1312, %r1310, %r1195, %r1040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1318, %r1316, %r1208, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1324, %r1322, %r1219, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1328, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1330, %r1328, %r1230, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1334, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1336, %r1334, %r1241, %r1056;
	// end inline asm
	// begin inline asm
	mov.b32 %r1345, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1356, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1344, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r1342, %r551, %r1344, %r1345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1346, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1347, %r1345, %r1346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1350, %r1342, %r1347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1353, %r562, %r1344, %r1356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1357, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1358, %r1356, %r1357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1361, %r1353, %r1358;
	// end inline asm
	shr.u32 	%r1366, %r1344, 8;
	// begin inline asm
	lop3.b32 %r1364, %r551, %r1366, %r1345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1368, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1369, %r1345, %r1368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1372, %r1364, %r1369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1375, %r562, %r1366, %r1356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1380, %r1356, %r1379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1383, %r1375, %r1380;
	// end inline asm
	// begin inline asm
	mov.b32 %r1391, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1402, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1390, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r1388, %r551, %r1390, %r1391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1393, %r1391, %r1392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1396, %r1388, %r1393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1399, %r562, %r1390, %r1402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1404, %r1402, %r1403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1407, %r1399, %r1404;
	// end inline asm
	shr.u32 	%r1412, %r1390, 8;
	// begin inline asm
	lop3.b32 %r1410, %r551, %r1412, %r1391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1415, %r1391, %r1414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1418, %r1410, %r1415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1421, %r562, %r1412, %r1402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1402, %r1425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1429, %r1421, %r1426;
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1448, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1436, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r1434, %r551, %r1436, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1439, %r1437, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1442, %r1434, %r1439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1445, %r562, %r1436, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1448, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	shr.u32 	%r1458, %r1436, 8;
	// begin inline asm
	lop3.b32 %r1456, %r551, %r1458, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1437, %r1460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1464, %r1456, %r1461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1467, %r562, %r1458, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1448, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1482, %r7820, -2004318072;
	// begin inline asm
	lop3.b32 %r1480, %r551, %r1482, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1483, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1488, %r1480, %r1485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1491, %r562, %r1482, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1494, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	shr.u32 	%r1504, %r1482, 8;
	// begin inline asm
	lop3.b32 %r1502, %r551, %r1504, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1483, %r1506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1510, %r1502, %r1507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1513, %r562, %r1504, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1494, %r1517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1521, %r1513, %r1518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1595, %r239, %r1350, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1592, %r239, %r1361, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1604, %r239, %r1372, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1601, %r239, %r1383, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1613, %r239, %r1396, %r1270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1610, %r239, %r1407, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1622, %r239, %r1418, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1619, %r239, %r1429, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1631, %r239, %r1442, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1628, %r239, %r1453, %r1300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1640, %r239, %r1464, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1637, %r239, %r1475, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1649, %r239, %r1488, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1646, %r239, %r1499, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1658, %r239, %r1510, %r1330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1655, %r239, %r1521, %r1336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1588, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1590, %r1588, %r1592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1593, %r285, %r1595, %r1590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1597, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1599, %r1597, %r1601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1602, %r285, %r1604, %r1599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1606, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1608, %r1606, %r1610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1611, %r285, %r1613, %r1608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1615, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1617, %r1615, %r1619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1620, %r285, %r1622, %r1617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1624, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1626, %r1624, %r1628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1629, %r285, %r1631, %r1626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1633, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1635, %r1633, %r1637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1638, %r285, %r1640, %r1635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1642, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1644, %r1642, %r1646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1647, %r285, %r1649, %r1644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1651, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1653, %r1651, %r1655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1656, %r285, %r1658, %r1653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1660, %r288, %r1595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1663, %r285, %r1592, %r1660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1667, %r288, %r1604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1670, %r285, %r1601, %r1667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1674, %r288, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1677, %r285, %r1610, %r1674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1681, %r288, %r1622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1684, %r285, %r1619, %r1681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1688, %r288, %r1631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1691, %r285, %r1628, %r1688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1695, %r288, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r285, %r1637, %r1695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1702, %r288, %r1649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1705, %r285, %r1646, %r1702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1709, %r288, %r1658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r285, %r1655, %r1709;
	// end inline asm
	mov.u32 	%r1724, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1803, %r1800}, {%r327, %r333, %r330, %r336}, {%r1593, %r1663}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1812, %r1809}, {%r327, %r333, %r330, %r336}, {%r1602, %r1670}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1821, %r1818}, {%r327, %r333, %r330, %r336}, {%r1611, %r1677}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1830, %r1827}, {%r327, %r333, %r330, %r336}, {%r1620, %r1684}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1839, %r1836}, {%r327, %r333, %r330, %r336}, {%r1629, %r1691}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1848, %r1845}, {%r327, %r333, %r330, %r336}, {%r1638, %r1698}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1857, %r1854}, {%r327, %r333, %r330, %r336}, {%r1647, %r1705}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1866, %r1863}, {%r327, %r333, %r330, %r336}, {%r1656, %r1712}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1796, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1798, %r1796, %r1800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1801, %r371, %r1803, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1805, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1807, %r1805, %r1809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r371, %r1812, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1814, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1816, %r1814, %r1818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r371, %r1821, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1823, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1825, %r1823, %r1827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r371, %r1830, %r1825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1832, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1834, %r1832, %r1836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1837, %r371, %r1839, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1841, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1843, %r1841, %r1845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r371, %r1848, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1850, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1852, %r1850, %r1854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r371, %r1857, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1859, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1861, %r1859, %r1863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r371, %r1866, %r1861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1868, %r374, %r1803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r371, %r1800, %r1868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1875, %r374, %r1812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r371, %r1809, %r1875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1882, %r374, %r1821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1885, %r371, %r1818, %r1882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1889, %r374, %r1830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1892, %r371, %r1827, %r1889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1896, %r374, %r1839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r371, %r1836, %r1896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1903, %r374, %r1848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r371, %r1845, %r1903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1910, %r374, %r1857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1913, %r371, %r1854, %r1910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1917, %r374, %r1866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1920, %r371, %r1863, %r1917;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1924, %r1925}, {%r414, %r420, %r417, %r423}, {%r1801, %r1871}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1934, %r1935}, {%r414, %r420, %r417, %r423}, {%r1810, %r1878}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1944, %r1945}, {%r414, %r420, %r417, %r423}, {%r1819, %r1885}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1954, %r1955}, {%r414, %r420, %r417, %r423}, {%r1828, %r1892}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1964, %r1965}, {%r414, %r420, %r417, %r423}, {%r1837, %r1899}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1974, %r1975}, {%r414, %r420, %r417, %r423}, {%r1846, %r1906}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1984, %r1985}, {%r414, %r420, %r417, %r423}, {%r1855, %r1913}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1994, %r1995}, {%r414, %r420, %r417, %r423}, {%r1864, %r1920}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2004, %r15, %r1924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2007, %r15, %r1925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2010, %r15, %r1934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2013, %r15, %r1935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2016, %r15, %r1944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2019, %r15, %r1945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2022, %r15, %r1954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2025, %r15, %r1955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2028, %r15, %r1964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2031, %r15, %r1965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2034, %r15, %r1974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2037, %r15, %r1975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2040, %r15, %r1984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2043, %r15, %r1985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2046, %r15, %r1994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2049, %r15, %r1995;
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2053, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2054, %r2004, %r2052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2057, %r2054, %r2053;
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2062, %r2007, %r2060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2065, %r2062, %r2061;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2070, %r2010, %r2068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2073, %r2070, %r2069;
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2078, %r2013, %r2076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2081, %r2078, %r2077;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2086, %r2016, %r2084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2089, %r2086, %r2085;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2094, %r2019, %r2092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2097, %r2094, %r2093;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2102, %r2022, %r2100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2105, %r2102, %r2101;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2110, %r2025, %r2108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2113, %r2110, %r2109;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2118, %r2028, %r2116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2121, %r2118, %r2117;
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2126, %r2031, %r2124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2129, %r2126, %r2125;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2134, %r2034, %r2132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2137, %r2134, %r2133;
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2142, %r2037, %r2140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2145, %r2142, %r2141;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2150, %r2040, %r2148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2153, %r2150, %r2149;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2158, %r2043, %r2156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2161, %r2158, %r2157;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2166, %r2046, %r2164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2169, %r2166, %r2165;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2174, %r2049, %r2172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2177, %r2174, %r2173;
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2183, %r2181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2057, %r2182;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2183, %r2188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2192, %r2065, %r2189;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2196, %r2183, %r2195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2199, %r2073, %r2196;
	// end inline asm
	// begin inline asm
	mov.b32 %r2202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2203, %r2183, %r2202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2206, %r2081, %r2203;
	// end inline asm
	mov.u32 	%r2212, 25152;
	// begin inline asm
	prmt.b32 %r2209, %r2185, %r2199, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2213, %r2192, %r2206, %r2212;
	// end inline asm
	shl.b32 	%r2220, %r2213, 4;
	mov.u32 	%r2218, 252645135;
	// begin inline asm
	lop3.b32 %r2217, %r2218, %r2209, %r2220, 202;
	// end inline asm
	xor.b32  	%r7736, %r2217, -2004318072;
	// begin inline asm
	mov.b32 %r2224, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2224, %r2222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2226, %r2089, %r2223;
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2230, %r2224, %r2229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2233, %r2097, %r2230;
	// end inline asm
	// begin inline asm
	mov.b32 %r2236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2237, %r2224, %r2236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2240, %r2105, %r2237;
	// end inline asm
	// begin inline asm
	mov.b32 %r2243, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2244, %r2224, %r2243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2247, %r2113, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2250, %r2226, %r2240, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2254, %r2233, %r2247, %r2212;
	// end inline asm
	shl.b32 	%r2261, %r2254, 4;
	// begin inline asm
	lop3.b32 %r2258, %r2218, %r2250, %r2261, 202;
	// end inline asm
	xor.b32  	%r7737, %r2258, -2004318072;
	// begin inline asm
	mov.b32 %r2265, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2264, %r2265, %r2263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2267, %r2121, %r2264;
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2265, %r2270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2274, %r2129, %r2271;
	// end inline asm
	// begin inline asm
	mov.b32 %r2277, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2278, %r2265, %r2277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2281, %r2137, %r2278;
	// end inline asm
	// begin inline asm
	mov.b32 %r2284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2265, %r2284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2288, %r2145, %r2285;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2291, %r2267, %r2281, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2295, %r2274, %r2288, %r2212;
	// end inline asm
	shl.b32 	%r2302, %r2295, 4;
	// begin inline asm
	lop3.b32 %r2299, %r2218, %r2291, %r2302, 202;
	// end inline asm
	xor.b32  	%r7738, %r2299, -2004318072;
	// begin inline asm
	mov.b32 %r2306, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2305, %r2306, %r2304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2308, %r2153, %r2305;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2306, %r2311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2315, %r2161, %r2312;
	// end inline asm
	// begin inline asm
	mov.b32 %r2318, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2319, %r2306, %r2318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2322, %r2169, %r2319;
	// end inline asm
	// begin inline asm
	mov.b32 %r2325, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2326, %r2306, %r2325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2329, %r2177, %r2326;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2332, %r2308, %r2322, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2336, %r2315, %r2329, %r2212;
	// end inline asm
	shl.b32 	%r2343, %r2336, 4;
	// begin inline asm
	lop3.b32 %r2340, %r2218, %r2332, %r2343, 202;
	// end inline asm
	xor.b32  	%r7739, %r2340, -2004318072;
	add.s64 	%rd91, %rd109, %rd15;
	st.shared.u32 	[%rd91], %r7736;
	add.s64 	%rd92, %rd109, %rd14;
	st.shared.u32 	[%rd92], %r7737;
	add.s64 	%rd93, %rd109, %rd13;
	st.shared.u32 	[%rd93], %r7738;
	add.s64 	%rd94, %rd109, %rd12;
	st.shared.u32 	[%rd94], %r7739;
	ld.shared.u32 	%r7809, [%rd87];
	ld.shared.u32 	%r7810, [%rd88];
	ld.shared.u32 	%r7811, [%rd89];
	ld.shared.u32 	%r7812, [%rd90];
	// begin inline asm
	mov.b32 %r2349, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2360, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2348, %r7809, -2004318072;
	// begin inline asm
	lop3.b32 %r2346, %r551, %r2348, %r2349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2351, %r2349, %r2350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2354, %r2346, %r2351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2357, %r562, %r2348, %r2360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2361, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2360, %r2361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2365, %r2357, %r2362;
	// end inline asm
	shr.u32 	%r2370, %r2348, 8;
	// begin inline asm
	lop3.b32 %r2368, %r551, %r2370, %r2349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2372, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2373, %r2349, %r2372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2376, %r2368, %r2373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2379, %r562, %r2370, %r2360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2383, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2384, %r2360, %r2383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2387, %r2379, %r2384;
	// end inline asm
	// begin inline asm
	mov.b32 %r2395, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2406, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2394, %r7810, -2004318072;
	// begin inline asm
	lop3.b32 %r2392, %r551, %r2394, %r2395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2396, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2395, %r2396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2400, %r2392, %r2397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2403, %r562, %r2394, %r2406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2406, %r2407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2411, %r2403, %r2408;
	// end inline asm
	shr.u32 	%r2416, %r2394, 8;
	// begin inline asm
	lop3.b32 %r2414, %r551, %r2416, %r2395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2418, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2395, %r2418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2422, %r2414, %r2419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2425, %r562, %r2416, %r2406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2429, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2430, %r2406, %r2429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2433, %r2425, %r2430;
	// end inline asm
	// begin inline asm
	mov.b32 %r2441, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2452, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2440, %r7811, -2004318072;
	// begin inline asm
	lop3.b32 %r2438, %r551, %r2440, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2443, %r2441, %r2442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2446, %r2438, %r2443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2449, %r562, %r2440, %r2452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2454, %r2452, %r2453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2457, %r2449, %r2454;
	// end inline asm
	shr.u32 	%r2462, %r2440, 8;
	// begin inline asm
	lop3.b32 %r2460, %r551, %r2462, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2465, %r2441, %r2464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2468, %r2460, %r2465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2471, %r562, %r2462, %r2452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2476, %r2452, %r2475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2479, %r2471, %r2476;
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2486, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r2484, %r551, %r2486, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2489, %r2487, %r2488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2492, %r2484, %r2489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2495, %r562, %r2486, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2498, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	shr.u32 	%r2508, %r2486, 8;
	// begin inline asm
	lop3.b32 %r2506, %r551, %r2508, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2511, %r2487, %r2510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2514, %r2506, %r2511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2517, %r562, %r2508, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2522, %r2498, %r2521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2525, %r2517, %r2522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2528, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2530, %r2528, %r2354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2533, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2535, %r2533, %r2365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2538, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2540, %r2538, %r2376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2543, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2545, %r2543, %r2387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2548, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2550, %r2548, %r2400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2553, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2555, %r2553, %r2411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2558, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2560, %r2558, %r2422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2563, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2565, %r2563, %r2433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2568, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2570, %r2568, %r2446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2573, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2575, %r2573, %r2457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2578, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2580, %r2578, %r2468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2583, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2585, %r2583, %r2479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2588, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2590, %r2588, %r2492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2593, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2595, %r2593, %r2503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2598, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2600, %r2598, %r2514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2603, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2605, %r2603, %r2525;
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2610, %r551, %r1064, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2613, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2621, %r562, %r1064, %r2624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2626, %r2624, %r2625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2629, %r2621, %r2626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2632, %r551, %r1086, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2637, %r2613, %r2636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2640, %r2632, %r2637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2643, %r562, %r1086, %r2624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2648, %r2624, %r2647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2651, %r2643, %r2648;
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2656, %r551, %r1110, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2661, %r2659, %r2660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2664, %r2656, %r2661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2667, %r562, %r1110, %r2670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2671, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2672, %r2670, %r2671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2675, %r2667, %r2672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2678, %r551, %r1132, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2683, %r2659, %r2682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2686, %r2678, %r2683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2689, %r562, %r1132, %r2670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2694, %r2670, %r2693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2697, %r2689, %r2694;
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2702, %r551, %r1156, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2707, %r2705, %r2706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2710, %r2702, %r2707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2713, %r562, %r1156, %r2716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2718, %r2716, %r2717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2721, %r2713, %r2718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2724, %r551, %r1178, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2729, %r2705, %r2728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2732, %r2724, %r2729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2735, %r562, %r1178, %r2716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2740, %r2716, %r2739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2743, %r2735, %r2740;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2748, %r551, %r1202, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2753, %r2751, %r2752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2756, %r2748, %r2753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2759, %r562, %r1202, %r2762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2764, %r2762, %r2763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2767, %r2759, %r2764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2770, %r551, %r1224, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2775, %r2751, %r2774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2778, %r2770, %r2775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2781, %r562, %r1224, %r2762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2786, %r2762, %r2785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2789, %r2781, %r2786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2792, %r203, %r2618, %r2530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2796, %r203, %r2629, %r2535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2800, %r203, %r2640, %r2540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2804, %r203, %r2651, %r2545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2808, %r203, %r2664, %r2550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2812, %r203, %r2675, %r2555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2816, %r203, %r2686, %r2560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2820, %r203, %r2697, %r2565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2824, %r203, %r2710, %r2570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2828, %r203, %r2721, %r2575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2832, %r203, %r2732, %r2580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2836, %r203, %r2743, %r2585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2840, %r203, %r2756, %r2590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2844, %r203, %r2767, %r2595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2848, %r203, %r2778, %r2600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2852, %r203, %r2789, %r2605;
	// end inline asm
	// begin inline asm
	mov.b32 %r2861, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2872, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2858, %r551, %r1344, %r2861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2863, %r2861, %r2862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2866, %r2858, %r2863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2869, %r562, %r1344, %r2872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2874, %r2872, %r2873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2877, %r2869, %r2874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2880, %r551, %r1366, %r2861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2884, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2885, %r2861, %r2884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2888, %r2880, %r2885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2891, %r562, %r1366, %r2872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2896, %r2872, %r2895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2899, %r2891, %r2896;
	// end inline asm
	// begin inline asm
	mov.b32 %r2907, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2918, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2904, %r551, %r1390, %r2907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2908, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2909, %r2907, %r2908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2912, %r2904, %r2909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2915, %r562, %r1390, %r2918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2919, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2920, %r2918, %r2919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2923, %r2915, %r2920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2926, %r551, %r1412, %r2907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2930, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2931, %r2907, %r2930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2934, %r2926, %r2931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2937, %r562, %r1412, %r2918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2941, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2942, %r2918, %r2941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2945, %r2937, %r2942;
	// end inline asm
	// begin inline asm
	mov.b32 %r2953, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2964, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2950, %r551, %r1436, %r2953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2954, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2955, %r2953, %r2954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2958, %r2950, %r2955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2961, %r562, %r1436, %r2964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2966, %r2964, %r2965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2969, %r2961, %r2966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2972, %r551, %r1458, %r2953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2977, %r2953, %r2976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2980, %r2972, %r2977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2983, %r562, %r1458, %r2964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2988, %r2964, %r2987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2991, %r2983, %r2988;
	// end inline asm
	// begin inline asm
	mov.b32 %r2999, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3010, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2996, %r551, %r1482, %r2999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3001, %r2999, %r3000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3004, %r2996, %r3001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3007, %r562, %r1482, %r3010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3012, %r3010, %r3011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3015, %r3007, %r3012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3018, %r551, %r1504, %r2999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3023, %r2999, %r3022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3026, %r3018, %r3023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3029, %r562, %r1504, %r3010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3033, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3034, %r3010, %r3033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3037, %r3029, %r3034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3040, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r3040, %r2866, %r2792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3046, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r3046, %r2877, %r2796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3052, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r3052, %r2888, %r2800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3058, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r3058, %r2899, %r2804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3064, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r3064, %r2912, %r2808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3070, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r3070, %r2923, %r2812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3076, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r3076, %r2934, %r2816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3082, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r3082, %r2945, %r2820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3088, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r3088, %r2958, %r2824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3094, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3096, %r3094, %r2969, %r2828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3100, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r3100, %r2980, %r2832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3106, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3108, %r3106, %r2991, %r2836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3112, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3114, %r3112, %r3004, %r2840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3118, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r3118, %r3015, %r2844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3124, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r3124, %r3026, %r2848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3130, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3132, %r3130, %r3037, %r2852;
	// end inline asm
	// begin inline asm
	mov.b32 %r3141, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3152, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3138, %r551, %r552, %r3141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3142, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3143, %r3141, %r3142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3146, %r3138, %r3143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3149, %r562, %r552, %r3152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3153, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3154, %r3152, %r3153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3157, %r3149, %r3154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3160, %r551, %r574, %r3141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3164, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3165, %r3141, %r3164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3168, %r3160, %r3165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3171, %r562, %r574, %r3152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3175, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3176, %r3152, %r3175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3179, %r3171, %r3176;
	// end inline asm
	// begin inline asm
	mov.b32 %r3187, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3198, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3184, %r551, %r598, %r3187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3188, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3189, %r3187, %r3188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3192, %r3184, %r3189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3195, %r562, %r598, %r3198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3199, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3200, %r3198, %r3199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3203, %r3195, %r3200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3206, %r551, %r620, %r3187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3210, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3211, %r3187, %r3210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3214, %r3206, %r3211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3217, %r562, %r620, %r3198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3222, %r3198, %r3221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3225, %r3217, %r3222;
	// end inline asm
	// begin inline asm
	mov.b32 %r3233, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3244, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3230, %r551, %r644, %r3233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3234, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3235, %r3233, %r3234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3238, %r3230, %r3235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3241, %r562, %r644, %r3244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3245, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3246, %r3244, %r3245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3249, %r3241, %r3246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3252, %r551, %r666, %r3233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3256, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3257, %r3233, %r3256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3260, %r3252, %r3257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3263, %r562, %r666, %r3244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3268, %r3244, %r3267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3271, %r3263, %r3268;
	// end inline asm
	// begin inline asm
	mov.b32 %r3279, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3290, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3276, %r551, %r690, %r3279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3280, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3281, %r3279, %r3280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3284, %r3276, %r3281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3287, %r562, %r690, %r3290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3291, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3292, %r3290, %r3291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3295, %r3287, %r3292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3298, %r551, %r712, %r3279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3302, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3303, %r3279, %r3302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3306, %r3298, %r3303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3309, %r562, %r712, %r3290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3313, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3314, %r3290, %r3313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3317, %r3309, %r3314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r239, %r3146, %r3042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3388, %r239, %r3157, %r3048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r239, %r3168, %r3054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3397, %r239, %r3179, %r3060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r239, %r3192, %r3066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3406, %r239, %r3203, %r3072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r239, %r3214, %r3078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3415, %r239, %r3225, %r3084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r239, %r3238, %r3090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3424, %r239, %r3249, %r3096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r239, %r3260, %r3102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3433, %r239, %r3271, %r3108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r239, %r3284, %r3114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r239, %r3295, %r3120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r239, %r3306, %r3126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r239, %r3317, %r3132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3384, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3386, %r3384, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r285, %r3391, %r3386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3393, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3395, %r3393, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r285, %r3400, %r3395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3402, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3404, %r3402, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r285, %r3409, %r3404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3411, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3413, %r3411, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r285, %r3418, %r3413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3420, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3422, %r3420, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r285, %r3427, %r3422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3429, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r3429, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r285, %r3436, %r3431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3438, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r3438, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r285, %r3445, %r3440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3447, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r3447, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r285, %r3454, %r3449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r288, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r285, %r3388, %r3456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r288, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r285, %r3397, %r3463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r288, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r285, %r3406, %r3470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r288, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r285, %r3415, %r3477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r288, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r285, %r3424, %r3484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r288, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r285, %r3433, %r3491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r288, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r285, %r3442, %r3498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r288, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r285, %r3451, %r3505;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3599, %r3596}, {%r327, %r333, %r330, %r336}, {%r3389, %r3459}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3608, %r3605}, {%r327, %r333, %r330, %r336}, {%r3398, %r3466}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3617, %r3614}, {%r327, %r333, %r330, %r336}, {%r3407, %r3473}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3626, %r3623}, {%r327, %r333, %r330, %r336}, {%r3416, %r3480}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3635, %r3632}, {%r327, %r333, %r330, %r336}, {%r3425, %r3487}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3644, %r3641}, {%r327, %r333, %r330, %r336}, {%r3434, %r3494}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3653, %r3650}, {%r327, %r333, %r330, %r336}, {%r3443, %r3501}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3662, %r3659}, {%r327, %r333, %r330, %r336}, {%r3452, %r3508}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3592, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3594, %r3592, %r3596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3597, %r371, %r3599, %r3594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3601, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3603, %r3601, %r3605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3606, %r371, %r3608, %r3603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3610, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3612, %r3610, %r3614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3615, %r371, %r3617, %r3612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3619, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3621, %r3619, %r3623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3624, %r371, %r3626, %r3621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3628, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3630, %r3628, %r3632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3633, %r371, %r3635, %r3630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3637, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3639, %r3637, %r3641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3642, %r371, %r3644, %r3639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3646, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3648, %r3646, %r3650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3651, %r371, %r3653, %r3648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3655, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3657, %r3655, %r3659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3660, %r371, %r3662, %r3657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3664, %r374, %r3599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3667, %r371, %r3596, %r3664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3671, %r374, %r3608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3674, %r371, %r3605, %r3671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3678, %r374, %r3617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3681, %r371, %r3614, %r3678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3685, %r374, %r3626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3688, %r371, %r3623, %r3685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3692, %r374, %r3635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3695, %r371, %r3632, %r3692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3699, %r374, %r3644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3702, %r371, %r3641, %r3699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3706, %r374, %r3653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3709, %r371, %r3650, %r3706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3713, %r374, %r3662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3716, %r371, %r3659, %r3713;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3720, %r3721}, {%r414, %r420, %r417, %r423}, {%r3597, %r3667}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3730, %r3731}, {%r414, %r420, %r417, %r423}, {%r3606, %r3674}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3740, %r3741}, {%r414, %r420, %r417, %r423}, {%r3615, %r3681}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3750, %r3751}, {%r414, %r420, %r417, %r423}, {%r3624, %r3688}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3760, %r3761}, {%r414, %r420, %r417, %r423}, {%r3633, %r3695}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3770, %r3771}, {%r414, %r420, %r417, %r423}, {%r3642, %r3702}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3780, %r3781}, {%r414, %r420, %r417, %r423}, {%r3651, %r3709}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3790, %r3791}, {%r414, %r420, %r417, %r423}, {%r3660, %r3716}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3800, %r15, %r3720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3803, %r15, %r3721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3806, %r15, %r3730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3809, %r15, %r3731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3812, %r15, %r3740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3815, %r15, %r3741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3818, %r15, %r3750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3821, %r15, %r3751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3824, %r15, %r3760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3827, %r15, %r3761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3830, %r15, %r3770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3833, %r15, %r3771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3836, %r15, %r3780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3839, %r15, %r3781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3842, %r15, %r3790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3845, %r15, %r3791;
	// end inline asm
	// begin inline asm
	mov.b32 %r3848, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3849, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3850, %r3800, %r3848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3853, %r3850, %r3849;
	// end inline asm
	// begin inline asm
	mov.b32 %r3856, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3857, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3858, %r3803, %r3856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3861, %r3858, %r3857;
	// end inline asm
	// begin inline asm
	mov.b32 %r3864, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3865, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3866, %r3806, %r3864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3869, %r3866, %r3865;
	// end inline asm
	// begin inline asm
	mov.b32 %r3872, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3873, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3874, %r3809, %r3872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3877, %r3874, %r3873;
	// end inline asm
	// begin inline asm
	mov.b32 %r3880, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3881, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3882, %r3812, %r3880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3885, %r3882, %r3881;
	// end inline asm
	// begin inline asm
	mov.b32 %r3888, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3889, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3890, %r3815, %r3888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3893, %r3890, %r3889;
	// end inline asm
	// begin inline asm
	mov.b32 %r3896, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3897, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3898, %r3818, %r3896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3901, %r3898, %r3897;
	// end inline asm
	// begin inline asm
	mov.b32 %r3904, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3905, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3906, %r3821, %r3904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3909, %r3906, %r3905;
	// end inline asm
	// begin inline asm
	mov.b32 %r3912, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3913, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3914, %r3824, %r3912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3917, %r3914, %r3913;
	// end inline asm
	// begin inline asm
	mov.b32 %r3920, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3921, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3922, %r3827, %r3920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3925, %r3922, %r3921;
	// end inline asm
	// begin inline asm
	mov.b32 %r3928, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3929, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3930, %r3830, %r3928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3933, %r3930, %r3929;
	// end inline asm
	// begin inline asm
	mov.b32 %r3936, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3938, %r3833, %r3936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3941, %r3938, %r3937;
	// end inline asm
	// begin inline asm
	mov.b32 %r3944, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3946, %r3836, %r3944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3949, %r3946, %r3945;
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3954, %r3839, %r3952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3957, %r3954, %r3953;
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3962, %r3842, %r3960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3965, %r3962, %r3961;
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3970, %r3845, %r3968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3973, %r3970, %r3969;
	// end inline asm
	// begin inline asm
	mov.b32 %r3979, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3979, %r3977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3853, %r3978;
	// end inline asm
	// begin inline asm
	mov.b32 %r3984, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3985, %r3979, %r3984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3988, %r3861, %r3985;
	// end inline asm
	// begin inline asm
	mov.b32 %r3991, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3992, %r3979, %r3991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3995, %r3869, %r3992;
	// end inline asm
	// begin inline asm
	mov.b32 %r3998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3999, %r3979, %r3998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4002, %r3877, %r3999;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4005, %r3981, %r3995, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4009, %r3988, %r4002, %r2212;
	// end inline asm
	shl.b32 	%r4016, %r4009, 4;
	// begin inline asm
	lop3.b32 %r4013, %r2218, %r4005, %r4016, 202;
	// end inline asm
	xor.b32  	%r7740, %r4013, -2004318072;
	// begin inline asm
	mov.b32 %r4020, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4019, %r4020, %r4018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4022, %r3885, %r4019;
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4026, %r4020, %r4025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4029, %r3893, %r4026;
	// end inline asm
	// begin inline asm
	mov.b32 %r4032, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4033, %r4020, %r4032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4036, %r3901, %r4033;
	// end inline asm
	// begin inline asm
	mov.b32 %r4039, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4040, %r4020, %r4039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4043, %r3909, %r4040;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4046, %r4022, %r4036, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4050, %r4029, %r4043, %r2212;
	// end inline asm
	shl.b32 	%r4057, %r4050, 4;
	// begin inline asm
	lop3.b32 %r4054, %r2218, %r4046, %r4057, 202;
	// end inline asm
	xor.b32  	%r7741, %r4054, -2004318072;
	// begin inline asm
	mov.b32 %r4061, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4060, %r4061, %r4059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4063, %r3917, %r4060;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4067, %r4061, %r4066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4070, %r3925, %r4067;
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4074, %r4061, %r4073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4077, %r3933, %r4074;
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4081, %r4061, %r4080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4084, %r3941, %r4081;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4087, %r4063, %r4077, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4091, %r4070, %r4084, %r2212;
	// end inline asm
	shl.b32 	%r4098, %r4091, 4;
	// begin inline asm
	lop3.b32 %r4095, %r2218, %r4087, %r4098, 202;
	// end inline asm
	xor.b32  	%r7742, %r4095, -2004318072;
	// begin inline asm
	mov.b32 %r4102, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4101, %r4102, %r4100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4104, %r3949, %r4101;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4108, %r4102, %r4107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4111, %r3957, %r4108;
	// end inline asm
	// begin inline asm
	mov.b32 %r4114, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4115, %r4102, %r4114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4118, %r3965, %r4115;
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4122, %r4102, %r4121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4125, %r3973, %r4122;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4128, %r4104, %r4118, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4132, %r4111, %r4125, %r2212;
	// end inline asm
	shl.b32 	%r4139, %r4132, 4;
	// begin inline asm
	lop3.b32 %r4136, %r2218, %r4128, %r4139, 202;
	// end inline asm
	xor.b32  	%r7743, %r4136, -2004318072;
	st.shared.u32 	[%rd91], %r7740;
	st.shared.u32 	[%rd92], %r7741;
	st.shared.u32 	[%rd93], %r7742;
	st.shared.u32 	[%rd94], %r7743;
	ld.shared.u32 	%r7813, [%rd87];
	ld.shared.u32 	%r7814, [%rd88];
	ld.shared.u32 	%r7815, [%rd89];
	ld.shared.u32 	%r7816, [%rd90];
	// begin inline asm
	mov.b32 %r4145, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4144, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r4142, %r551, %r4144, %r4145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4147, %r4145, %r4146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4150, %r4142, %r4147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4153, %r562, %r4144, %r4156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4158, %r4156, %r4157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4161, %r4153, %r4158;
	// end inline asm
	shr.u32 	%r4166, %r4144, 8;
	// begin inline asm
	lop3.b32 %r4164, %r551, %r4166, %r4145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4169, %r4145, %r4168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4172, %r4164, %r4169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4175, %r562, %r4166, %r4156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4180, %r4156, %r4179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4183, %r4175, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4190, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r4188, %r551, %r4190, %r4191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4193, %r4191, %r4192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4196, %r4188, %r4193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4199, %r562, %r4190, %r4202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4204, %r4202, %r4203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4207, %r4199, %r4204;
	// end inline asm
	shr.u32 	%r4212, %r4190, 8;
	// begin inline asm
	lop3.b32 %r4210, %r551, %r4212, %r4191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4215, %r4191, %r4214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4218, %r4210, %r4215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4221, %r562, %r4212, %r4202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4226, %r4202, %r4225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4229, %r4221, %r4226;
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4236, %r7815, -2004318072;
	// begin inline asm
	lop3.b32 %r4234, %r551, %r4236, %r4237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4239, %r4237, %r4238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4242, %r4234, %r4239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4245, %r562, %r4236, %r4248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4250, %r4248, %r4249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4253, %r4245, %r4250;
	// end inline asm
	shr.u32 	%r4258, %r4236, 8;
	// begin inline asm
	lop3.b32 %r4256, %r551, %r4258, %r4237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4261, %r4237, %r4260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4264, %r4256, %r4261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4267, %r562, %r4258, %r4248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4272, %r4248, %r4271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4275, %r4267, %r4272;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4282, %r7816, -2004318072;
	// begin inline asm
	lop3.b32 %r4280, %r551, %r4282, %r4283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4285, %r4283, %r4284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4288, %r4280, %r4285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4291, %r562, %r4282, %r4294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4296, %r4294, %r4295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4299, %r4291, %r4296;
	// end inline asm
	shr.u32 	%r4304, %r4282, 8;
	// begin inline asm
	lop3.b32 %r4302, %r551, %r4304, %r4283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4307, %r4283, %r4306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4310, %r4302, %r4307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4313, %r562, %r4304, %r4294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4318, %r4294, %r4317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4321, %r4313, %r4318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4324, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4326, %r4324, %r4150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4329, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4331, %r4329, %r4161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4334, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4336, %r4334, %r4172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4339, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4341, %r4339, %r4183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4344, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4346, %r4344, %r4196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4349, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4351, %r4349, %r4207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4354, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4356, %r4354, %r4218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4359, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4361, %r4359, %r4229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4364, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4366, %r4364, %r4242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4369, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4371, %r4369, %r4253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4374, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4376, %r4374, %r4264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4379, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4381, %r4379, %r4275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4384, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4386, %r4384, %r4288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4389, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4391, %r4389, %r4299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4394, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4396, %r4394, %r4310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4399, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4401, %r4399, %r4321;
	// end inline asm
	// begin inline asm
	mov.b32 %r4409, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4406, %r551, %r1344, %r4409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4409, %r4410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4414, %r4406, %r4411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4417, %r562, %r1344, %r4420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4420, %r4421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4425, %r4417, %r4422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4428, %r551, %r1366, %r4409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4409, %r4432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4436, %r4428, %r4433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4439, %r562, %r1366, %r4420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4420, %r4443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4447, %r4439, %r4444;
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4466, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4452, %r551, %r1390, %r4455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4456, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4455, %r4456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4460, %r4452, %r4457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4463, %r562, %r1390, %r4466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4467, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4466, %r4467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4471, %r4463, %r4468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4474, %r551, %r1412, %r4455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4478, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4455, %r4478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4482, %r4474, %r4479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4485, %r562, %r1412, %r4466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4466, %r4489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4493, %r4485, %r4490;
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4498, %r551, %r1436, %r4501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4501, %r4502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4506, %r4498, %r4503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4509, %r562, %r1436, %r4512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4512, %r4513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4517, %r4509, %r4514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4520, %r551, %r1458, %r4501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4501, %r4524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4528, %r4520, %r4525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4531, %r562, %r1458, %r4512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4512, %r4535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4539, %r4531, %r4536;
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4544, %r551, %r1482, %r4547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4549, %r4547, %r4548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4552, %r4544, %r4549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4555, %r562, %r1482, %r4558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4558, %r4559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4563, %r4555, %r4560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4566, %r551, %r1504, %r4547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4547, %r4570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4574, %r4566, %r4571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4577, %r562, %r1504, %r4558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4558, %r4581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4585, %r4577, %r4582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4588, %r203, %r4414, %r4326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4592, %r203, %r4425, %r4331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4596, %r203, %r4436, %r4336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4600, %r203, %r4447, %r4341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4604, %r203, %r4460, %r4346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4608, %r203, %r4471, %r4351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4612, %r203, %r4482, %r4356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4616, %r203, %r4493, %r4361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4620, %r203, %r4506, %r4366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4624, %r203, %r4517, %r4371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4628, %r203, %r4528, %r4376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4632, %r203, %r4539, %r4381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4636, %r203, %r4552, %r4386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4640, %r203, %r4563, %r4391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4644, %r203, %r4574, %r4396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4648, %r203, %r4585, %r4401;
	// end inline asm
	// begin inline asm
	mov.b32 %r4657, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4668, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4654, %r551, %r552, %r4657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4657, %r4658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4662, %r4654, %r4659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4665, %r562, %r552, %r4668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4668, %r4669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4673, %r4665, %r4670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4676, %r551, %r574, %r4657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4657, %r4680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4684, %r4676, %r4681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4687, %r562, %r574, %r4668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4668, %r4691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4695, %r4687, %r4692;
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4714, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4700, %r551, %r598, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4705, %r4703, %r4704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4708, %r4700, %r4705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4711, %r562, %r598, %r4714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4716, %r4714, %r4715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4719, %r4711, %r4716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4722, %r551, %r620, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4727, %r4703, %r4726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4730, %r4722, %r4727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4733, %r562, %r620, %r4714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4738, %r4714, %r4737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4741, %r4733, %r4738;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4746, %r551, %r644, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4751, %r4749, %r4750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4754, %r4746, %r4751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4757, %r562, %r644, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4760, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4768, %r551, %r666, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4749, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4779, %r562, %r666, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4760, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4792, %r551, %r690, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4797, %r4795, %r4796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4800, %r4792, %r4797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4803, %r562, %r690, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4806, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4814, %r551, %r712, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4795, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4825, %r562, %r712, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4830, %r4806, %r4829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4833, %r4825, %r4830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4836, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4838, %r4836, %r4662, %r4588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4842, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4844, %r4842, %r4673, %r4592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4848, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4850, %r4848, %r4684, %r4596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4854, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4856, %r4854, %r4695, %r4600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4860, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4862, %r4860, %r4708, %r4604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4866, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4868, %r4866, %r4719, %r4608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4872, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4874, %r4872, %r4730, %r4612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4878, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4880, %r4878, %r4741, %r4616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4884, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4886, %r4884, %r4754, %r4620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4890, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4892, %r4890, %r4765, %r4624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4896, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4898, %r4896, %r4776, %r4628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4902, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4904, %r4902, %r4787, %r4632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4908, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4910, %r4908, %r4800, %r4636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4914, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4916, %r4914, %r4811, %r4640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4920, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4922, %r4920, %r4822, %r4644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4926, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4928, %r4926, %r4833, %r4648;
	// end inline asm
	// begin inline asm
	mov.b32 %r4937, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4948, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4934, %r551, %r2348, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4939, %r4937, %r4938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4942, %r4934, %r4939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4945, %r562, %r2348, %r4948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4949, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4950, %r4948, %r4949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4953, %r4945, %r4950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4956, %r551, %r2370, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4961, %r4937, %r4960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4964, %r4956, %r4961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4967, %r562, %r2370, %r4948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4972, %r4948, %r4971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4975, %r4967, %r4972;
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4980, %r551, %r2394, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4984, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4985, %r4983, %r4984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4988, %r4980, %r4985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4991, %r562, %r2394, %r4994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4995, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4996, %r4994, %r4995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4999, %r4991, %r4996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5002, %r551, %r2416, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5006, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5007, %r4983, %r5006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5010, %r5002, %r5007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5013, %r562, %r2416, %r4994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5018, %r4994, %r5017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5021, %r5013, %r5018;
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5040, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5026, %r551, %r2440, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5031, %r5029, %r5030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5034, %r5026, %r5031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5037, %r562, %r2440, %r5040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5042, %r5040, %r5041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5045, %r5037, %r5042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5048, %r551, %r2462, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5053, %r5029, %r5052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5056, %r5048, %r5053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5059, %r562, %r2462, %r5040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5064, %r5040, %r5063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5067, %r5059, %r5064;
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5086, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5072, %r551, %r2486, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5077, %r5075, %r5076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5080, %r5072, %r5077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5083, %r562, %r2486, %r5086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5087, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5088, %r5086, %r5087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5091, %r5083, %r5088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5094, %r551, %r2508, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5099, %r5075, %r5098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5102, %r5094, %r5099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5105, %r562, %r2508, %r5086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5109, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5110, %r5086, %r5109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5113, %r5105, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5187, %r239, %r4942, %r4838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5184, %r239, %r4953, %r4844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5196, %r239, %r4964, %r4850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5193, %r239, %r4975, %r4856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5205, %r239, %r4988, %r4862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5202, %r239, %r4999, %r4868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5214, %r239, %r5010, %r4874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5211, %r239, %r5021, %r4880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5223, %r239, %r5034, %r4886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5220, %r239, %r5045, %r4892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5232, %r239, %r5056, %r4898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5229, %r239, %r5067, %r4904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5241, %r239, %r5080, %r4910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5238, %r239, %r5091, %r4916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5250, %r239, %r5102, %r4922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5247, %r239, %r5113, %r4928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5180, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5182, %r5180, %r5184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5185, %r285, %r5187, %r5182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5189, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5191, %r5189, %r5193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5194, %r285, %r5196, %r5191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5198, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5200, %r5198, %r5202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5203, %r285, %r5205, %r5200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5207, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5209, %r5207, %r5211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5212, %r285, %r5214, %r5209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5216, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5218, %r5216, %r5220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5221, %r285, %r5223, %r5218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5225, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5227, %r5225, %r5229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5230, %r285, %r5232, %r5227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5234, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5236, %r5234, %r5238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5239, %r285, %r5241, %r5236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5243, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5245, %r5243, %r5247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5248, %r285, %r5250, %r5245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5252, %r288, %r5187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5255, %r285, %r5184, %r5252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5259, %r288, %r5196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5262, %r285, %r5193, %r5259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5266, %r288, %r5205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5269, %r285, %r5202, %r5266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5273, %r288, %r5214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5276, %r285, %r5211, %r5273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5280, %r288, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5283, %r285, %r5220, %r5280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5287, %r288, %r5232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5290, %r285, %r5229, %r5287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5294, %r288, %r5241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5297, %r285, %r5238, %r5294;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5301, %r288, %r5250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5304, %r285, %r5247, %r5301;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5395, %r5392}, {%r327, %r333, %r330, %r336}, {%r5185, %r5255}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5404, %r5401}, {%r327, %r333, %r330, %r336}, {%r5194, %r5262}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5413, %r5410}, {%r327, %r333, %r330, %r336}, {%r5203, %r5269}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5422, %r5419}, {%r327, %r333, %r330, %r336}, {%r5212, %r5276}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5431, %r5428}, {%r327, %r333, %r330, %r336}, {%r5221, %r5283}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5440, %r5437}, {%r327, %r333, %r330, %r336}, {%r5230, %r5290}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5449, %r5446}, {%r327, %r333, %r330, %r336}, {%r5239, %r5297}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5458, %r5455}, {%r327, %r333, %r330, %r336}, {%r5248, %r5304}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5388, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5390, %r5388, %r5392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5393, %r371, %r5395, %r5390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5397, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5399, %r5397, %r5401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5402, %r371, %r5404, %r5399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5406, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5408, %r5406, %r5410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5411, %r371, %r5413, %r5408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5415, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5417, %r5415, %r5419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5420, %r371, %r5422, %r5417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5424, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5426, %r5424, %r5428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5429, %r371, %r5431, %r5426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5433, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5435, %r5433, %r5437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5438, %r371, %r5440, %r5435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5442, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5444, %r5442, %r5446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5447, %r371, %r5449, %r5444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5451, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5453, %r5451, %r5455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5456, %r371, %r5458, %r5453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5460, %r374, %r5395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5463, %r371, %r5392, %r5460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5467, %r374, %r5404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5470, %r371, %r5401, %r5467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5474, %r374, %r5413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5477, %r371, %r5410, %r5474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5481, %r374, %r5422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5484, %r371, %r5419, %r5481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5488, %r374, %r5431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5491, %r371, %r5428, %r5488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5495, %r374, %r5440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5498, %r371, %r5437, %r5495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5502, %r374, %r5449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5505, %r371, %r5446, %r5502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5509, %r374, %r5458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5512, %r371, %r5455, %r5509;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5516, %r5517}, {%r414, %r420, %r417, %r423}, {%r5393, %r5463}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5526, %r5527}, {%r414, %r420, %r417, %r423}, {%r5402, %r5470}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5536, %r5537}, {%r414, %r420, %r417, %r423}, {%r5411, %r5477}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5546, %r5547}, {%r414, %r420, %r417, %r423}, {%r5420, %r5484}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5556, %r5557}, {%r414, %r420, %r417, %r423}, {%r5429, %r5491}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5566, %r5567}, {%r414, %r420, %r417, %r423}, {%r5438, %r5498}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5576, %r5577}, {%r414, %r420, %r417, %r423}, {%r5447, %r5505}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5586, %r5587}, {%r414, %r420, %r417, %r423}, {%r5456, %r5512}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5596, %r15, %r5516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5599, %r15, %r5517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5602, %r15, %r5526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5605, %r15, %r5527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5608, %r15, %r5536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5611, %r15, %r5537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5614, %r15, %r5546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5617, %r15, %r5547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5620, %r15, %r5556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5623, %r15, %r5557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5626, %r15, %r5566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5629, %r15, %r5567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5632, %r15, %r5576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5635, %r15, %r5577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5638, %r15, %r5586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5641, %r15, %r5587;
	// end inline asm
	// begin inline asm
	mov.b32 %r5644, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5645, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5646, %r5596, %r5644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5649, %r5646, %r5645;
	// end inline asm
	// begin inline asm
	mov.b32 %r5652, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5653, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5654, %r5599, %r5652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5657, %r5654, %r5653;
	// end inline asm
	// begin inline asm
	mov.b32 %r5660, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5661, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5662, %r5602, %r5660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5665, %r5662, %r5661;
	// end inline asm
	// begin inline asm
	mov.b32 %r5668, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5669, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5670, %r5605, %r5668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5673, %r5670, %r5669;
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5678, %r5608, %r5676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5681, %r5678, %r5677;
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5685, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5686, %r5611, %r5684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5689, %r5686, %r5685;
	// end inline asm
	// begin inline asm
	mov.b32 %r5692, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5694, %r5614, %r5692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5697, %r5694, %r5693;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5702, %r5617, %r5700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5705, %r5702, %r5701;
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5710, %r5620, %r5708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5713, %r5710, %r5709;
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5718, %r5623, %r5716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5721, %r5718, %r5717;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5726, %r5626, %r5724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5729, %r5726, %r5725;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5734, %r5629, %r5732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5737, %r5734, %r5733;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5742, %r5632, %r5740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5745, %r5742, %r5741;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5750, %r5635, %r5748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5753, %r5750, %r5749;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5758, %r5638, %r5756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5761, %r5758, %r5757;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5766, %r5641, %r5764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5769, %r5766, %r5765;
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5775, %r5773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5777, %r5649, %r5774;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5781, %r5775, %r5780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5657, %r5781;
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5788, %r5775, %r5787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5791, %r5665, %r5788;
	// end inline asm
	// begin inline asm
	mov.b32 %r5794, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5795, %r5775, %r5794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5673, %r5795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5801, %r5777, %r5791, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5805, %r5784, %r5798, %r2212;
	// end inline asm
	shl.b32 	%r5812, %r5805, 4;
	// begin inline asm
	lop3.b32 %r5809, %r2218, %r5801, %r5812, 202;
	// end inline asm
	xor.b32  	%r7744, %r5809, -2004318072;
	// begin inline asm
	mov.b32 %r5816, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5816, %r5814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5818, %r5681, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5816, %r5821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5689, %r5822;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5829, %r5816, %r5828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5832, %r5697, %r5829;
	// end inline asm
	// begin inline asm
	mov.b32 %r5835, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5836, %r5816, %r5835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5705, %r5836;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5842, %r5818, %r5832, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5846, %r5825, %r5839, %r2212;
	// end inline asm
	shl.b32 	%r5853, %r5846, 4;
	// begin inline asm
	lop3.b32 %r5850, %r2218, %r5842, %r5853, 202;
	// end inline asm
	xor.b32  	%r7745, %r5850, -2004318072;
	// begin inline asm
	mov.b32 %r5857, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5857, %r5855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5713, %r5856;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5857, %r5862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5721, %r5863;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5857, %r5869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5873, %r5729, %r5870;
	// end inline asm
	// begin inline asm
	mov.b32 %r5876, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5857, %r5876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5880, %r5737, %r5877;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5883, %r5859, %r5873, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5887, %r5866, %r5880, %r2212;
	// end inline asm
	shl.b32 	%r5894, %r5887, 4;
	// begin inline asm
	lop3.b32 %r5891, %r2218, %r5883, %r5894, 202;
	// end inline asm
	xor.b32  	%r7746, %r5891, -2004318072;
	// begin inline asm
	mov.b32 %r5898, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5898, %r5896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5745, %r5897;
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5898, %r5903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5753, %r5904;
	// end inline asm
	// begin inline asm
	mov.b32 %r5910, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5898, %r5910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5761, %r5911;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5898, %r5917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5769, %r5918;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5924, %r5900, %r5914, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5928, %r5907, %r5921, %r2212;
	// end inline asm
	shl.b32 	%r5935, %r5928, 4;
	// begin inline asm
	lop3.b32 %r5932, %r2218, %r5924, %r5935, 202;
	// end inline asm
	xor.b32  	%r7747, %r5932, -2004318072;
	st.shared.u32 	[%rd91], %r7744;
	st.shared.u32 	[%rd92], %r7745;
	st.shared.u32 	[%rd93], %r7746;
	st.shared.u32 	[%rd94], %r7747;
	ld.shared.u32 	%r7817, [%rd87];
	ld.shared.u32 	%r7818, [%rd88];
	ld.shared.u32 	%r7819, [%rd89];
	ld.shared.u32 	%r7820, [%rd90];
	// begin inline asm
	mov.b32 %r5941, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5952, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5940, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r5938, %r551, %r5940, %r5941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5941, %r5942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5946, %r5938, %r5943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5949, %r562, %r5940, %r5952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5952, %r5953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5957, %r5949, %r5954;
	// end inline asm
	shr.u32 	%r5962, %r5940, 8;
	// begin inline asm
	lop3.b32 %r5960, %r551, %r5962, %r5941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5965, %r5941, %r5964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5968, %r5960, %r5965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5971, %r562, %r5962, %r5952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5976, %r5952, %r5975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5979, %r5971, %r5976;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5986, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r5984, %r551, %r5986, %r5987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5989, %r5987, %r5988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5992, %r5984, %r5989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5995, %r562, %r5986, %r5998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5998, %r5999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6003, %r5995, %r6000;
	// end inline asm
	shr.u32 	%r6008, %r5986, 8;
	// begin inline asm
	lop3.b32 %r6006, %r551, %r6008, %r5987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6011, %r5987, %r6010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6014, %r6006, %r6011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6017, %r562, %r6008, %r5998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6022, %r5998, %r6021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6025, %r6017, %r6022;
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6044, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6032, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r6030, %r551, %r6032, %r6033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6035, %r6033, %r6034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6038, %r6030, %r6035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6041, %r562, %r6032, %r6044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6045, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6046, %r6044, %r6045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6049, %r6041, %r6046;
	// end inline asm
	shr.u32 	%r6054, %r6032, 8;
	// begin inline asm
	lop3.b32 %r6052, %r551, %r6054, %r6033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6057, %r6033, %r6056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6060, %r6052, %r6057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6063, %r562, %r6054, %r6044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6068, %r6044, %r6067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6071, %r6063, %r6068;
	// end inline asm
	// begin inline asm
	mov.b32 %r6079, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6090, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6078, %r7820, -2004318072;
	// begin inline asm
	lop3.b32 %r6076, %r551, %r6078, %r6079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6081, %r6079, %r6080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6084, %r6076, %r6081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6087, %r562, %r6078, %r6090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6092, %r6090, %r6091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6095, %r6087, %r6092;
	// end inline asm
	shr.u32 	%r6100, %r6078, 8;
	// begin inline asm
	lop3.b32 %r6098, %r551, %r6100, %r6079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6102, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6103, %r6079, %r6102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6106, %r6098, %r6103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6109, %r562, %r6100, %r6090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6113, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6114, %r6090, %r6113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6117, %r6109, %r6114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6122, %r6120, %r5946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6127, %r6125, %r5957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6132, %r6130, %r5968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6137, %r6135, %r5979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6142, %r6140, %r5992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6147, %r6145, %r6003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6152, %r6150, %r6014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6157, %r6155, %r6025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6162, %r6160, %r6038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6167, %r6165, %r6049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6172, %r6170, %r6060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6177, %r6175, %r6071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6182, %r6180, %r6084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6187, %r6185, %r6095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6192, %r6190, %r6106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6195, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6197, %r6195, %r6117;
	// end inline asm
	// begin inline asm
	mov.b32 %r6205, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6216, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6202, %r551, %r552, %r6205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6207, %r6205, %r6206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6210, %r6202, %r6207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6213, %r562, %r552, %r6216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6217, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6218, %r6216, %r6217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6221, %r6213, %r6218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6224, %r551, %r574, %r6205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6229, %r6205, %r6228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6232, %r6224, %r6229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6235, %r562, %r574, %r6216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6240, %r6216, %r6239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6243, %r6235, %r6240;
	// end inline asm
	// begin inline asm
	mov.b32 %r6251, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6262, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6248, %r551, %r598, %r6251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6252, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6253, %r6251, %r6252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6256, %r6248, %r6253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6259, %r562, %r598, %r6262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6264, %r6262, %r6263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6267, %r6259, %r6264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6270, %r551, %r620, %r6251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6275, %r6251, %r6274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6278, %r6270, %r6275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6281, %r562, %r620, %r6262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6286, %r6262, %r6285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6289, %r6281, %r6286;
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6294, %r551, %r644, %r6297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6299, %r6297, %r6298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6302, %r6294, %r6299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6305, %r562, %r644, %r6308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6309, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6310, %r6308, %r6309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6313, %r6305, %r6310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6316, %r551, %r666, %r6297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6321, %r6297, %r6320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6324, %r6316, %r6321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6327, %r562, %r666, %r6308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6331, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6332, %r6308, %r6331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6335, %r6327, %r6332;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6340, %r551, %r690, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6345, %r6343, %r6344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6348, %r6340, %r6345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6351, %r562, %r690, %r6354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6356, %r6354, %r6355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6359, %r6351, %r6356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6362, %r551, %r712, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6367, %r6343, %r6366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6370, %r6362, %r6367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6373, %r562, %r712, %r6354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6378, %r6354, %r6377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6381, %r6373, %r6378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6384, %r203, %r6210, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6388, %r203, %r6221, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6392, %r203, %r6232, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6396, %r203, %r6243, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6400, %r203, %r6256, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6404, %r203, %r6267, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6408, %r203, %r6278, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6412, %r203, %r6289, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6416, %r203, %r6302, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6420, %r203, %r6313, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6424, %r203, %r6324, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6428, %r203, %r6335, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6432, %r203, %r6348, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6436, %r203, %r6359, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6440, %r203, %r6370, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6444, %r203, %r6381, %r6197;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6450, %r551, %r2348, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6455, %r6453, %r6454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6458, %r6450, %r6455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r562, %r2348, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6464, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6472, %r551, %r2370, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6477, %r6453, %r6476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6480, %r6472, %r6477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6483, %r562, %r2370, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6488, %r6464, %r6487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6491, %r6483, %r6488;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6496, %r551, %r2394, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6501, %r6499, %r6500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6504, %r6496, %r6501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6507, %r562, %r2394, %r6510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6512, %r6510, %r6511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6515, %r6507, %r6512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6518, %r551, %r2416, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6523, %r6499, %r6522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6526, %r6518, %r6523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6529, %r562, %r2416, %r6510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6534, %r6510, %r6533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6537, %r6529, %r6534;
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6542, %r551, %r2440, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6547, %r6545, %r6546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6550, %r6542, %r6547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r562, %r2440, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6556, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r551, %r2462, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6545, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6575, %r562, %r2462, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6580, %r6556, %r6579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6583, %r6575, %r6580;
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6588, %r551, %r2486, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6593, %r6591, %r6592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6596, %r6588, %r6593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6599, %r562, %r2486, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6604, %r6602, %r6603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6607, %r6599, %r6604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r551, %r2508, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6591, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6621, %r562, %r2508, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6626, %r6602, %r6625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6629, %r6621, %r6626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6632, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6634, %r6632, %r6458, %r6384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6638, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6640, %r6638, %r6469, %r6388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6644, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6646, %r6644, %r6480, %r6392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6650, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6652, %r6650, %r6491, %r6396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6656, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6658, %r6656, %r6504, %r6400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6662, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6664, %r6662, %r6515, %r6404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6668, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6670, %r6668, %r6526, %r6408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6674, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6676, %r6674, %r6537, %r6412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6680, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6682, %r6680, %r6550, %r6416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6686, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6688, %r6686, %r6561, %r6420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6692, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6694, %r6692, %r6572, %r6424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6698, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6700, %r6698, %r6583, %r6428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6704, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6706, %r6704, %r6596, %r6432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6710, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6712, %r6710, %r6607, %r6436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6716, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6718, %r6716, %r6618, %r6440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6722, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6724, %r6722, %r6629, %r6444;
	// end inline asm
	// begin inline asm
	mov.b32 %r6733, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6744, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6730, %r551, %r4144, %r6733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6734, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6735, %r6733, %r6734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6738, %r6730, %r6735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6741, %r562, %r4144, %r6744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6745, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6746, %r6744, %r6745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6749, %r6741, %r6746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6752, %r551, %r4166, %r6733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6756, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6757, %r6733, %r6756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6760, %r6752, %r6757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6763, %r562, %r4166, %r6744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6768, %r6744, %r6767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6771, %r6763, %r6768;
	// end inline asm
	// begin inline asm
	mov.b32 %r6779, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6790, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6776, %r551, %r4190, %r6779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6780, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6781, %r6779, %r6780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6784, %r6776, %r6781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6787, %r562, %r4190, %r6790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6791, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6792, %r6790, %r6791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6795, %r6787, %r6792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6798, %r551, %r4212, %r6779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6802, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6803, %r6779, %r6802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6806, %r6798, %r6803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6809, %r562, %r4212, %r6790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6814, %r6790, %r6813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6817, %r6809, %r6814;
	// end inline asm
	// begin inline asm
	mov.b32 %r6825, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6836, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6822, %r551, %r4236, %r6825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6826, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6827, %r6825, %r6826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6830, %r6822, %r6827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6833, %r562, %r4236, %r6836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6837, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6838, %r6836, %r6837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6841, %r6833, %r6838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6844, %r551, %r4258, %r6825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6848, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6849, %r6825, %r6848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6852, %r6844, %r6849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6855, %r562, %r4258, %r6836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6860, %r6836, %r6859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6863, %r6855, %r6860;
	// end inline asm
	// begin inline asm
	mov.b32 %r6871, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6882, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6868, %r551, %r4282, %r6871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6872, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6873, %r6871, %r6872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6876, %r6868, %r6873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6879, %r562, %r4282, %r6882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6883, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6884, %r6882, %r6883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6887, %r6879, %r6884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6890, %r551, %r4304, %r6871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6895, %r6871, %r6894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6898, %r6890, %r6895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6901, %r562, %r4304, %r6882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6905, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6906, %r6882, %r6905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6909, %r6901, %r6906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r239, %r6738, %r6634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6980, %r239, %r6749, %r6640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6992, %r239, %r6760, %r6646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6989, %r239, %r6771, %r6652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7001, %r239, %r6784, %r6658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6998, %r239, %r6795, %r6664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r239, %r6806, %r6670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7007, %r239, %r6817, %r6676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r239, %r6830, %r6682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r239, %r6841, %r6688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7028, %r239, %r6852, %r6694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7025, %r239, %r6863, %r6700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7037, %r239, %r6876, %r6706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7034, %r239, %r6887, %r6712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7046, %r239, %r6898, %r6718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7043, %r239, %r6909, %r6724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6976, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6978, %r6976, %r6980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r285, %r6983, %r6978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6985, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6987, %r6985, %r6989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r285, %r6992, %r6987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6994, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6996, %r6994, %r6998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6999, %r285, %r7001, %r6996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7003, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7005, %r7003, %r7007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r285, %r7010, %r7005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7012, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7014, %r7012, %r7016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r285, %r7019, %r7014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7021, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7023, %r7021, %r7025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r285, %r7028, %r7023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7030, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7032, %r7030, %r7034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r285, %r7037, %r7032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7039, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7041, %r7039, %r7043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7044, %r285, %r7046, %r7041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7048, %r288, %r6983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7051, %r285, %r6980, %r7048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7055, %r288, %r6992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7058, %r285, %r6989, %r7055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7062, %r288, %r7001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7065, %r285, %r6998, %r7062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7069, %r288, %r7010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7072, %r285, %r7007, %r7069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7076, %r288, %r7019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7079, %r285, %r7016, %r7076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7083, %r288, %r7028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7086, %r285, %r7025, %r7083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7090, %r288, %r7037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7093, %r285, %r7034, %r7090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7097, %r288, %r7046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7100, %r285, %r7043, %r7097;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7191, %r7188}, {%r327, %r333, %r330, %r336}, {%r6981, %r7051}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7200, %r7197}, {%r327, %r333, %r330, %r336}, {%r6990, %r7058}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7209, %r7206}, {%r327, %r333, %r330, %r336}, {%r6999, %r7065}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r327, %r333, %r330, %r336}, {%r7008, %r7072}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r327, %r333, %r330, %r336}, {%r7017, %r7079}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r327, %r333, %r330, %r336}, {%r7026, %r7086}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r327, %r333, %r330, %r336}, {%r7035, %r7093}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r327, %r333, %r330, %r336}, {%r7044, %r7100}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7184, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7186, %r7184, %r7188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7189, %r371, %r7191, %r7186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7193, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7195, %r7193, %r7197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7198, %r371, %r7200, %r7195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7202, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r7202, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r371, %r7209, %r7204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r371, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r371, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r371, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r371, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r371, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7256, %r374, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7259, %r371, %r7188, %r7256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r374, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r371, %r7197, %r7263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r374, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r371, %r7206, %r7270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r374, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r371, %r7215, %r7277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r374, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r371, %r7224, %r7284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r374, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r371, %r7233, %r7291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7298, %r374, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7301, %r371, %r7242, %r7298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7305, %r374, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7308, %r371, %r7251, %r7305;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7312, %r7313}, {%r414, %r420, %r417, %r423}, {%r7189, %r7259}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7322, %r7323}, {%r414, %r420, %r417, %r423}, {%r7198, %r7266}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7332, %r7333}, {%r414, %r420, %r417, %r423}, {%r7207, %r7273}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7342, %r7343}, {%r414, %r420, %r417, %r423}, {%r7216, %r7280}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7352, %r7353}, {%r414, %r420, %r417, %r423}, {%r7225, %r7287}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7362, %r7363}, {%r414, %r420, %r417, %r423}, {%r7234, %r7294}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7372, %r7373}, {%r414, %r420, %r417, %r423}, {%r7243, %r7301}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7382, %r7383}, {%r414, %r420, %r417, %r423}, {%r7252, %r7308}, {%r1724, %r1724};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7392, %r15, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7395, %r15, %r7313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r15, %r7322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r15, %r7323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r15, %r7332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7407, %r15, %r7333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7410, %r15, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7413, %r15, %r7343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7416, %r15, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7419, %r15, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r15, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7425, %r15, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7428, %r15, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7431, %r15, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7434, %r15, %r7382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7437, %r15, %r7383;
	// end inline asm
	// begin inline asm
	mov.b32 %r7440, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7441, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7442, %r7392, %r7440;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7445, %r7442, %r7441;
	// end inline asm
	// begin inline asm
	mov.b32 %r7448, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7449, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7450, %r7395, %r7448;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7453, %r7450, %r7449;
	// end inline asm
	// begin inline asm
	mov.b32 %r7456, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7457, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7458, %r7398, %r7456;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7461, %r7458, %r7457;
	// end inline asm
	// begin inline asm
	mov.b32 %r7464, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7465, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7466, %r7401, %r7464;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7469, %r7466, %r7465;
	// end inline asm
	// begin inline asm
	mov.b32 %r7472, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7473, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7474, %r7404, %r7472;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7477, %r7474, %r7473;
	// end inline asm
	// begin inline asm
	mov.b32 %r7480, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7481, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7482, %r7407, %r7480;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7485, %r7482, %r7481;
	// end inline asm
	// begin inline asm
	mov.b32 %r7488, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7489, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7490, %r7410, %r7488;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7493, %r7490, %r7489;
	// end inline asm
	// begin inline asm
	mov.b32 %r7496, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7497, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7498, %r7413, %r7496;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7501, %r7498, %r7497;
	// end inline asm
	// begin inline asm
	mov.b32 %r7504, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7505, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7506, %r7416, %r7504;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7509, %r7506, %r7505;
	// end inline asm
	// begin inline asm
	mov.b32 %r7512, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7513, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7514, %r7419, %r7512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7517, %r7514, %r7513;
	// end inline asm
	// begin inline asm
	mov.b32 %r7520, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7521, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7522, %r7422, %r7520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7525, %r7522, %r7521;
	// end inline asm
	// begin inline asm
	mov.b32 %r7528, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7530, %r7425, %r7528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7533, %r7530, %r7529;
	// end inline asm
	// begin inline asm
	mov.b32 %r7536, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7538, %r7428, %r7536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7541, %r7538, %r7537;
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7546, %r7431, %r7544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7549, %r7546, %r7545;
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7554, %r7434, %r7552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7557, %r7554, %r7553;
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7562, %r7437, %r7560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7565, %r7562, %r7561;
	// end inline asm
	// begin inline asm
	mov.b32 %r7571, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7570, %r7571, %r7569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7573, %r7445, %r7570;
	// end inline asm
	// begin inline asm
	mov.b32 %r7576, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7577, %r7571, %r7576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7580, %r7453, %r7577;
	// end inline asm
	// begin inline asm
	mov.b32 %r7583, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7584, %r7571, %r7583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7587, %r7461, %r7584;
	// end inline asm
	// begin inline asm
	mov.b32 %r7590, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7591, %r7571, %r7590;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7594, %r7469, %r7591;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7597, %r7573, %r7587, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7601, %r7580, %r7594, %r2212;
	// end inline asm
	shl.b32 	%r7608, %r7601, 4;
	// begin inline asm
	lop3.b32 %r7605, %r2218, %r7597, %r7608, 202;
	// end inline asm
	xor.b32  	%r7748, %r7605, -2004318072;
	// begin inline asm
	mov.b32 %r7612, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7611, %r7612, %r7610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7614, %r7477, %r7611;
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7618, %r7612, %r7617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7621, %r7485, %r7618;
	// end inline asm
	// begin inline asm
	mov.b32 %r7624, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7625, %r7612, %r7624;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7628, %r7493, %r7625;
	// end inline asm
	// begin inline asm
	mov.b32 %r7631, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7632, %r7612, %r7631;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7635, %r7501, %r7632;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7638, %r7614, %r7628, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7642, %r7621, %r7635, %r2212;
	// end inline asm
	shl.b32 	%r7649, %r7642, 4;
	// begin inline asm
	lop3.b32 %r7646, %r2218, %r7638, %r7649, 202;
	// end inline asm
	xor.b32  	%r7749, %r7646, -2004318072;
	// begin inline asm
	mov.b32 %r7653, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7651, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7653, %r7651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7509, %r7652;
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7653, %r7658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7662, %r7517, %r7659;
	// end inline asm
	// begin inline asm
	mov.b32 %r7665, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7653, %r7665;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7669, %r7525, %r7666;
	// end inline asm
	// begin inline asm
	mov.b32 %r7672, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7653, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7533, %r7673;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7679, %r7655, %r7669, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7683, %r7662, %r7676, %r2212;
	// end inline asm
	shl.b32 	%r7690, %r7683, 4;
	// begin inline asm
	lop3.b32 %r7687, %r2218, %r7679, %r7690, 202;
	// end inline asm
	xor.b32  	%r7750, %r7687, -2004318072;
	// begin inline asm
	mov.b32 %r7694, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7694, %r7692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7541, %r7693;
	// end inline asm
	// begin inline asm
	mov.b32 %r7699, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7694, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7549, %r7700;
	// end inline asm
	// begin inline asm
	mov.b32 %r7706, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7694, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7557, %r7707;
	// end inline asm
	// begin inline asm
	mov.b32 %r7713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7694, %r7713;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7565, %r7714;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7720, %r7696, %r7710, %r2212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7724, %r7703, %r7717, %r2212;
	// end inline asm
	shl.b32 	%r7731, %r7724, 4;
	// begin inline asm
	lop3.b32 %r7728, %r2218, %r7720, %r7731, 202;
	// end inline asm
	xor.b32  	%r7751, %r7728, -2004318072;
	st.shared.u32 	[%rd91], %r7748;
	st.shared.u32 	[%rd92], %r7749;
	st.shared.u32 	[%rd93], %r7750;
	st.shared.u32 	[%rd94], %r7751;
	add.s32 	%r7808, %r7808, -64;
	add.s64 	%rd109, %rd109, 8324;
	setp.eq.s32 	%p229, %r7808, 0;
	@%p229 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass10545
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7757, [%rd9];
	ld.shared.u32 	%r7758, [%rd10+128];
	ld.shared.u32 	%r7765, [%rd10+4];
	ld.shared.u32 	%r7766, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7752, %r7757, %r7758, %r522;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7756, %r7757, %r7758, %r526;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7760, %r7765, %r7766, %r522;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7764, %r7765, %r7766, %r526;
	// end inline asm
	selp.b32 	%r7768, %r7756, %r7752, %p225;
	shfl.sync.bfly.b32	%r164, %r7768, 8, 31, -1;
	selp.b32 	%r7769, %r7764, %r7760, %p225;
	shfl.sync.bfly.b32	%r165, %r7769, 8, 31, -1;
	and.b32  	%r7770, %r7795, 256;
	setp.eq.s32 	%p231, %r7770, 0;
	@%p231 bra 	LBB0_121;
// %bb.120:                             // %L29325
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7771, %r165, %r7764, %p225;
	selp.b32 	%r7772, %r7760, %r165, %p225;
	selp.b32 	%r7773, %r164, %r7756, %p225;
	selp.b32 	%r7774, %r7752, %r164, %p225;
	shl.b32 	%r7775, %r7795, 12;
	or.b32  	%r7776, %r7775, %r96;
	or.b32  	%r7777, %r7776, %r97;
	or.b32  	%r7778, %r7777, %r101;
	cvt.u64.u32 	%rd95, %r7778;
	add.s64 	%rd96, %rd95, %rd11;
	shr.u64 	%rd97, %rd96, 35;
	add.s64 	%rd98, %rd96, %rd97;
	shr.s64 	%rd99, %rd98, 29;
	setp.lt.s64 	%p233, %rd96, 0;
	and.b64  	%rd100, %rd98, -536870912;
	setp.ne.s64 	%p234, %rd100, %rd96;
	and.pred  	%p235, %p233, %p234;
	selp.u64 	%rd101, 1, 0, %p235;
	sub.s64 	%rd102, %rd101, %rd99;
	shl.b64 	%rd103, %rd102, 29;
	add.s64 	%rd104, %rd103, %rd96;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd106, %rd3, %rd105;
	st.global.v4.u32 	[%rd106], {%r7774, %r7772, %r7773, %r7771};
	bra.uni 	LBB0_121;
LBB0_122:                               // %L29555
	st.global.u32 	[%rd4], %r7782;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r7781, 2;
	st.global.u32 	[%rd4], %r7781;
	mov.u64 	%rd107, exception2333;
	cvta.global.u64 	%rd108, %rd107;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd108;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd43, exception12354;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_124:                               // %L29655
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_10147, 
	(
	);
	} // callseq 3
	mov.u64 	%rd52, exception12354;
	cvta.global.u64 	%rd53, %rd52;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd53;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_123:                               // %L29652
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_10147, 
	(
	);
	} // callseq 7
	mov.u64 	%rd58, exception12354;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd59;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_149:                               // %L29649
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_10147, 
	(
	);
	} // callseq 13
	mov.u64 	%rd72, exception12354;
	cvta.global.u64 	%rd73, %rd72;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd73;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 14
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 15
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
