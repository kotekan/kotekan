// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3423[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<185>;
	.reg .b16 	%rs<1192>;
	.reg .b32 	%r<7944>;
	.reg .f32 	%f<721>;
	.reg .b64 	%rd<149>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r113, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r120, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r120, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r114, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r121, %r4, 9;
	or.b32  	%r122, %r2, %r3;
	or.b32  	%r123, %r122, %r121;
	mul.wide.u32 	%rd42, %r123, 4;
	add.s64 	%rd4, %rd36, %rd42;
	mov.u32 	%r124, 1;
	st.global.u32 	[%rd4], %r124;
	setp.gt.u32 	%p2, %r114, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r115, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r115, %r114;
	setp.gt.s32 	%p4, %r115, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r116, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r125, %r115, %r114;
	and.b32  	%r126, %r125, 255;
	setp.ne.s32 	%p6, %r126, 0;
	setp.gt.u32 	%p7, %r116, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r117, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r117, %r116;
	setp.gt.s32 	%p10, %r117, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	not.b32 	%r127, %r116;
	add.s32 	%r128, %r127, %r117;
	and.b32  	%r129, %r128, 3;
	setp.eq.s32 	%p12, %r129, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r118, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r118, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r119, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r118, %r119;
	setp.lt.s32 	%p15, %r119, 49;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r58, %r3, 2, 1;
	shr.u32 	%r59, %r3, 4;
	shl.b32 	%r137, %r59, 1;
	shl.b32 	%r138, %r58, 2;
	shl.b32 	%r60, %r3, 3;
	and.b32  	%r139, %r60, 24;
	or.b32  	%r140, %r138, %r139;
	or.b32  	%r141, %r137, %r140;
	bfe.u32 	%r142, %r3, 3, 1;
	or.b32  	%r62, %r142, %r141;
	shl.b32 	%r63, %r62, 1;
	or.b32  	%r143, %r63, -255;
	cvt.rn.f32.s32 	%f46, %r143;
	mov.f32 	%f47, 0f44000000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p22, %f44, 0f00000000;
	mov.f32 	%f720, 0f3F800000;
	mov.f32 	%f713, %f720;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L599
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r151, %f74;
	and.b32  	%r152, %r151, -2147483648;
	or.b32  	%r153, %r152, 1056964608;
	mov.b32 	%f75, %r153;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p23, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p23;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p24, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p24;
	cvt.rzi.s32.f32 	%r154, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r155, %r154, 1;
	setp.eq.b32 	%p25, %r155, 1;
	selp.f32 	%f93, %f91, %f92, %p25;
	and.b32  	%r156, %r154, 2;
	setp.eq.s32 	%p26, %r156, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p26;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p27, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p27;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f713, %f99, %f100;
$L__BB0_13:                             // %L603
	or.b32  	%r157, %r63, -191;
	cvt.rn.f32.s32 	%f104, %r157;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p33, %f6, 0f00000000;
	mov.f32 	%f714, %f720;
	@%p33 bra 	$L__BB0_15;
// %bb.14:                              // %L617
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r165, %f132;
	and.b32  	%r166, %r165, -2147483648;
	or.b32  	%r167, %r166, 1056964608;
	mov.b32 	%f133, %r167;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p34, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p34;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p35, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p35;
	cvt.rzi.s32.f32 	%r168, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r169, %r168, 1;
	setp.eq.b32 	%p36, %r169, 1;
	selp.f32 	%f151, %f149, %f150, %p36;
	and.b32  	%r170, %r168, 2;
	setp.eq.s32 	%p37, %r170, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p37;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p38, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p38;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f714, %f157, %f158;
$L__BB0_15:                             // %L621
	or.b32  	%r174, %r63, -127;
	cvt.rn.f32.s32 	%f163, %r174;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p44, %f11, 0f00000000;
	mov.f32 	%f715, %f720;
	@%p44 bra 	$L__BB0_17;
// %bb.16:                              // %L697
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r182, %f191;
	and.b32  	%r183, %r182, -2147483648;
	or.b32  	%r184, %r183, 1056964608;
	mov.b32 	%f192, %r184;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p45, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p45;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p46, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p46;
	cvt.rzi.s32.f32 	%r185, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r186, %r185, 1;
	setp.eq.b32 	%p47, %r186, 1;
	selp.f32 	%f210, %f208, %f209, %p47;
	and.b32  	%r187, %r185, 2;
	setp.eq.s32 	%p48, %r187, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p48;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p49, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p49;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f715, %f216, %f217;
$L__BB0_17:                             // %L701
	or.b32  	%r188, %r63, -63;
	cvt.rn.f32.s32 	%f221, %r188;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p55, %f17, 0f00000000;
	mov.f32 	%f716, %f720;
	@%p55 bra 	$L__BB0_19;
// %bb.18:                              // %L715
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r196, %f249;
	and.b32  	%r197, %r196, -2147483648;
	or.b32  	%r198, %r197, 1056964608;
	mov.b32 	%f250, %r198;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p56, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p56;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p57, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p57;
	cvt.rzi.s32.f32 	%r199, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r200, %r199, 1;
	setp.eq.b32 	%p58, %r200, 1;
	selp.f32 	%f268, %f266, %f267, %p58;
	and.b32  	%r201, %r199, 2;
	setp.eq.s32 	%p59, %r201, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p59;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p60, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p60;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f716, %f274, %f275;
$L__BB0_19:                             // %L719
	or.b32  	%r205, %r63, 1;
	cvt.rn.f32.s32 	%f280, %r205;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p66, %f22, 0f00000000;
	mov.f32 	%f717, %f720;
	@%p66 bra 	$L__BB0_21;
// %bb.20:                              // %L795
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r213, %f308;
	and.b32  	%r214, %r213, -2147483648;
	or.b32  	%r215, %r214, 1056964608;
	mov.b32 	%f309, %r215;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p67, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p67;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p68, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p68;
	cvt.rzi.s32.f32 	%r216, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r217, %r216, 1;
	setp.eq.b32 	%p69, %r217, 1;
	selp.f32 	%f327, %f325, %f326, %p69;
	and.b32  	%r218, %r216, 2;
	setp.eq.s32 	%p70, %r218, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p70;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p71, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p71;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f717, %f333, %f334;
$L__BB0_21:                             // %L799
	or.b32  	%r219, %r63, 65;
	cvt.rn.f32.s32 	%f338, %r219;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p77, %f28, 0f00000000;
	mov.f32 	%f718, %f720;
	@%p77 bra 	$L__BB0_23;
// %bb.22:                              // %L813
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r227, %f366;
	and.b32  	%r228, %r227, -2147483648;
	or.b32  	%r229, %r228, 1056964608;
	mov.b32 	%f367, %r229;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p78, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p78;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p79, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p79;
	cvt.rzi.s32.f32 	%r230, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r231, %r230, 1;
	setp.eq.b32 	%p80, %r231, 1;
	selp.f32 	%f385, %f383, %f384, %p80;
	and.b32  	%r232, %r230, 2;
	setp.eq.s32 	%p81, %r232, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p81;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p82, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p82;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f718, %f391, %f392;
$L__BB0_23:                             // %L817
	or.b32  	%r236, %r63, 129;
	cvt.rn.f32.s32 	%f397, %r236;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p88, %f33, 0f00000000;
	mov.f32 	%f719, %f720;
	@%p88 bra 	$L__BB0_25;
// %bb.24:                              // %L893
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r244, %f425;
	and.b32  	%r245, %r244, -2147483648;
	or.b32  	%r246, %r245, 1056964608;
	mov.b32 	%f426, %r246;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p89, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p89;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p90, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p90;
	cvt.rzi.s32.f32 	%r247, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r248, %r247, 1;
	setp.eq.b32 	%p91, %r248, 1;
	selp.f32 	%f444, %f442, %f443, %p91;
	and.b32  	%r249, %r247, 2;
	setp.eq.s32 	%p92, %r249, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p92;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p93, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p93;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f719, %f450, %f451;
$L__BB0_25:                             // %L897
	or.b32  	%r250, %r63, 193;
	cvt.rn.f32.s32 	%f455, %r250;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p99, %f39, 0f00000000;
	@%p99 bra 	$L__BB0_27;
// %bb.26:                              // %L911
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r258, %f483;
	and.b32  	%r259, %r258, -2147483648;
	or.b32  	%r260, %r259, 1056964608;
	mov.b32 	%f484, %r260;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p100, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p100;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p101, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p101;
	cvt.rzi.s32.f32 	%r261, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r262, %r261, 1;
	setp.eq.b32 	%p102, %r262, 1;
	selp.f32 	%f502, %f500, %f501, %p102;
	and.b32  	%r263, %r261, 2;
	setp.eq.s32 	%p103, %r263, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p103;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p104, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p104;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f720, %f508, %f509;
$L__BB0_27:                             // %L915
	setp.le.s32 	%p147, %r115, %r114;
	mov.u32 	%r7915, 0;
	@%p147 bra 	$L__BB0_38;
// %bb.28:                              // %L1438.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p17, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p28, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p39, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p50, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p61, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p72, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p17;
	selp.f32 	%f108, %f107, %f4, %p28;
	selp.f32 	%f167, %f166, %f9, %p39;
	selp.f32 	%f225, %f224, %f15, %p50;
	selp.f32 	%f284, %f283, %f20, %p61;
	selp.f32 	%f342, %f341, %f26, %p72;
	setp.gt.f32 	%p83, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p83;
	abs.f32 	%f457, %f37;
	mov.b32 	%r144, %f51;
	mov.b32 	%r158, %f109;
	mov.b32 	%r175, %f168;
	mov.b32 	%r189, %f226;
	mov.b32 	%r206, %f285;
	mov.b32 	%r220, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p94, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r145, %r144, -2147483648;
	and.b32  	%r159, %r158, -2147483648;
	and.b32  	%r176, %r175, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r207, %r206, -2147483648;
	and.b32  	%r221, %r220, -2147483648;
	mov.b32 	%r237, %f402;
	selp.f32 	%f459, %f458, %f37, %p94;
	or.b32  	%r146, %r145, 1056964608;
	or.b32  	%r160, %r159, 1056964608;
	or.b32  	%r177, %r176, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r208, %r207, 1056964608;
	or.b32  	%r222, %r221, 1056964608;
	and.b32  	%r238, %r237, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r146;
	mov.b32 	%f110, %r160;
	mov.b32 	%f169, %r177;
	mov.b32 	%f227, %r191;
	mov.b32 	%f286, %r208;
	mov.b32 	%f344, %r222;
	or.b32  	%r239, %r238, 1056964608;
	mov.b32 	%r251, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r239;
	and.b32  	%r252, %r251, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p18, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p29, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p40, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p51, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p62, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p73, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r253, %r252, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p18;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p19, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p29;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p30, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p40;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p41, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p51;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p52, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p62;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p63, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p73;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p74, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p84, %f406, 0f4B000000;
	mov.b32 	%f461, %r253;
	shr.u32 	%r130, %r4, 3;
	selp.f32 	%f58, %f57, %f56, %p19;
	selp.f32 	%f116, %f115, %f114, %p30;
	selp.f32 	%f175, %f174, %f173, %p41;
	selp.f32 	%f233, %f232, %f231, %p52;
	selp.f32 	%f292, %f291, %f290, %p63;
	selp.f32 	%f350, %f349, %f348, %p74;
	selp.f32 	%f407, %f402, %f405, %p84;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p85, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	cvt.u16.u32 	%rs1, %r130;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p85;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p95, %f464, 0f4B000000;
	and.b16  	%rs2, %rs1, 255;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p95;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p96, %f464, 0f3F000000;
	mul.lo.s16 	%rs3, %rs2, 171;
	cvt.rzi.s32.f32 	%r147, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r161, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r178, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r209, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r223, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p96;
	shl.b32 	%r48, %r3, 1;
	shr.u16 	%rs4, %rs3, 13;
	add.s32 	%r148, %r147, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r162, %r161, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r179, %r178, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r210, %r209, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r224, %r223, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r240, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	and.b32  	%r49, %r48, 8;
	shl.b32 	%r50, %r3, 2;
	mul.lo.s16 	%rs5, %rs4, 48;
	and.b32  	%r55, %r3, 18;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r149, %r148, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r163, %r162, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r180, %r179, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r211, %r210, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r225, %r224, 1;
	add.s32 	%r241, %r240, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	and.b32  	%r51, %r50, 32;
	sub.s16 	%rs6, %rs1, %rs5;
	or.b32  	%r132, %r55, %r49;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p20, %r149, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p31, %r163, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p42, %r180, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p53, %r194, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p64, %r211, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p75, %r225, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r242, %r241, 1;
	cvt.rzi.s32.f32 	%r254, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	and.b16  	%rs7, %rs6, 255;
	and.b32  	%r54, %r50, 4;
	or.b32  	%r133, %r132, %r51;
	selp.f32 	%f70, %f68, %f69, %p20;
	and.b32  	%r150, %r148, 2;
	selp.f32 	%f128, %f126, %f127, %p31;
	and.b32  	%r164, %r162, 2;
	selp.f32 	%f187, %f185, %f186, %p42;
	and.b32  	%r181, %r179, 2;
	selp.f32 	%f245, %f243, %f244, %p53;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f304, %f302, %f303, %p64;
	and.b32  	%r212, %r210, 2;
	selp.f32 	%f362, %f360, %f361, %p75;
	and.b32  	%r226, %r224, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p86, %r242, 1;
	add.s32 	%r255, %r254, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	mul.wide.u16 	%r53, %rs7, 64;
	or.b32  	%r134, %r133, %r54;
	setp.eq.s32 	%p21, %r150, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p32, %r164, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p43, %r181, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p54, %r195, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p65, %r212, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p76, %r226, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p86;
	and.b32  	%r243, %r241, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r256, %r255, 1;
	or.b32  	%r135, %r134, %r53;
	selp.f32 	%f73, %f70, %f72, %p21;
	selp.f32 	%f131, %f128, %f130, %p32;
	selp.f32 	%f190, %f187, %f189, %p43;
	selp.f32 	%f248, %f245, %f247, %p54;
	selp.f32 	%f307, %f304, %f306, %p65;
	selp.f32 	%f365, %f362, %f364, %p76;
	setp.eq.s32 	%p87, %r243, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p97, %r256, 1;
	bfe.u32 	%r136, %r135, 1, 7;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p87;
	selp.f32 	%f479, %f477, %f478, %p97;
	and.b32  	%r257, %r255, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd43, %r136, 4;
	mul.f32 	%f102, %f713, %f43;
	mov.f32 	%f103, 0f42800000;
	mul.f32 	%f160, %f714, %f5;
	mul.f32 	%f219, %f715, %f10;
	mul.f32 	%f277, %f716, %f16;
	mul.f32 	%f336, %f717, %f21;
	mul.f32 	%f394, %f718, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p98, %r257, 0;
	sub.f32 	%f481, %f71, %f479;
	cvt.u32.u16 	%r131, %rs6;
	add.s64 	%rd44, %rd1, %rd43;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f719, %f32;
	selp.f32 	%f482, %f479, %f481, %p98;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r47, %r3, 16;
	and.b32  	%r52, %r131, 255;
	ld.global.u32 	%r56, [%rd44];
	shr.u32 	%r57, %r3, 1;
	shr.u32 	%r61, %r3, 3;
	mov.b32 	%r173, %f162;
	mov.b32 	%r172, %f3;
	mov.b32 	%r204, %f279;
	mov.b32 	%r203, %f14;
	mov.b32 	%r235, %f396;
	mov.b32 	%r234, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r171, %r173, %r172;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r202, %r204, %r203;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r233, %r235, %r234;
	// end inline asm
	mul.f32 	%f510, %f720, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r266, %f512;
	mov.b32 	%r265, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r264, %r266, %r265;
	// end inline asm
	mul.lo.s32 	%r303, %r62, 63;
	and.b32  	%r304, %r303, 127;
	cvt.rn.f32.s32 	%f513, %r304;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r305, %f515;
	and.b32  	%r306, %r305, -2147483648;
	or.b32  	%r307, %r306, 1056964608;
	mov.b32 	%f516, %r307;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p105, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p105;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p106, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p106;
	cvt.rzi.s32.f32 	%r308, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r309, %r308, 1;
	setp.eq.b32 	%p107, %r309, 1;
	selp.f32 	%f534, %f532, %f533, %p107;
	selp.f32 	%f535, %f533, %f532, %p107;
	and.b32  	%r310, %r308, 2;
	setp.eq.s32 	%p108, %r310, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p108;
	add.s32 	%r311, %r308, 1;
	and.b32  	%r312, %r311, 2;
	setp.eq.s32 	%p109, %r312, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p109;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p110, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p110;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p111, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p111;
	add.s32 	%r313, %r303, 96;
	and.b32  	%r314, %r313, 127;
	cvt.rn.f32.s32 	%f547, %r314;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r315, %f549;
	and.b32  	%r316, %r315, -2147483648;
	or.b32  	%r317, %r316, 1056964608;
	mov.b32 	%f550, %r317;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p112, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p112;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p113, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p113;
	cvt.rzi.s32.f32 	%r318, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r319, %r318, 1;
	setp.eq.b32 	%p114, %r319, 1;
	selp.f32 	%f568, %f566, %f567, %p114;
	selp.f32 	%f569, %f567, %f566, %p114;
	and.b32  	%r320, %r318, 2;
	setp.eq.s32 	%p115, %r320, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p115;
	add.s32 	%r321, %r318, 1;
	and.b32  	%r322, %r321, 2;
	setp.eq.s32 	%p116, %r322, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p116;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p117, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p117;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p118, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p118;
	mov.b32 	%r268, %f546;
	mov.b32 	%r269, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	mov.b32 	%r271, %f543;
	mov.b32 	%r272, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	and.b32  	%r323, %r61, 2;
	and.b32  	%r324, %r57, 4;
	or.b32  	%r325, %r58, %r323;
	or.b32  	%r326, %r325, %r324;
	and.b32  	%r327, %r48, 6;
	mul.lo.s32 	%r328, %r326, %r327;
	and.b32  	%r329, %r328, 14;
	cvt.rn.f32.s32 	%f580, %r329;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r330, %f583;
	and.b32  	%r331, %r330, -2147483648;
	or.b32  	%r332, %r331, 1056964608;
	mov.b32 	%f584, %r332;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p119, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p119;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p120, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p120;
	cvt.rzi.s32.f32 	%r333, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r334, %r333, 1;
	setp.eq.b32 	%p121, %r334, 1;
	selp.f32 	%f602, %f600, %f601, %p121;
	selp.f32 	%f603, %f601, %f600, %p121;
	and.b32  	%r335, %r333, 2;
	setp.eq.s32 	%p122, %r335, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p122;
	add.s32 	%r336, %r333, 1;
	and.b32  	%r337, %r336, 2;
	setp.eq.s32 	%p123, %r337, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p123;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p124, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p124;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p125, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p125;
	or.b32  	%r338, %r48, 8;
	mul.lo.s32 	%r339, %r326, %r338;
	and.b32  	%r340, %r339, 14;
	cvt.rn.f32.s32 	%f614, %r340;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r341, %f616;
	and.b32  	%r342, %r341, -2147483648;
	or.b32  	%r343, %r342, 1056964608;
	mov.b32 	%f617, %r343;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p126, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p126;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p127, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p127;
	cvt.rzi.s32.f32 	%r344, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r345, %r344, 1;
	setp.eq.b32 	%p128, %r345, 1;
	selp.f32 	%f635, %f633, %f634, %p128;
	selp.f32 	%f636, %f634, %f633, %p128;
	and.b32  	%r346, %r344, 2;
	setp.eq.s32 	%p129, %r346, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p129;
	add.s32 	%r347, %r344, 1;
	and.b32  	%r348, %r347, 2;
	setp.eq.s32 	%p130, %r348, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p130;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p131, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p131;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p132, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p132;
	mov.b32 	%r274, %f613;
	mov.b32 	%r275, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r275, %r274;
	// end inline asm
	mov.b32 	%r277, %f610;
	mov.b32 	%r278, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	xor.b32  	%r298, %r277, -2147483648;
	xor.b32  	%r299, %r278, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r299, %r298;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r275, %r274;
	// end inline asm
	cvt.rn.f32.s32 	%f647, %r328;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r349, %f649;
	and.b32  	%r350, %r349, -2147483648;
	or.b32  	%r351, %r350, 1056964608;
	mov.b32 	%f650, %r351;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p133, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p133;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p134, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p134;
	cvt.rzi.s32.f32 	%r352, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r353, %r352, 1;
	setp.eq.b32 	%p135, %r353, 1;
	selp.f32 	%f668, %f666, %f667, %p135;
	selp.f32 	%f669, %f667, %f666, %p135;
	and.b32  	%r354, %r352, 2;
	setp.eq.s32 	%p136, %r354, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p136;
	add.s32 	%r355, %r352, 1;
	and.b32  	%r356, %r355, 2;
	setp.eq.s32 	%p137, %r356, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p137;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p138, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p138;
	mov.b32 	%r357, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p139, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p139;
	shl.b32 	%r358, %r326, 3;
	add.s32 	%r359, %r328, %r358;
	cvt.rn.f32.s32 	%f680, %r359;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r360, %f682;
	and.b32  	%r361, %r360, -2147483648;
	or.b32  	%r362, %r361, 1056964608;
	mov.b32 	%f683, %r362;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p140, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p140;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p141, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p141;
	cvt.rzi.s32.f32 	%r363, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r364, %r363, 1;
	setp.eq.b32 	%p142, %r364, 1;
	selp.f32 	%f701, %f699, %f700, %p142;
	selp.f32 	%f702, %f700, %f699, %p142;
	and.b32  	%r365, %r363, 2;
	setp.eq.s32 	%p143, %r365, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p143;
	add.s32 	%r366, %r363, 1;
	and.b32  	%r367, %r366, 2;
	setp.eq.s32 	%p144, %r367, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p144;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p145, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p145;
	mov.b32 	%r368, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p146, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p146;
	mov.b32 	%r287, %f712;
	mov.b32 	%r286, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r287, %r286;
	// end inline asm
	xor.b32  	%r290, %r368, -2147483648;
	xor.b32  	%r289, %r357, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r291, %r275, %r274;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r294, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r297, %r299, %r298;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r300, %r275, %r274;
	// end inline asm
	or.b32  	%r21, %r47, %r1;
	shl.b32 	%r370, %r4, 5;
	and.b32  	%r371, %r50, 28;
	add.s32 	%r372, %r52, %r118;
	shl.b32 	%r373, %r372, 8;
	and.b32  	%r374, %r370, 224;
	or.b32  	%r375, %r374, %r371;
	or.b32  	%r22, %r375, %r373;
	and.b32  	%r23, %r3, 8;
	shl.b32 	%r376, %r3, 4;
	or.b32  	%r377, %r23, %r376;
	shr.u32 	%r378, %r377, 2;
	and.b32  	%r379, %r378, 30;
	or.b32  	%r24, %r61, %r139;
	and.b32  	%r25, %r3, 4;
	shr.u32 	%r26, %r1, 1;
	and.b32  	%r27, %r2, 32;
	or.b32  	%r381, %r27, %r26;
	or.b32  	%r28, %r381, 8;
	or.b32  	%r29, %r381, 16;
	or.b32  	%r30, %r381, 24;
	or.b32  	%r382, %r55, %r54;
	or.b32  	%r383, %r382, %r51;
	or.b32  	%r384, %r383, %r49;
	shr.u32 	%r385, %r384, 1;
	mul.lo.s32 	%r386, %r385, 65;
	add.s32 	%r387, %r381, %r386;
	add.s32 	%r388, %r28, %r386;
	add.s32 	%r389, %r29, %r386;
	add.s32 	%r390, %r30, %r386;
	shl.b32 	%r391, %r1, 1;
	or.b32  	%r392, %r391, %r59;
	mul.lo.s32 	%r393, %r392, 65;
	add.s32 	%r394, %r379, %r393;
	mul.wide.u32 	%rd45, %r394, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd5, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r379;
	cvt.u64.u32 	%rd48, %r393;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd6, %rd46, %rd50;
	shl.b32 	%r395, %r116, 16;
	add.s32 	%r396, %r395, -196608;
	shl.b32 	%r397, %r1, 2;
	or.b32  	%r398, %r397, %r61;
	and.b32  	%r399, %r53, 192;
	or.b32  	%r400, %r398, %r399;
	shl.b32 	%r401, %r400, 8;
	or.b32  	%r31, %r375, %r401;
	cvt.s64.s32 	%rd7, %r396;
	bfe.s32 	%r402, %r1, 1, 1;
	and.b32  	%r403, %r1, 2;
	setp.eq.s32 	%p148, %r403, 0;
	and.b32  	%r404, %r402, 520;
	and.b32  	%r405, %r1, 1;
	neg.s32 	%r406, %r405;
	setp.eq.b32 	%p149, %r405, 1;
	and.b32  	%r407, %r406, 1040;
	shr.u32 	%r408, %r1, 3;
	mul.lo.s32 	%r409, %r408, 130;
	mul.lo.s32 	%r410, %r59, 65;
	bfe.s32 	%r411, %r1, 2, 1;
	and.b32  	%r412, %r1, 4;
	setp.eq.s32 	%p150, %r412, 0;
	and.b32  	%r413, %r411, 260;
	add.s32 	%r414, %r407, %r379;
	add.s32 	%r415, %r414, %r404;
	add.s32 	%r416, %r415, %r409;
	add.s32 	%r417, %r416, %r410;
	add.s32 	%r418, %r417, %r413;
	mul.wide.u32 	%rd51, %r418, 4;
	add.s64 	%rd8, %rd46, %rd51;
	selp.b64 	%rd52, 0, 260, %p150;
	cvt.u64.u32 	%rd53, %r410;
	cvt.u64.u32 	%rd54, %r409;
	selp.b64 	%rd55, 0, 520, %p148;
	selp.b64 	%rd56, 1040, 0, %p149;
	add.s64 	%rd57, %rd47, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd54;
	add.s64 	%rd60, %rd59, %rd53;
	add.s64 	%rd61, %rd60, %rd52;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd9, %rd46, %rd62;
	add.s32 	%r419, %r418, 2113;
	mul.wide.u32 	%rd63, %r419, 4;
	add.s64 	%rd10, %rd46, %rd63;
	add.s32 	%r420, %r418, 2082;
	mul.wide.u32 	%rd64, %r420, 4;
	add.s64 	%rd11, %rd46, %rd64;
	add.s32 	%r421, %r418, 2114;
	mul.wide.u32 	%rd65, %r421, 4;
	add.s64 	%rd12, %rd46, %rd65;
	add.s32 	%r422, %r418, 4194;
	mul.wide.u32 	%rd66, %r422, 4;
	add.s64 	%rd13, %rd46, %rd66;
	add.s32 	%r423, %r418, 4163;
	mul.wide.u32 	%rd67, %r423, 4;
	add.s64 	%rd14, %rd46, %rd67;
	add.s32 	%r424, %r418, 4195;
	mul.wide.u32 	%rd68, %r424, 4;
	add.s64 	%rd15, %rd46, %rd68;
	add.s32 	%r425, %r418, 6275;
	mul.wide.u32 	%rd69, %r425, 4;
	add.s64 	%rd16, %rd46, %rd69;
	add.s32 	%r426, %r418, 6244;
	mul.wide.u32 	%rd70, %r426, 4;
	add.s64 	%rd17, %rd46, %rd70;
	add.s32 	%r427, %r418, 6276;
	mul.wide.u32 	%rd71, %r427, 4;
	add.s64 	%rd18, %rd46, %rd71;
	mul.wide.u32 	%rd72, %r390, 4;
	add.s64 	%rd19, %rd46, %rd72;
	mul.wide.u32 	%rd73, %r389, 4;
	add.s64 	%rd20, %rd46, %rd73;
	mul.wide.u32 	%rd74, %r388, 4;
	add.s64 	%rd21, %rd46, %rd74;
	mul.wide.u32 	%rd75, %r387, 4;
	add.s64 	%rd22, %rd46, %rd75;
	mov.u16 	%rs1183, 25600;
	mov.u16 	%rs1079, 21504;
	mov.u16 	%rs1191, 18432;
	mov.u16 	%rs1149, -14592;
	mov.u32 	%r7943, %r7915;
	mov.u32 	%r7942, %r7915;
	mov.u32 	%r7941, %r7915;
	mov.u32 	%r7940, %r7915;
	mov.u32 	%r7939, %r7915;
	mov.u32 	%r7938, %r7915;
	mov.u32 	%r7937, %r7915;
	mov.u32 	%r7936, %r7915;
	mov.u32 	%r7935, %r7915;
	mov.u32 	%r7934, %r7915;
	mov.u32 	%r7933, %r7915;
	mov.u32 	%r7932, %r7915;
	mov.u32 	%r44, %r7915;
	bra.uni 	$L__BB0_29;
$L__BB0_37:                             // %pass16978
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r7909, %r7916, %r31;
	or.b32  	%r7910, %r7909, 196608;
	cvt.s64.s32 	%rd129, %r7910;
	add.s64 	%rd130, %rd129, %rd7;
	shr.u64 	%rd131, %rd130, 39;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 25;
	setp.lt.s64 	%p179, %rd130, 0;
	and.b64  	%rd134, %rd132, -33554432;
	setp.ne.s64 	%p180, %rd134, %rd130;
	and.pred  	%p181, %p179, %p180;
	selp.u64 	%rd135, 1, 0, %p181;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 25;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r109, %r111, %r110, %r112};
	setp.ne.s32 	%p182, %r44, 32512;
	add.s32 	%r44, %r44, 256;
	add.s32 	%r7911, %r44, %r114;
	setp.lt.s32 	%p183, %r7911, %r115;
	and.pred  	%p184, %p182, %p183;
	@%p184 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_38;
$L__BB0_29:                             // %L1438
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_30 Depth 2
	setp.eq.s32 	%p151, %r23, 0;
	or.b32  	%r493, %r44, %r50;
	and.b32  	%r494, %r493, 32544;
	or.b32  	%r495, %r21, %r494;
	add.s32 	%r496, %r495, %r114;
	mad.lo.s32 	%r497, %r496, 12288, %r22;
	mul.hi.s32 	%r498, %r497, 715827883;
	shr.u32 	%r499, %r498, 31;
	shr.s32 	%r500, %r498, 26;
	add.s32 	%r501, %r500, %r499;
	setp.lt.s32 	%p152, %r497, 0;
	mul.lo.s32 	%r502, %r501, 402653184;
	setp.ne.s32 	%p153, %r502, %r497;
	and.pred  	%p154, %p152, %p153;
	selp.s32 	%r503, -1, 0, %p154;
	add.s32 	%r504, %r501, %r503;
	or.b32  	%r505, %r497, 1;
	mad.lo.s32 	%r506, %r504, -402653184, %r505;
	mul.wide.s32 	%rd76, %r506, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r507, %r508, %r509, %r510}, [%rd77+-4];
	or.b32  	%r511, %r495, 64;
	add.s32 	%r512, %r511, %r114;
	mad.lo.s32 	%r513, %r512, 12288, %r22;
	mul.hi.s32 	%r514, %r513, 715827883;
	shr.u32 	%r515, %r514, 31;
	shr.s32 	%r516, %r514, 26;
	add.s32 	%r517, %r516, %r515;
	setp.lt.s32 	%p155, %r513, 0;
	mul.lo.s32 	%r518, %r517, 402653184;
	setp.ne.s32 	%p156, %r518, %r513;
	and.pred  	%p157, %p155, %p156;
	selp.s32 	%r519, -1, 0, %p157;
	add.s32 	%r520, %r517, %r519;
	or.b32  	%r521, %r513, 1;
	mad.lo.s32 	%r522, %r520, -402653184, %r521;
	mul.wide.s32 	%rd78, %r522, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r523, %r524, %r525, %r526}, [%rd79+-4];
	or.b32  	%r527, %r495, 128;
	add.s32 	%r528, %r527, %r114;
	mad.lo.s32 	%r529, %r528, 12288, %r22;
	mul.hi.s32 	%r530, %r529, 715827883;
	shr.u32 	%r531, %r530, 31;
	shr.s32 	%r532, %r530, 26;
	add.s32 	%r533, %r532, %r531;
	setp.lt.s32 	%p158, %r529, 0;
	mul.lo.s32 	%r534, %r533, 402653184;
	setp.ne.s32 	%p159, %r534, %r529;
	and.pred  	%p160, %p158, %p159;
	selp.s32 	%r535, -1, 0, %p160;
	add.s32 	%r536, %r533, %r535;
	or.b32  	%r537, %r529, 1;
	mad.lo.s32 	%r538, %r536, -402653184, %r537;
	mul.wide.s32 	%rd80, %r538, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r539, %r540, %r541, %r542}, [%rd81+-4];
	or.b32  	%r543, %r495, 192;
	add.s32 	%r544, %r543, %r114;
	mad.lo.s32 	%r545, %r544, 12288, %r22;
	mul.hi.s32 	%r546, %r545, 715827883;
	shr.u32 	%r547, %r546, 31;
	shr.s32 	%r548, %r546, 26;
	add.s32 	%r549, %r548, %r547;
	setp.lt.s32 	%p161, %r545, 0;
	mul.lo.s32 	%r550, %r549, 402653184;
	setp.ne.s32 	%p162, %r550, %r545;
	and.pred  	%p163, %p161, %p162;
	selp.s32 	%r551, -1, 0, %p163;
	add.s32 	%r552, %r549, %r551;
	or.b32  	%r553, %r545, 1;
	mad.lo.s32 	%r554, %r552, -402653184, %r553;
	mul.wide.s32 	%rd82, %r554, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r555, %r556, %r557, %r558}, [%rd83+-4];
	selp.b32 	%r559, %r509, %r507, %p151;
	shfl.sync.bfly.b32	%r560, %r559, 8, 31, -1;
	selp.b32 	%r429, %r507, %r560, %p151;
	selp.b32 	%r430, %r560, %r509, %p151;
	selp.b32 	%r561, %r510, %r508, %p151;
	shfl.sync.bfly.b32	%r562, %r561, 8, 31, -1;
	selp.b32 	%r437, %r508, %r562, %p151;
	selp.b32 	%r438, %r562, %r510, %p151;
	selp.b32 	%r563, %r525, %r523, %p151;
	shfl.sync.bfly.b32	%r564, %r563, 8, 31, -1;
	selp.b32 	%r445, %r523, %r564, %p151;
	selp.b32 	%r446, %r564, %r525, %p151;
	selp.b32 	%r565, %r526, %r524, %p151;
	shfl.sync.bfly.b32	%r566, %r565, 8, 31, -1;
	selp.b32 	%r453, %r524, %r566, %p151;
	selp.b32 	%r454, %r566, %r526, %p151;
	selp.b32 	%r567, %r541, %r539, %p151;
	shfl.sync.bfly.b32	%r568, %r567, 8, 31, -1;
	selp.b32 	%r461, %r539, %r568, %p151;
	selp.b32 	%r462, %r568, %r541, %p151;
	selp.b32 	%r569, %r542, %r540, %p151;
	shfl.sync.bfly.b32	%r570, %r569, 8, 31, -1;
	selp.b32 	%r469, %r540, %r570, %p151;
	selp.b32 	%r470, %r570, %r542, %p151;
	selp.b32 	%r571, %r557, %r555, %p151;
	shfl.sync.bfly.b32	%r572, %r571, 8, 31, -1;
	selp.b32 	%r477, %r555, %r572, %p151;
	selp.b32 	%r478, %r572, %r557, %p151;
	selp.b32 	%r573, %r558, %r556, %p151;
	shfl.sync.bfly.b32	%r574, %r573, 8, 31, -1;
	selp.b32 	%r485, %r556, %r574, %p151;
	selp.b32 	%r486, %r574, %r558, %p151;
	mov.u32 	%r487, 21520;
	// begin inline asm
	prmt.b32 %r428, %r429, %r430, %r487;
	// end inline asm
	mov.u32 	%r491, 30258;
	// begin inline asm
	prmt.b32 %r432, %r429, %r430, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r437, %r438, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r440, %r437, %r438, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r445, %r446, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r445, %r446, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r453, %r454, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r453, %r454, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r461, %r462, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r461, %r462, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r469, %r470, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r469, %r470, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r491;
	// end inline asm
	st.shared.u32 	[%rd8], %r428;
	st.shared.u32 	[%rd9+128], %r432;
	st.shared.u32 	[%rd9+4], %r436;
	st.shared.u32 	[%rd9+132], %r440;
	st.shared.u32 	[%rd8+8324], %r444;
	st.shared.u32 	[%rd10], %r448;
	st.shared.u32 	[%rd11], %r452;
	st.shared.u32 	[%rd12], %r456;
	st.shared.u32 	[%rd8+16648], %r460;
	st.shared.u32 	[%rd13], %r464;
	st.shared.u32 	[%rd14], %r468;
	st.shared.u32 	[%rd15], %r472;
	st.shared.u32 	[%rd8+24972], %r476;
	st.shared.u32 	[%rd16], %r480;
	st.shared.u32 	[%rd17], %r484;
	st.shared.u32 	[%rd18], %r488;
	bar.sync 	0;
	or.b32  	%r575, %r44, %r24;
	or.b32  	%r45, %r575, %r25;
	shr.u32 	%r7930, %r45, 6;
	mov.u64 	%rd145, %rd22;
	mov.u64 	%rd146, %rd21;
	mov.u64 	%rd147, %rd20;
	mov.u64 	%rd148, %rd19;
	mov.u32 	%r7931, %r7915;
$L__BB0_30:                             // %pass5624
                                        //   Parent Loop BB0_29 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7760, %r45, %r7931;
	bfe.s32 	%r7761, %r7760, 1, 1;
	and.b32  	%r7762, %r7761, 520;
	and.b32  	%r7763, %r7760, 1;
	neg.s32 	%r7764, %r7763;
	and.b32  	%r7765, %r7764, 1040;
	bfe.s32 	%r7766, %r7760, 3, 1;
	and.b32  	%r7767, %r7766, 130;
	bfe.s32 	%r7768, %r7760, 4, 1;
	and.b32  	%r7769, %r7768, 65;
	bfe.s32 	%r7770, %r7760, 2, 1;
	and.b32  	%r7771, %r7770, 260;
	and.b32  	%r7772, %r7930, 3;
	mul.lo.s32 	%r7773, %r7772, 2081;
	or.b32  	%r7774, %r7762, %r7765;
	or.b32  	%r7775, %r7774, %r26;
	or.b32  	%r7776, %r7767, %r27;
	or.b32  	%r7777, %r7776, %r7769;
	or.b32  	%r7778, %r7777, %r7771;
	add.s32 	%r7779, %r7778, %r7773;
	add.s32 	%r7780, %r7779, %r7775;
	mul.wide.u32 	%rd84, %r7780, 4;
	add.s64 	%rd86, %rd46, %rd84;
	ld.shared.u32 	%r7781, [%rd86];
	or.b32  	%r7782, %r28, %r7765;
	add.s32 	%r7783, %r7782, %r7762;
	add.s32 	%r7784, %r7783, %r7767;
	add.s32 	%r7785, %r7784, %r7769;
	add.s32 	%r7786, %r7785, %r7771;
	add.s32 	%r7787, %r7786, %r7773;
	mul.wide.u32 	%rd87, %r7787, 4;
	add.s64 	%rd88, %rd46, %rd87;
	ld.shared.u32 	%r7788, [%rd88];
	add.s32 	%r7789, %r29, %r7765;
	or.b32  	%r7790, %r7789, %r7762;
	add.s32 	%r7791, %r7790, %r7767;
	add.s32 	%r7792, %r7791, %r7769;
	add.s32 	%r7793, %r7792, %r7771;
	add.s32 	%r7794, %r7793, %r7773;
	mul.wide.u32 	%rd89, %r7794, 4;
	add.s64 	%rd90, %rd46, %rd89;
	ld.shared.u32 	%r7795, [%rd90];
	add.s32 	%r7796, %r30, %r7765;
	add.s32 	%r7797, %r7796, %r7762;
	add.s32 	%r7798, %r7797, %r7767;
	add.s32 	%r7799, %r7798, %r7769;
	add.s32 	%r7800, %r7799, %r7771;
	add.s32 	%r7801, %r7800, %r7773;
	mul.wide.u32 	%rd91, %r7801, 4;
	add.s64 	%rd92, %rd46, %rd91;
	ld.shared.u32 	%r7802, [%rd92];
	// begin inline asm
	mov.b32 %r581, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r592, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r580, %r7781, -2004318072;
	mov.u32 	%r579, 983055;
	// begin inline asm
	lop3.b32 %r578, %r579, %r580, %r581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r582, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r583, %r581, %r582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r586, %r578, %r583;
	// end inline asm
	mov.u32 	%r590, 15728880;
	// begin inline asm
	lop3.b32 %r589, %r590, %r580, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r593, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r594, %r592, %r593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r597, %r589, %r594;
	// end inline asm
	shr.u32 	%r602, %r580, 8;
	// begin inline asm
	lop3.b32 %r600, %r579, %r602, %r581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r604, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r605, %r581, %r604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r608, %r600, %r605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r611, %r590, %r602, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r615, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r616, %r592, %r615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r619, %r611, %r616;
	// end inline asm
	// begin inline asm
	mov.b32 %r627, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r638, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r626, %r7788, -2004318072;
	// begin inline asm
	lop3.b32 %r624, %r579, %r626, %r627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r628, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r629, %r627, %r628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r632, %r624, %r629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r635, %r590, %r626, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r640, %r638, %r639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r643, %r635, %r640;
	// end inline asm
	shr.u32 	%r648, %r626, 8;
	// begin inline asm
	lop3.b32 %r646, %r579, %r648, %r627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r651, %r627, %r650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r654, %r646, %r651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r657, %r590, %r648, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r662, %r638, %r661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r665, %r657, %r662;
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r672, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r670, %r579, %r672, %r673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r674, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r675, %r673, %r674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r678, %r670, %r675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r681, %r590, %r672, %r684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r686, %r684, %r685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r689, %r681, %r686;
	// end inline asm
	shr.u32 	%r694, %r672, 8;
	// begin inline asm
	lop3.b32 %r692, %r579, %r694, %r673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r696, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r697, %r673, %r696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r700, %r692, %r697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r703, %r590, %r694, %r684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r707, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r708, %r684, %r707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r711, %r703, %r708;
	// end inline asm
	// begin inline asm
	mov.b32 %r719, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r730, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r718, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r716, %r579, %r718, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r721, %r719, %r720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r724, %r716, %r721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r727, %r590, %r718, %r730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r731, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r732, %r730, %r731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r735, %r727, %r732;
	// end inline asm
	shr.u32 	%r740, %r718, 8;
	// begin inline asm
	lop3.b32 %r738, %r579, %r740, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r742, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r743, %r719, %r742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r746, %r738, %r743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r749, %r590, %r740, %r730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r753, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r754, %r730, %r753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r757, %r749, %r754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r760, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r762, %r760, %r586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r765, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r767, %r765, %r597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r770, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r772, %r770, %r608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r775, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r777, %r775, %r619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r780, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r782, %r780, %r632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r785, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r787, %r785, %r643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r790, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r792, %r790, %r654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r795, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r797, %r795, %r665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r800, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r802, %r800, %r678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r805, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r807, %r805, %r689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r810, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r812, %r810, %r700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r815, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r817, %r815, %r711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r820, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r822, %r820, %r724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r825, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r827, %r825, %r735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r830, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r832, %r830, %r746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r835, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r837, %r835, %r757;
	// end inline asm
	// begin inline asm
	mov.b32 %r845, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r856, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r844, %r7943, -2004318072;
	// begin inline asm
	lop3.b32 %r842, %r579, %r844, %r845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r846, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r847, %r845, %r846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r850, %r842, %r847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r853, %r590, %r844, %r856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r857, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r858, %r856, %r857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r861, %r853, %r858;
	// end inline asm
	shr.u32 	%r866, %r844, 8;
	// begin inline asm
	lop3.b32 %r864, %r579, %r866, %r845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r868, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r869, %r845, %r868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r872, %r864, %r869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r875, %r590, %r866, %r856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r879, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r880, %r856, %r879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r883, %r875, %r880;
	// end inline asm
	// begin inline asm
	mov.b32 %r891, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r890, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r888, %r579, %r890, %r891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r892, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r893, %r891, %r892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r896, %r888, %r893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r899, %r590, %r890, %r902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r903, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r904, %r902, %r903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r907, %r899, %r904;
	// end inline asm
	shr.u32 	%r912, %r890, 8;
	// begin inline asm
	lop3.b32 %r910, %r579, %r912, %r891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r915, %r891, %r914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r918, %r910, %r915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r921, %r590, %r912, %r902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r925, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r926, %r902, %r925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r929, %r921, %r926;
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r936, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r934, %r579, %r936, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r937, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r945, %r590, %r936, %r948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r950, %r948, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r953, %r945, %r950;
	// end inline asm
	shr.u32 	%r958, %r936, 8;
	// begin inline asm
	lop3.b32 %r956, %r579, %r958, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r937, %r960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r964, %r956, %r961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r967, %r590, %r958, %r948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r972, %r948, %r971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r975, %r967, %r972;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r982, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r980, %r579, %r982, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r983, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r991, %r590, %r982, %r994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r994, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r999, %r991, %r996;
	// end inline asm
	shr.u32 	%r1004, %r982, 8;
	// begin inline asm
	lop3.b32 %r1002, %r579, %r1004, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r983, %r1006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1010, %r1002, %r1007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1013, %r590, %r1004, %r994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1017, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1018, %r994, %r1017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1021, %r1013, %r1018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1024, %r171, %r850, %r762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1028, %r171, %r861, %r767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r171, %r872, %r772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1036, %r171, %r883, %r777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1040, %r171, %r896, %r782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1044, %r171, %r907, %r787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1048, %r171, %r918, %r792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1052, %r171, %r929, %r797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1056, %r171, %r942, %r802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1060, %r171, %r953, %r807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1064, %r171, %r964, %r812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1068, %r171, %r975, %r817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1072, %r171, %r988, %r822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1076, %r171, %r999, %r827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1080, %r171, %r1010, %r832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1084, %r171, %r1021, %r837;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1092, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r1090, %r579, %r1092, %r1093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1095, %r1093, %r1094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1098, %r1090, %r1095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1101, %r590, %r1092, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1106, %r1104, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1109, %r1101, %r1106;
	// end inline asm
	shr.u32 	%r1114, %r1092, 8;
	// begin inline asm
	lop3.b32 %r1112, %r579, %r1114, %r1093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1117, %r1093, %r1116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1120, %r1112, %r1117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1123, %r590, %r1114, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1104, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1131, %r1123, %r1128;
	// end inline asm
	// begin inline asm
	mov.b32 %r1139, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1150, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1138, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r1136, %r579, %r1138, %r1139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1141, %r1139, %r1140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1144, %r1136, %r1141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1147, %r590, %r1138, %r1150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1152, %r1150, %r1151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1155, %r1147, %r1152;
	// end inline asm
	shr.u32 	%r1160, %r1138, 8;
	// begin inline asm
	lop3.b32 %r1158, %r579, %r1160, %r1139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1163, %r1139, %r1162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1166, %r1158, %r1163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1169, %r590, %r1160, %r1150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1174, %r1150, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1177, %r1169, %r1174;
	// end inline asm
	// begin inline asm
	mov.b32 %r1185, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1196, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1184, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r1182, %r579, %r1184, %r1185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1187, %r1185, %r1186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1190, %r1182, %r1187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1193, %r590, %r1184, %r1196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1198, %r1196, %r1197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1201, %r1193, %r1198;
	// end inline asm
	shr.u32 	%r1206, %r1184, 8;
	// begin inline asm
	lop3.b32 %r1204, %r579, %r1206, %r1185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1208, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1209, %r1185, %r1208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1212, %r1204, %r1209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1215, %r590, %r1206, %r1196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1219, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1220, %r1196, %r1219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1223, %r1215, %r1220;
	// end inline asm
	// begin inline asm
	mov.b32 %r1231, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1242, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1230, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r1228, %r579, %r1230, %r1231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1233, %r1231, %r1232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1236, %r1228, %r1233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1239, %r590, %r1230, %r1242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1243, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1244, %r1242, %r1243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1247, %r1239, %r1244;
	// end inline asm
	shr.u32 	%r1252, %r1230, 8;
	// begin inline asm
	lop3.b32 %r1250, %r579, %r1252, %r1231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1254, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1255, %r1231, %r1254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1258, %r1250, %r1255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1261, %r590, %r1252, %r1242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1265, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1266, %r1242, %r1265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1269, %r1261, %r1266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r1272, %r1098, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r1278, %r1109, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r1284, %r1120, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r1290, %r1131, %r1036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1298, %r1296, %r1144, %r1040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r1302, %r1155, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1310, %r1308, %r1166, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1316, %r1314, %r1177, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r1320, %r1190, %r1056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1328, %r1326, %r1201, %r1060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r1332, %r1212, %r1064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1340, %r1338, %r1223, %r1068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1346, %r1344, %r1236, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1352, %r1350, %r1247, %r1076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1358, %r1356, %r1258, %r1080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1364, %r1362, %r1269, %r1084;
	// end inline asm
	// begin inline asm
	mov.b32 %r1373, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1384, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1372, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r1370, %r579, %r1372, %r1373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1374, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1375, %r1373, %r1374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1378, %r1370, %r1375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1381, %r590, %r1372, %r1384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1385, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1386, %r1384, %r1385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1389, %r1381, %r1386;
	// end inline asm
	shr.u32 	%r1394, %r1372, 8;
	// begin inline asm
	lop3.b32 %r1392, %r579, %r1394, %r1373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1396, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1397, %r1373, %r1396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1400, %r1392, %r1397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1403, %r590, %r1394, %r1384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1407, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1408, %r1384, %r1407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1411, %r1403, %r1408;
	// end inline asm
	// begin inline asm
	mov.b32 %r1419, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1418, %r7934, -2004318072;
	// begin inline asm
	lop3.b32 %r1416, %r579, %r1418, %r1419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1420, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1421, %r1419, %r1420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1424, %r1416, %r1421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1427, %r590, %r1418, %r1430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1432, %r1430, %r1431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1435, %r1427, %r1432;
	// end inline asm
	shr.u32 	%r1440, %r1418, 8;
	// begin inline asm
	lop3.b32 %r1438, %r579, %r1440, %r1419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1443, %r1419, %r1442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1446, %r1438, %r1443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1449, %r590, %r1440, %r1430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1454, %r1430, %r1453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1457, %r1449, %r1454;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1464, %r7933, -2004318072;
	// begin inline asm
	lop3.b32 %r1462, %r579, %r1464, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1465, %r1466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1470, %r1462, %r1467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1473, %r590, %r1464, %r1476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1476, %r1477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1481, %r1473, %r1478;
	// end inline asm
	shr.u32 	%r1486, %r1464, 8;
	// begin inline asm
	lop3.b32 %r1484, %r579, %r1486, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1489, %r1465, %r1488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1492, %r1484, %r1489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1495, %r590, %r1486, %r1476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1476, %r1499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1503, %r1495, %r1500;
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r1510, %r7932, -2004318072;
	// begin inline asm
	lop3.b32 %r1508, %r579, %r1510, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1511, %r1512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1516, %r1508, %r1513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1519, %r590, %r1510, %r1522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1522, %r1523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1527, %r1519, %r1524;
	// end inline asm
	shr.u32 	%r1532, %r1510, 8;
	// begin inline asm
	lop3.b32 %r1530, %r579, %r1532, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1535, %r1511, %r1534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1538, %r1530, %r1535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1541, %r590, %r1532, %r1522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1545, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1546, %r1522, %r1545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1549, %r1541, %r1546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r233, %r1378, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1620, %r233, %r1389, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r233, %r1400, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1629, %r233, %r1411, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r233, %r1424, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1638, %r233, %r1435, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1650, %r233, %r1446, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1647, %r233, %r1457, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1659, %r233, %r1470, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1656, %r233, %r1481, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1668, %r233, %r1492, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1665, %r233, %r1503, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1677, %r233, %r1516, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1674, %r233, %r1527, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1686, %r233, %r1538, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1683, %r233, %r1549, %r1364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1616, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1618, %r1616, %r1620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1621, %r267, %r1623, %r1618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1625, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1627, %r1625, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r267, %r1632, %r1627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1634, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1636, %r1634, %r1638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1639, %r267, %r1641, %r1636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1643, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1645, %r1643, %r1647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1648, %r267, %r1650, %r1645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1652, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1654, %r1652, %r1656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1657, %r267, %r1659, %r1654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1661, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1663, %r1661, %r1665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1666, %r267, %r1668, %r1663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1670, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1672, %r1670, %r1674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1675, %r267, %r1677, %r1672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1679, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1681, %r1679, %r1683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1684, %r267, %r1686, %r1681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1688, %r270, %r1623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1691, %r267, %r1620, %r1688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1695, %r270, %r1632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r267, %r1629, %r1695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1702, %r270, %r1641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1705, %r267, %r1638, %r1702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1709, %r270, %r1650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r267, %r1647, %r1709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1716, %r270, %r1659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r267, %r1656, %r1716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1723, %r270, %r1668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r267, %r1665, %r1723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1730, %r270, %r1677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r267, %r1674, %r1730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1737, %r270, %r1686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r267, %r1683, %r1737;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1831, %r1828}, {%r273, %r279, %r276, %r282}, {%r1621, %r1691}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1840, %r1837}, {%r273, %r279, %r276, %r282}, {%r1630, %r1698}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1849, %r1846}, {%r273, %r279, %r276, %r282}, {%r1639, %r1705}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1858, %r1855}, {%r273, %r279, %r276, %r282}, {%r1648, %r1712}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1867, %r1864}, {%r273, %r279, %r276, %r282}, {%r1657, %r1719}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1876, %r1873}, {%r273, %r279, %r276, %r282}, {%r1666, %r1726}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1885, %r1882}, {%r273, %r279, %r276, %r282}, {%r1675, %r1733}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1894, %r1891}, {%r273, %r279, %r276, %r282}, {%r1684, %r1740}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1824, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1826, %r1824, %r1828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1829, %r285, %r1831, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1833, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1835, %r1833, %r1837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r285, %r1840, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1842, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1844, %r1842, %r1846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r285, %r1849, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1851, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1853, %r1851, %r1855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r285, %r1858, %r1853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1860, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1862, %r1860, %r1864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1865, %r285, %r1867, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1869, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1871, %r1869, %r1873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r285, %r1876, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1878, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1880, %r1878, %r1882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r285, %r1885, %r1880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1887, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1889, %r1887, %r1891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1892, %r285, %r1894, %r1889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1896, %r288, %r1831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r285, %r1828, %r1896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1903, %r288, %r1840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r285, %r1837, %r1903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1910, %r288, %r1849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1913, %r285, %r1846, %r1910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1917, %r288, %r1858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1920, %r285, %r1855, %r1917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1924, %r288, %r1867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1927, %r285, %r1864, %r1924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1931, %r288, %r1876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1934, %r285, %r1873, %r1931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1938, %r288, %r1885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1941, %r285, %r1882, %r1938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1945, %r288, %r1894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1948, %r285, %r1891, %r1945;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1952, %r1953}, {%r291, %r297, %r294, %r300}, {%r1829, %r1899}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1962, %r1963}, {%r291, %r297, %r294, %r300}, {%r1838, %r1906}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1972, %r1973}, {%r291, %r297, %r294, %r300}, {%r1847, %r1913}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1982, %r1983}, {%r291, %r297, %r294, %r300}, {%r1856, %r1920}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1992, %r1993}, {%r291, %r297, %r294, %r300}, {%r1865, %r1927}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2002, %r2003}, {%r291, %r297, %r294, %r300}, {%r1874, %r1934}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2012, %r2013}, {%r291, %r297, %r294, %r300}, {%r1883, %r1941}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2022, %r2023}, {%r291, %r297, %r294, %r300}, {%r1892, %r1948}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r56, %r1952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2035, %r56, %r1953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2038, %r56, %r1962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2041, %r56, %r1963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2044, %r56, %r1972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2047, %r56, %r1973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2050, %r56, %r1982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2053, %r56, %r1983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2056, %r56, %r1992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2059, %r56, %r1993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2062, %r56, %r2002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2065, %r56, %r2003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2068, %r56, %r2012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2071, %r56, %r2013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2074, %r56, %r2022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2077, %r56, %r2023;
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs1149, %rs1149};
	// end inline asm
	mov.u16 	%rs202, 18176;
	// begin inline asm
	mov.b32 %r2081, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2082, %r2032, %r2080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2085, %r2082, %r2081;
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2090, %r2035, %r2088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2093, %r2090, %r2089;
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2098, %r2038, %r2096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2101, %r2098, %r2097;
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2106, %r2041, %r2104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2109, %r2106, %r2105;
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2114, %r2044, %r2112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2117, %r2114, %r2113;
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2122, %r2047, %r2120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2125, %r2122, %r2121;
	// end inline asm
	// begin inline asm
	mov.b32 %r2128, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2130, %r2050, %r2128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2133, %r2130, %r2129;
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2138, %r2053, %r2136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2141, %r2138, %r2137;
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2146, %r2056, %r2144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2149, %r2146, %r2145;
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2154, %r2059, %r2152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2157, %r2154, %r2153;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2162, %r2062, %r2160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2165, %r2162, %r2161;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2170, %r2065, %r2168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2173, %r2170, %r2169;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2178, %r2068, %r2176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2181, %r2178, %r2177;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2186, %r2071, %r2184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2189, %r2186, %r2185;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2193, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2194, %r2074, %r2192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2197, %r2194, %r2193;
	// end inline asm
	// begin inline asm
	mov.b32 %r2200, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2202, %r2077, %r2200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2205, %r2202, %r2201;
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2209, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2210, %r2211, %r2209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2213, %r2085, %r2210;
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2217, %r2211, %r2216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2093, %r2217;
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2224, %r2211, %r2223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2101, %r2224;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2211, %r2230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2109, %r2231;
	// end inline asm
	mov.u32 	%r2240, 25152;
	// begin inline asm
	prmt.b32 %r2237, %r2213, %r2227, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2241, %r2220, %r2234, %r2240;
	// end inline asm
	shl.b32 	%r2248, %r2241, 4;
	mov.u32 	%r2246, 252645135;
	// begin inline asm
	lop3.b32 %r2245, %r2246, %r2237, %r2248, 202;
	// end inline asm
	xor.b32  	%r7803, %r2245, -2004318072;
	// begin inline asm
	mov.b32 %r2252, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2250, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2251, %r2252, %r2250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2254, %r2117, %r2251;
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2252, %r2257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2261, %r2125, %r2258;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2265, %r2252, %r2264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2268, %r2133, %r2265;
	// end inline asm
	// begin inline asm
	mov.b32 %r2271, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2272, %r2252, %r2271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2275, %r2141, %r2272;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2278, %r2254, %r2268, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2282, %r2261, %r2275, %r2240;
	// end inline asm
	shl.b32 	%r2289, %r2282, 4;
	// begin inline asm
	lop3.b32 %r2286, %r2246, %r2278, %r2289, 202;
	// end inline asm
	xor.b32  	%r7804, %r2286, -2004318072;
	// begin inline asm
	mov.b32 %r2293, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2291, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2293, %r2291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2295, %r2149, %r2292;
	// end inline asm
	// begin inline asm
	mov.b32 %r2298, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2293, %r2298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2302, %r2157, %r2299;
	// end inline asm
	// begin inline asm
	mov.b32 %r2305, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2293, %r2305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2309, %r2165, %r2306;
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2293, %r2312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2316, %r2173, %r2313;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2319, %r2295, %r2309, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2323, %r2302, %r2316, %r2240;
	// end inline asm
	shl.b32 	%r2330, %r2323, 4;
	// begin inline asm
	lop3.b32 %r2327, %r2246, %r2319, %r2330, 202;
	// end inline asm
	xor.b32  	%r7805, %r2327, -2004318072;
	// begin inline asm
	mov.b32 %r2334, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2332, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2333, %r2334, %r2332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2336, %r2181, %r2333;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2340, %r2334, %r2339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2343, %r2189, %r2340;
	// end inline asm
	// begin inline asm
	mov.b32 %r2346, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2347, %r2334, %r2346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2350, %r2197, %r2347;
	// end inline asm
	// begin inline asm
	mov.b32 %r2353, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2354, %r2334, %r2353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2357, %r2205, %r2354;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2360, %r2336, %r2350, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2364, %r2343, %r2357, %r2240;
	// end inline asm
	shl.b32 	%r2371, %r2364, 4;
	// begin inline asm
	lop3.b32 %r2368, %r2246, %r2360, %r2371, 202;
	// end inline asm
	xor.b32  	%r7806, %r2368, -2004318072;
	st.shared.u32 	[%rd145], %r7803;
	st.shared.u32 	[%rd146], %r7804;
	st.shared.u32 	[%rd147], %r7805;
	st.shared.u32 	[%rd148], %r7806;
	ld.shared.u32 	%r7943, [%rd86];
	ld.shared.u32 	%r7942, [%rd88];
	ld.shared.u32 	%r7941, [%rd90];
	ld.shared.u32 	%r7940, [%rd92];
	// begin inline asm
	mov.b32 %r2377, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2388, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r2376, %r7943, -2004318072;
	// begin inline asm
	lop3.b32 %r2374, %r579, %r2376, %r2377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2378, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2379, %r2377, %r2378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2382, %r2374, %r2379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2385, %r590, %r2376, %r2388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2389, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2390, %r2388, %r2389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2393, %r2385, %r2390;
	// end inline asm
	shr.u32 	%r2398, %r2376, 8;
	// begin inline asm
	lop3.b32 %r2396, %r579, %r2398, %r2377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2377, %r2400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2404, %r2396, %r2401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2407, %r590, %r2398, %r2388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2411, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2388, %r2411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2415, %r2407, %r2412;
	// end inline asm
	// begin inline asm
	mov.b32 %r2423, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2434, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r2422, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r2420, %r579, %r2422, %r2423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2424, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2425, %r2423, %r2424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2428, %r2420, %r2425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2431, %r590, %r2422, %r2434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2435, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2436, %r2434, %r2435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2439, %r2431, %r2436;
	// end inline asm
	shr.u32 	%r2444, %r2422, 8;
	// begin inline asm
	lop3.b32 %r2442, %r579, %r2444, %r2423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2446, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2447, %r2423, %r2446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2450, %r2442, %r2447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2453, %r590, %r2444, %r2434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2457, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2458, %r2434, %r2457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2461, %r2453, %r2458;
	// end inline asm
	// begin inline asm
	mov.b32 %r2469, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r2468, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r2466, %r579, %r2468, %r2469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2470, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2471, %r2469, %r2470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2474, %r2466, %r2471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2477, %r590, %r2468, %r2480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2482, %r2480, %r2481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2485, %r2477, %r2482;
	// end inline asm
	shr.u32 	%r2490, %r2468, 8;
	// begin inline asm
	lop3.b32 %r2488, %r579, %r2490, %r2469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2492, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2493, %r2469, %r2492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2496, %r2488, %r2493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2499, %r590, %r2490, %r2480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2503, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2504, %r2480, %r2503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2507, %r2499, %r2504;
	// end inline asm
	// begin inline asm
	mov.b32 %r2515, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2526, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r2514, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r2512, %r579, %r2514, %r2515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2516, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2517, %r2515, %r2516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2520, %r2512, %r2517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2523, %r590, %r2514, %r2526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2528, %r2526, %r2527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2531, %r2523, %r2528;
	// end inline asm
	shr.u32 	%r2536, %r2514, 8;
	// begin inline asm
	lop3.b32 %r2534, %r579, %r2536, %r2515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2538, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2539, %r2515, %r2538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2542, %r2534, %r2539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2545, %r590, %r2536, %r2526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2549, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2550, %r2526, %r2549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2553, %r2545, %r2550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2556, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2558, %r2556, %r2382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2561, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2563, %r2561, %r2393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2566, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2568, %r2566, %r2404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2571, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2573, %r2571, %r2415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2576, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2578, %r2576, %r2428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2581, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2583, %r2581, %r2439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2586, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2588, %r2586, %r2450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2591, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2593, %r2591, %r2461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2596, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2598, %r2596, %r2474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2601, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2603, %r2601, %r2485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2606, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2608, %r2606, %r2496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2611, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2613, %r2611, %r2507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2616, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2618, %r2616, %r2520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2621, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2623, %r2621, %r2531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2626, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2628, %r2626, %r2542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2631, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2633, %r2631, %r2553;
	// end inline asm
	// begin inline asm
	mov.b32 %r2641, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2638, %r579, %r1092, %r2641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2642, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2643, %r2641, %r2642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2646, %r2638, %r2643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2649, %r590, %r1092, %r2652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2653, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2654, %r2652, %r2653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2657, %r2649, %r2654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2660, %r579, %r1114, %r2641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2665, %r2641, %r2664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2668, %r2660, %r2665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2671, %r590, %r1114, %r2652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2676, %r2652, %r2675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2679, %r2671, %r2676;
	// end inline asm
	// begin inline asm
	mov.b32 %r2687, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2684, %r579, %r1138, %r2687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2688, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2689, %r2687, %r2688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2692, %r2684, %r2689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2695, %r590, %r1138, %r2698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2699, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2700, %r2698, %r2699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2703, %r2695, %r2700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2706, %r579, %r1160, %r2687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2711, %r2687, %r2710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2714, %r2706, %r2711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2717, %r590, %r1160, %r2698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2722, %r2698, %r2721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2725, %r2717, %r2722;
	// end inline asm
	// begin inline asm
	mov.b32 %r2733, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2730, %r579, %r1184, %r2733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2734, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2735, %r2733, %r2734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2738, %r2730, %r2735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2741, %r590, %r1184, %r2744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2745, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2746, %r2744, %r2745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2749, %r2741, %r2746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2752, %r579, %r1206, %r2733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2756, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2757, %r2733, %r2756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2760, %r2752, %r2757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2763, %r590, %r1206, %r2744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2767, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2768, %r2744, %r2767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2771, %r2763, %r2768;
	// end inline asm
	// begin inline asm
	mov.b32 %r2779, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2790, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2776, %r579, %r1230, %r2779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2780, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2781, %r2779, %r2780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2784, %r2776, %r2781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2787, %r590, %r1230, %r2790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2791, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2792, %r2790, %r2791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2795, %r2787, %r2792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2798, %r579, %r1252, %r2779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2802, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2803, %r2779, %r2802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2806, %r2798, %r2803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2809, %r590, %r1252, %r2790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2813, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2814, %r2790, %r2813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2817, %r2809, %r2814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2820, %r171, %r2646, %r2558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2824, %r171, %r2657, %r2563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2828, %r171, %r2668, %r2568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2832, %r171, %r2679, %r2573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2836, %r171, %r2692, %r2578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2840, %r171, %r2703, %r2583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2844, %r171, %r2714, %r2588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2848, %r171, %r2725, %r2593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2852, %r171, %r2738, %r2598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2856, %r171, %r2749, %r2603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2860, %r171, %r2760, %r2608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2864, %r171, %r2771, %r2613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2868, %r171, %r2784, %r2618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2872, %r171, %r2795, %r2623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2876, %r171, %r2806, %r2628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2880, %r171, %r2817, %r2633;
	// end inline asm
	// begin inline asm
	mov.b32 %r2889, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2900, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2886, %r579, %r1372, %r2889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2890, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2891, %r2889, %r2890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2894, %r2886, %r2891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2897, %r590, %r1372, %r2900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2901, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2902, %r2900, %r2901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2905, %r2897, %r2902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2908, %r579, %r1394, %r2889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2912, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2913, %r2889, %r2912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2916, %r2908, %r2913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2919, %r590, %r1394, %r2900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2923, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2924, %r2900, %r2923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2927, %r2919, %r2924;
	// end inline asm
	// begin inline asm
	mov.b32 %r2935, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2946, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2932, %r579, %r1418, %r2935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2936, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2937, %r2935, %r2936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2940, %r2932, %r2937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2943, %r590, %r1418, %r2946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2947, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2948, %r2946, %r2947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2951, %r2943, %r2948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2954, %r579, %r1440, %r2935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2958, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2959, %r2935, %r2958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2962, %r2954, %r2959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2965, %r590, %r1440, %r2946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2969, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2970, %r2946, %r2969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2973, %r2965, %r2970;
	// end inline asm
	// begin inline asm
	mov.b32 %r2981, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r2992, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2978, %r579, %r1464, %r2981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2982, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2983, %r2981, %r2982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2986, %r2978, %r2983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2989, %r590, %r1464, %r2992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2993, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2994, %r2992, %r2993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2997, %r2989, %r2994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3000, %r579, %r1486, %r2981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3004, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3005, %r2981, %r3004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3008, %r3000, %r3005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3011, %r590, %r1486, %r2992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3015, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3016, %r2992, %r3015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3019, %r3011, %r3016;
	// end inline asm
	// begin inline asm
	mov.b32 %r3027, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r3038, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3024, %r579, %r1510, %r3027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3028, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3029, %r3027, %r3028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3032, %r3024, %r3029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3035, %r590, %r1510, %r3038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3039, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3040, %r3038, %r3039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3043, %r3035, %r3040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3046, %r579, %r1532, %r3027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3050, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3051, %r3027, %r3050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3054, %r3046, %r3051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3057, %r590, %r1532, %r3038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3061, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3062, %r3038, %r3061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3065, %r3057, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3068, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r3068, %r2894, %r2820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3074, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r3074, %r2905, %r2824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3080, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r3080, %r2916, %r2828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3086, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r3086, %r2927, %r2832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3092, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r3092, %r2940, %r2836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3098, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r3098, %r2951, %r2840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3104, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r3104, %r2962, %r2844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3110, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r3110, %r2973, %r2848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3116, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r3116, %r2986, %r2852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3122, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r3122, %r2997, %r2856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3128, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r3128, %r3008, %r2860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3134, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r3134, %r3019, %r2864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3140, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r3140, %r3032, %r2868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3146, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r3146, %r3043, %r2872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3152, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r3152, %r3054, %r2876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3158, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3160, %r3158, %r3065, %r2880;
	// end inline asm
	// begin inline asm
	mov.b32 %r3169, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r3180, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3166, %r579, %r580, %r3169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3170, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3171, %r3169, %r3170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3174, %r3166, %r3171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3177, %r590, %r580, %r3180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3181, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3182, %r3180, %r3181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3185, %r3177, %r3182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3188, %r579, %r602, %r3169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3192, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3193, %r3169, %r3192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3196, %r3188, %r3193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3199, %r590, %r602, %r3180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3203, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3204, %r3180, %r3203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3207, %r3199, %r3204;
	// end inline asm
	// begin inline asm
	mov.b32 %r3215, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r3226, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3212, %r579, %r626, %r3215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3216, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3217, %r3215, %r3216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3220, %r3212, %r3217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3223, %r590, %r626, %r3226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3227, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3228, %r3226, %r3227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3231, %r3223, %r3228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3234, %r579, %r648, %r3215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3238, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3239, %r3215, %r3238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3242, %r3234, %r3239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3245, %r590, %r648, %r3226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3249, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3250, %r3226, %r3249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3253, %r3245, %r3250;
	// end inline asm
	// begin inline asm
	mov.b32 %r3261, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r3272, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3258, %r579, %r672, %r3261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3262, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3263, %r3261, %r3262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3266, %r3258, %r3263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3269, %r590, %r672, %r3272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3273, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3274, %r3272, %r3273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3277, %r3269, %r3274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3280, %r579, %r694, %r3261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3284, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3285, %r3261, %r3284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3288, %r3280, %r3285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3291, %r590, %r694, %r3272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3295, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3296, %r3272, %r3295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3299, %r3291, %r3296;
	// end inline asm
	// begin inline asm
	mov.b32 %r3307, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r3318, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3304, %r579, %r718, %r3307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3308, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3309, %r3307, %r3308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3312, %r3304, %r3309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3315, %r590, %r718, %r3318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3319, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3320, %r3318, %r3319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3323, %r3315, %r3320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3326, %r579, %r740, %r3307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3330, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3331, %r3307, %r3330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3334, %r3326, %r3331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3337, %r590, %r740, %r3318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3341, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3342, %r3318, %r3341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3345, %r3337, %r3342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r233, %r3174, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r233, %r3185, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r233, %r3196, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r233, %r3207, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r233, %r3220, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r233, %r3231, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r233, %r3242, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r233, %r3253, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r233, %r3266, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r233, %r3277, %r3124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r233, %r3288, %r3130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r233, %r3299, %r3136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r233, %r3312, %r3142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r233, %r3323, %r3148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r233, %r3334, %r3154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r233, %r3345, %r3160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3412, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3414, %r3412, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r267, %r3419, %r3414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3421, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3423, %r3421, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r267, %r3428, %r3423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3430, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3432, %r3430, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r267, %r3437, %r3432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3439, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3441, %r3439, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r267, %r3446, %r3441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3448, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3450, %r3448, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3453, %r267, %r3455, %r3450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3457, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3459, %r3457, %r3461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3462, %r267, %r3464, %r3459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3466, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3468, %r3466, %r3470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3471, %r267, %r3473, %r3468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3475, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r3475, %r3479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r267, %r3482, %r3477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r270, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r267, %r3416, %r3484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r270, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r267, %r3425, %r3491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r270, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r267, %r3434, %r3498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r270, %r3446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r267, %r3443, %r3505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r270, %r3455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r267, %r3452, %r3512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r270, %r3464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r267, %r3461, %r3519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r270, %r3473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r267, %r3470, %r3526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r270, %r3482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r267, %r3479, %r3533;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3627, %r3624}, {%r273, %r279, %r276, %r282}, {%r3417, %r3487}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3636, %r3633}, {%r273, %r279, %r276, %r282}, {%r3426, %r3494}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3645, %r3642}, {%r273, %r279, %r276, %r282}, {%r3435, %r3501}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3654, %r3651}, {%r273, %r279, %r276, %r282}, {%r3444, %r3508}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3663, %r3660}, {%r273, %r279, %r276, %r282}, {%r3453, %r3515}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3672, %r3669}, {%r273, %r279, %r276, %r282}, {%r3462, %r3522}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3681, %r3678}, {%r273, %r279, %r276, %r282}, {%r3471, %r3529}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3690, %r3687}, {%r273, %r279, %r276, %r282}, {%r3480, %r3536}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3620, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3622, %r3620, %r3624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3625, %r285, %r3627, %r3622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3629, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3631, %r3629, %r3633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3634, %r285, %r3636, %r3631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3638, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3640, %r3638, %r3642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3643, %r285, %r3645, %r3640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3647, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3649, %r3647, %r3651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3652, %r285, %r3654, %r3649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3656, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3658, %r3656, %r3660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3661, %r285, %r3663, %r3658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3665, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3667, %r3665, %r3669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3670, %r285, %r3672, %r3667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3674, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3676, %r3674, %r3678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3679, %r285, %r3681, %r3676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3683, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3685, %r3683, %r3687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3688, %r285, %r3690, %r3685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3692, %r288, %r3627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3695, %r285, %r3624, %r3692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3699, %r288, %r3636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3702, %r285, %r3633, %r3699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3706, %r288, %r3645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3709, %r285, %r3642, %r3706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3713, %r288, %r3654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3716, %r285, %r3651, %r3713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3720, %r288, %r3663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3723, %r285, %r3660, %r3720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3727, %r288, %r3672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3730, %r285, %r3669, %r3727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3734, %r288, %r3681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3737, %r285, %r3678, %r3734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3741, %r288, %r3690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3744, %r285, %r3687, %r3741;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3748, %r3749}, {%r291, %r297, %r294, %r300}, {%r3625, %r3695}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3758, %r3759}, {%r291, %r297, %r294, %r300}, {%r3634, %r3702}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3768, %r3769}, {%r291, %r297, %r294, %r300}, {%r3643, %r3709}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3778, %r3779}, {%r291, %r297, %r294, %r300}, {%r3652, %r3716}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3788, %r3789}, {%r291, %r297, %r294, %r300}, {%r3661, %r3723}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3798, %r3799}, {%r291, %r297, %r294, %r300}, {%r3670, %r3730}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3808, %r3809}, {%r291, %r297, %r294, %r300}, {%r3679, %r3737}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3818, %r3819}, {%r291, %r297, %r294, %r300}, {%r3688, %r3744}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r56, %r3748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3831, %r56, %r3749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3834, %r56, %r3758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3837, %r56, %r3759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3840, %r56, %r3768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3843, %r56, %r3769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3846, %r56, %r3778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3849, %r56, %r3779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3852, %r56, %r3788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3855, %r56, %r3789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3858, %r56, %r3798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3861, %r56, %r3799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3864, %r56, %r3808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3867, %r56, %r3809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3870, %r56, %r3818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3873, %r56, %r3819;
	// end inline asm
	// begin inline asm
	mov.b32 %r3876, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3877, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3878, %r3828, %r3876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3881, %r3878, %r3877;
	// end inline asm
	// begin inline asm
	mov.b32 %r3884, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3885, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3886, %r3831, %r3884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3889, %r3886, %r3885;
	// end inline asm
	// begin inline asm
	mov.b32 %r3892, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3893, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3894, %r3834, %r3892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3897, %r3894, %r3893;
	// end inline asm
	// begin inline asm
	mov.b32 %r3900, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3901, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3902, %r3837, %r3900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3905, %r3902, %r3901;
	// end inline asm
	// begin inline asm
	mov.b32 %r3908, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3909, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3910, %r3840, %r3908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3913, %r3910, %r3909;
	// end inline asm
	// begin inline asm
	mov.b32 %r3916, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3917, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3918, %r3843, %r3916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3921, %r3918, %r3917;
	// end inline asm
	// begin inline asm
	mov.b32 %r3924, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3925, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3926, %r3846, %r3924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3929, %r3926, %r3925;
	// end inline asm
	// begin inline asm
	mov.b32 %r3932, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3933, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3934, %r3849, %r3932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3937, %r3934, %r3933;
	// end inline asm
	// begin inline asm
	mov.b32 %r3940, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3941, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3942, %r3852, %r3940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3945, %r3942, %r3941;
	// end inline asm
	// begin inline asm
	mov.b32 %r3948, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3949, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3950, %r3855, %r3948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3953, %r3950, %r3949;
	// end inline asm
	// begin inline asm
	mov.b32 %r3956, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3957, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3958, %r3858, %r3956;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3961, %r3958, %r3957;
	// end inline asm
	// begin inline asm
	mov.b32 %r3964, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3965, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3966, %r3861, %r3964;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3969, %r3966, %r3965;
	// end inline asm
	// begin inline asm
	mov.b32 %r3972, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3973, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3974, %r3864, %r3972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3977, %r3974, %r3973;
	// end inline asm
	// begin inline asm
	mov.b32 %r3980, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3981, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3982, %r3867, %r3980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3985, %r3982, %r3981;
	// end inline asm
	// begin inline asm
	mov.b32 %r3988, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3989, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3990, %r3870, %r3988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3993, %r3990, %r3989;
	// end inline asm
	// begin inline asm
	mov.b32 %r3996, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r3997, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3998, %r3873, %r3996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4001, %r3998, %r3997;
	// end inline asm
	// begin inline asm
	mov.b32 %r4007, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4005, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4006, %r4007, %r4005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4009, %r3881, %r4006;
	// end inline asm
	// begin inline asm
	mov.b32 %r4012, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4013, %r4007, %r4012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4016, %r3889, %r4013;
	// end inline asm
	// begin inline asm
	mov.b32 %r4019, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4020, %r4007, %r4019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4023, %r3897, %r4020;
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4027, %r4007, %r4026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4030, %r3905, %r4027;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4033, %r4009, %r4023, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4037, %r4016, %r4030, %r2240;
	// end inline asm
	shl.b32 	%r4044, %r4037, 4;
	// begin inline asm
	lop3.b32 %r4041, %r2246, %r4033, %r4044, 202;
	// end inline asm
	xor.b32  	%r7807, %r4041, -2004318072;
	// begin inline asm
	mov.b32 %r4048, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4046, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4047, %r4048, %r4046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4050, %r3913, %r4047;
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4054, %r4048, %r4053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4057, %r3921, %r4054;
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4061, %r4048, %r4060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4064, %r3929, %r4061;
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4068, %r4048, %r4067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4071, %r3937, %r4068;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4074, %r4050, %r4064, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4078, %r4057, %r4071, %r2240;
	// end inline asm
	shl.b32 	%r4085, %r4078, 4;
	// begin inline asm
	lop3.b32 %r4082, %r2246, %r4074, %r4085, 202;
	// end inline asm
	xor.b32  	%r7808, %r4082, -2004318072;
	// begin inline asm
	mov.b32 %r4089, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4088, %r4089, %r4087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4091, %r3945, %r4088;
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r4089, %r4094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4098, %r3953, %r4095;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r4089, %r4101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4105, %r3961, %r4102;
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4109, %r4089, %r4108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4112, %r3969, %r4109;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4115, %r4091, %r4105, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4119, %r4098, %r4112, %r2240;
	// end inline asm
	shl.b32 	%r4126, %r4119, 4;
	// begin inline asm
	lop3.b32 %r4123, %r2246, %r4115, %r4126, 202;
	// end inline asm
	xor.b32  	%r7809, %r4123, -2004318072;
	// begin inline asm
	mov.b32 %r4130, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4129, %r4130, %r4128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4132, %r3977, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4136, %r4130, %r4135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4139, %r3985, %r4136;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4143, %r4130, %r4142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4146, %r3993, %r4143;
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4150, %r4130, %r4149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4153, %r4001, %r4150;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4156, %r4132, %r4146, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4160, %r4139, %r4153, %r2240;
	// end inline asm
	shl.b32 	%r4167, %r4160, 4;
	// begin inline asm
	lop3.b32 %r4164, %r2246, %r4156, %r4167, 202;
	// end inline asm
	xor.b32  	%r7810, %r4164, -2004318072;
	st.shared.u32 	[%rd145], %r7807;
	st.shared.u32 	[%rd146], %r7808;
	st.shared.u32 	[%rd147], %r7809;
	st.shared.u32 	[%rd148], %r7810;
	ld.shared.u32 	%r7939, [%rd86];
	ld.shared.u32 	%r7938, [%rd88];
	ld.shared.u32 	%r7937, [%rd90];
	ld.shared.u32 	%r7936, [%rd92];
	// begin inline asm
	mov.b32 %r4173, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r4172, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r4170, %r579, %r4172, %r4173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4175, %r4173, %r4174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4178, %r4170, %r4175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4181, %r590, %r4172, %r4184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4186, %r4184, %r4185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4189, %r4181, %r4186;
	// end inline asm
	shr.u32 	%r4194, %r4172, 8;
	// begin inline asm
	lop3.b32 %r4192, %r579, %r4194, %r4173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4197, %r4173, %r4196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4200, %r4192, %r4197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4203, %r590, %r4194, %r4184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4208, %r4184, %r4207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4211, %r4203, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r4218, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r4216, %r579, %r4218, %r4219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4221, %r4219, %r4220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4224, %r4216, %r4221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4227, %r590, %r4218, %r4230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4232, %r4230, %r4231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4235, %r4227, %r4232;
	// end inline asm
	shr.u32 	%r4240, %r4218, 8;
	// begin inline asm
	lop3.b32 %r4238, %r579, %r4240, %r4219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4243, %r4219, %r4242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4246, %r4238, %r4243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4249, %r590, %r4240, %r4230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4254, %r4230, %r4253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4257, %r4249, %r4254;
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r4264, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r4262, %r579, %r4264, %r4265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4267, %r4265, %r4266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4270, %r4262, %r4267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4273, %r590, %r4264, %r4276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4278, %r4276, %r4277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4281, %r4273, %r4278;
	// end inline asm
	shr.u32 	%r4286, %r4264, 8;
	// begin inline asm
	lop3.b32 %r4284, %r579, %r4286, %r4265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4289, %r4265, %r4288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4292, %r4284, %r4289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4295, %r590, %r4286, %r4276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4300, %r4276, %r4299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4303, %r4295, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4322, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r4310, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r4308, %r579, %r4310, %r4311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4313, %r4311, %r4312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4316, %r4308, %r4313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4319, %r590, %r4310, %r4322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4324, %r4322, %r4323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4327, %r4319, %r4324;
	// end inline asm
	shr.u32 	%r4332, %r4310, 8;
	// begin inline asm
	lop3.b32 %r4330, %r579, %r4332, %r4311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4335, %r4311, %r4334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4338, %r4330, %r4335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4341, %r590, %r4332, %r4322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4345, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4346, %r4322, %r4345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4349, %r4341, %r4346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4352, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4354, %r4352, %r4178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4357, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4359, %r4357, %r4189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4362, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4364, %r4362, %r4200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4367, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4369, %r4367, %r4211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4372, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4374, %r4372, %r4224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4377, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4379, %r4377, %r4235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4382, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4384, %r4382, %r4246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4387, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4389, %r4387, %r4257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4392, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4394, %r4392, %r4270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4397, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4399, %r4397, %r4281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4402, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4404, %r4402, %r4292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4407, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4409, %r4407, %r4303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4412, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4414, %r4412, %r4316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4417, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4419, %r4417, %r4327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4422, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4424, %r4422, %r4338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4427, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4429, %r4427, %r4349;
	// end inline asm
	// begin inline asm
	mov.b32 %r4437, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4448, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4434, %r579, %r1372, %r4437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4438, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4437, %r4438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4442, %r4434, %r4439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4445, %r590, %r1372, %r4448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4448, %r4449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4453, %r4445, %r4450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4456, %r579, %r1394, %r4437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4460, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4437, %r4460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4464, %r4456, %r4461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4467, %r590, %r1394, %r4448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4471, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4448, %r4471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4475, %r4467, %r4472;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4480, %r579, %r1418, %r4483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4484, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4485, %r4483, %r4484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4488, %r4480, %r4485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4491, %r590, %r1418, %r4494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4495, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4494, %r4495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4499, %r4491, %r4496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4502, %r579, %r1440, %r4483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4483, %r4506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4510, %r4502, %r4507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4513, %r590, %r1440, %r4494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4494, %r4517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4521, %r4513, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4529, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4540, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4526, %r579, %r1464, %r4529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4530, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4531, %r4529, %r4530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4534, %r4526, %r4531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4537, %r590, %r1464, %r4540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4541, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4542, %r4540, %r4541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4545, %r4537, %r4542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4548, %r579, %r1486, %r4529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4552, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4529, %r4552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4556, %r4548, %r4553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4559, %r590, %r1486, %r4540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4563, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4540, %r4563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4567, %r4559, %r4564;
	// end inline asm
	// begin inline asm
	mov.b32 %r4575, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4586, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4572, %r579, %r1510, %r4575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4575, %r4576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4580, %r4572, %r4577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4583, %r590, %r1510, %r4586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4587, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4586, %r4587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4591, %r4583, %r4588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4594, %r579, %r1532, %r4575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4598, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4575, %r4598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4602, %r4594, %r4599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4605, %r590, %r1532, %r4586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4609, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4586, %r4609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4613, %r4605, %r4610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4616, %r171, %r4442, %r4354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4620, %r171, %r4453, %r4359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4624, %r171, %r4464, %r4364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4628, %r171, %r4475, %r4369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4632, %r171, %r4488, %r4374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4636, %r171, %r4499, %r4379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4640, %r171, %r4510, %r4384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4644, %r171, %r4521, %r4389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4648, %r171, %r4534, %r4394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4652, %r171, %r4545, %r4399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4656, %r171, %r4556, %r4404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4660, %r171, %r4567, %r4409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4664, %r171, %r4580, %r4414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4668, %r171, %r4591, %r4419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4672, %r171, %r4602, %r4424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4676, %r171, %r4613, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4682, %r579, %r580, %r4685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4686, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4687, %r4685, %r4686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4690, %r4682, %r4687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4693, %r590, %r580, %r4696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4697, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4698, %r4696, %r4697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4701, %r4693, %r4698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4704, %r579, %r602, %r4685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4709, %r4685, %r4708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4712, %r4704, %r4709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4715, %r590, %r602, %r4696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4719, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4720, %r4696, %r4719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4723, %r4715, %r4720;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4728, %r579, %r626, %r4731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4732, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4733, %r4731, %r4732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4736, %r4728, %r4733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4739, %r590, %r626, %r4742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4744, %r4742, %r4743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4747, %r4739, %r4744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4750, %r579, %r648, %r4731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4755, %r4731, %r4754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4758, %r4750, %r4755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4761, %r590, %r648, %r4742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4765, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4766, %r4742, %r4765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4769, %r4761, %r4766;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4774, %r579, %r672, %r4777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4779, %r4777, %r4778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4782, %r4774, %r4779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4785, %r590, %r672, %r4788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4790, %r4788, %r4789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4793, %r4785, %r4790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4796, %r579, %r694, %r4777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4801, %r4777, %r4800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4804, %r4796, %r4801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4807, %r590, %r694, %r4788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4811, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4812, %r4788, %r4811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4815, %r4807, %r4812;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4834, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4820, %r579, %r718, %r4823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4825, %r4823, %r4824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4828, %r4820, %r4825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4831, %r590, %r718, %r4834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4836, %r4834, %r4835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4839, %r4831, %r4836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4842, %r579, %r740, %r4823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4846, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4847, %r4823, %r4846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4850, %r4842, %r4847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4853, %r590, %r740, %r4834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4857, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4858, %r4834, %r4857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4861, %r4853, %r4858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4864, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4866, %r4864, %r4690, %r4616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4870, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4872, %r4870, %r4701, %r4620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4876, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4878, %r4876, %r4712, %r4624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4882, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4884, %r4882, %r4723, %r4628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4888, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4890, %r4888, %r4736, %r4632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4894, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4896, %r4894, %r4747, %r4636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4900, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4902, %r4900, %r4758, %r4640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4906, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4908, %r4906, %r4769, %r4644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4912, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4914, %r4912, %r4782, %r4648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4918, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4920, %r4918, %r4793, %r4652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4924, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4926, %r4924, %r4804, %r4656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4930, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4932, %r4930, %r4815, %r4660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4936, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4938, %r4936, %r4828, %r4664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4942, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4944, %r4942, %r4839, %r4668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4948, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4950, %r4948, %r4850, %r4672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4954, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4956, %r4954, %r4861, %r4676;
	// end inline asm
	// begin inline asm
	mov.b32 %r4965, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4962, %r579, %r2376, %r4965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4966, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4967, %r4965, %r4966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4970, %r4962, %r4967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4973, %r590, %r2376, %r4976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4977, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4978, %r4976, %r4977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4981, %r4973, %r4978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4984, %r579, %r2398, %r4965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4988, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4989, %r4965, %r4988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4992, %r4984, %r4989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4995, %r590, %r2398, %r4976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4999, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5000, %r4976, %r4999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5003, %r4995, %r5000;
	// end inline asm
	// begin inline asm
	mov.b32 %r5011, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5022, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5008, %r579, %r2422, %r5011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5012, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5013, %r5011, %r5012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5016, %r5008, %r5013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5019, %r590, %r2422, %r5022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5023, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5024, %r5022, %r5023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5027, %r5019, %r5024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5030, %r579, %r2444, %r5011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5034, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5035, %r5011, %r5034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5038, %r5030, %r5035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5041, %r590, %r2444, %r5022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5045, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5046, %r5022, %r5045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5049, %r5041, %r5046;
	// end inline asm
	// begin inline asm
	mov.b32 %r5057, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5068, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5054, %r579, %r2468, %r5057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5058, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5059, %r5057, %r5058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5062, %r5054, %r5059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5065, %r590, %r2468, %r5068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5069, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5070, %r5068, %r5069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5073, %r5065, %r5070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5076, %r579, %r2490, %r5057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5080, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5081, %r5057, %r5080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5084, %r5076, %r5081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5087, %r590, %r2490, %r5068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5091, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5092, %r5068, %r5091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5095, %r5087, %r5092;
	// end inline asm
	// begin inline asm
	mov.b32 %r5103, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5114, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5100, %r579, %r2514, %r5103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5104, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5105, %r5103, %r5104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5108, %r5100, %r5105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5111, %r590, %r2514, %r5114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5115, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5116, %r5114, %r5115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5119, %r5111, %r5116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5122, %r579, %r2536, %r5103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5126, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5127, %r5103, %r5126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5130, %r5122, %r5127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5133, %r590, %r2536, %r5114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5137, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5138, %r5114, %r5137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5141, %r5133, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r233, %r4970, %r4866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5212, %r233, %r4981, %r4872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r233, %r4992, %r4878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5221, %r233, %r5003, %r4884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r233, %r5016, %r4890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5230, %r233, %r5027, %r4896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5242, %r233, %r5038, %r4902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5239, %r233, %r5049, %r4908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5251, %r233, %r5062, %r4914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5248, %r233, %r5073, %r4920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5260, %r233, %r5084, %r4926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5257, %r233, %r5095, %r4932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5269, %r233, %r5108, %r4938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5266, %r233, %r5119, %r4944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5278, %r233, %r5130, %r4950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5275, %r233, %r5141, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5208, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5210, %r5208, %r5212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5213, %r267, %r5215, %r5210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5217, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5219, %r5217, %r5221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5222, %r267, %r5224, %r5219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5231, %r267, %r5233, %r5228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5235, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5237, %r5235, %r5239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5240, %r267, %r5242, %r5237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5244, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5246, %r5244, %r5248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5249, %r267, %r5251, %r5246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5253, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5255, %r5253, %r5257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5258, %r267, %r5260, %r5255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5262, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5264, %r5262, %r5266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5267, %r267, %r5269, %r5264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5271, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5273, %r5271, %r5275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5276, %r267, %r5278, %r5273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5280, %r270, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5283, %r267, %r5212, %r5280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5287, %r270, %r5224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5290, %r267, %r5221, %r5287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5294, %r270, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5297, %r267, %r5230, %r5294;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5301, %r270, %r5242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5304, %r267, %r5239, %r5301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5308, %r270, %r5251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5311, %r267, %r5248, %r5308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5315, %r270, %r5260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5318, %r267, %r5257, %r5315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5322, %r270, %r5269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5325, %r267, %r5266, %r5322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5329, %r270, %r5278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5332, %r267, %r5275, %r5329;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5423, %r5420}, {%r273, %r279, %r276, %r282}, {%r5213, %r5283}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5432, %r5429}, {%r273, %r279, %r276, %r282}, {%r5222, %r5290}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5441, %r5438}, {%r273, %r279, %r276, %r282}, {%r5231, %r5297}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5450, %r5447}, {%r273, %r279, %r276, %r282}, {%r5240, %r5304}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5459, %r5456}, {%r273, %r279, %r276, %r282}, {%r5249, %r5311}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5468, %r5465}, {%r273, %r279, %r276, %r282}, {%r5258, %r5318}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5477, %r5474}, {%r273, %r279, %r276, %r282}, {%r5267, %r5325}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5486, %r5483}, {%r273, %r279, %r276, %r282}, {%r5276, %r5332}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5416, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5418, %r5416, %r5420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5421, %r285, %r5423, %r5418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5425, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5427, %r5425, %r5429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5430, %r285, %r5432, %r5427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5434, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5436, %r5434, %r5438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5439, %r285, %r5441, %r5436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5443, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5445, %r5443, %r5447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5448, %r285, %r5450, %r5445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5452, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5454, %r5452, %r5456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5457, %r285, %r5459, %r5454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5461, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5463, %r5461, %r5465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5466, %r285, %r5468, %r5463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5470, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5472, %r5470, %r5474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5475, %r285, %r5477, %r5472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5479, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5481, %r5479, %r5483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5484, %r285, %r5486, %r5481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5488, %r288, %r5423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5491, %r285, %r5420, %r5488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5495, %r288, %r5432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5498, %r285, %r5429, %r5495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5502, %r288, %r5441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5505, %r285, %r5438, %r5502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5509, %r288, %r5450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5512, %r285, %r5447, %r5509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5516, %r288, %r5459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5519, %r285, %r5456, %r5516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5523, %r288, %r5468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5526, %r285, %r5465, %r5523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5530, %r288, %r5477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5533, %r285, %r5474, %r5530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5537, %r288, %r5486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5540, %r285, %r5483, %r5537;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5544, %r5545}, {%r291, %r297, %r294, %r300}, {%r5421, %r5491}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5554, %r5555}, {%r291, %r297, %r294, %r300}, {%r5430, %r5498}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5564, %r5565}, {%r291, %r297, %r294, %r300}, {%r5439, %r5505}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5574, %r5575}, {%r291, %r297, %r294, %r300}, {%r5448, %r5512}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5584, %r5585}, {%r291, %r297, %r294, %r300}, {%r5457, %r5519}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5594, %r5595}, {%r291, %r297, %r294, %r300}, {%r5466, %r5526}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5604, %r5605}, {%r291, %r297, %r294, %r300}, {%r5475, %r5533}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5614, %r5615}, {%r291, %r297, %r294, %r300}, {%r5484, %r5540}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r56, %r5544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5627, %r56, %r5545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5630, %r56, %r5554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5633, %r56, %r5555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5636, %r56, %r5564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5639, %r56, %r5565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5642, %r56, %r5574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5645, %r56, %r5575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5648, %r56, %r5584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5651, %r56, %r5585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5654, %r56, %r5594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5657, %r56, %r5595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5660, %r56, %r5604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5663, %r56, %r5605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5666, %r56, %r5614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5669, %r56, %r5615;
	// end inline asm
	// begin inline asm
	mov.b32 %r5672, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5673, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5674, %r5624, %r5672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5677, %r5674, %r5673;
	// end inline asm
	// begin inline asm
	mov.b32 %r5680, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5681, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5682, %r5627, %r5680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5685, %r5682, %r5681;
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5690, %r5630, %r5688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5693, %r5690, %r5689;
	// end inline asm
	// begin inline asm
	mov.b32 %r5696, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5697, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5698, %r5633, %r5696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5701, %r5698, %r5697;
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5705, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5706, %r5636, %r5704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5709, %r5706, %r5705;
	// end inline asm
	// begin inline asm
	mov.b32 %r5712, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5713, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5714, %r5639, %r5712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5717, %r5714, %r5713;
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5721, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5722, %r5642, %r5720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5725, %r5722, %r5721;
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5730, %r5645, %r5728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5733, %r5730, %r5729;
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5738, %r5648, %r5736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5741, %r5738, %r5737;
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5746, %r5651, %r5744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5749, %r5746, %r5745;
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5754, %r5654, %r5752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5757, %r5754, %r5753;
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5762, %r5657, %r5760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5765, %r5762, %r5761;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5770, %r5660, %r5768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5773, %r5770, %r5769;
	// end inline asm
	// begin inline asm
	mov.b32 %r5776, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5778, %r5663, %r5776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5781, %r5778, %r5777;
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5786, %r5666, %r5784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5789, %r5786, %r5785;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5794, %r5669, %r5792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5797, %r5794, %r5793;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5803, %r5801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5677, %r5802;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5803, %r5808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5685, %r5809;
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5816, %r5803, %r5815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5693, %r5816;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5823, %r5803, %r5822;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5701, %r5823;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5829, %r5805, %r5819, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5833, %r5812, %r5826, %r2240;
	// end inline asm
	shl.b32 	%r5840, %r5833, 4;
	// begin inline asm
	lop3.b32 %r5837, %r2246, %r5829, %r5840, 202;
	// end inline asm
	xor.b32  	%r7811, %r5837, -2004318072;
	// begin inline asm
	mov.b32 %r5844, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5844, %r5842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5709, %r5843;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5844, %r5849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5853, %r5717, %r5850;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5844, %r5856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5725, %r5857;
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5864, %r5844, %r5863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5733, %r5864;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5870, %r5846, %r5860, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5874, %r5853, %r5867, %r2240;
	// end inline asm
	shl.b32 	%r5881, %r5874, 4;
	// begin inline asm
	lop3.b32 %r5878, %r2246, %r5870, %r5881, 202;
	// end inline asm
	xor.b32  	%r7812, %r5878, -2004318072;
	// begin inline asm
	mov.b32 %r5885, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5885, %r5883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5741, %r5884;
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5885, %r5890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5749, %r5891;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5885, %r5897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5757, %r5898;
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5885, %r5904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5765, %r5905;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5911, %r5887, %r5901, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5915, %r5894, %r5908, %r2240;
	// end inline asm
	shl.b32 	%r5922, %r5915, 4;
	// begin inline asm
	lop3.b32 %r5919, %r2246, %r5911, %r5922, 202;
	// end inline asm
	xor.b32  	%r7813, %r5919, -2004318072;
	// begin inline asm
	mov.b32 %r5926, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5926, %r5924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5773, %r5925;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5781, %r5932;
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5926, %r5938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5789, %r5939;
	// end inline asm
	// begin inline asm
	mov.b32 %r5945, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5926, %r5945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5797, %r5946;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5952, %r5928, %r5942, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5956, %r5935, %r5949, %r2240;
	// end inline asm
	shl.b32 	%r5963, %r5956, 4;
	// begin inline asm
	lop3.b32 %r5960, %r2246, %r5952, %r5963, 202;
	// end inline asm
	xor.b32  	%r7814, %r5960, -2004318072;
	st.shared.u32 	[%rd145], %r7811;
	st.shared.u32 	[%rd146], %r7812;
	st.shared.u32 	[%rd147], %r7813;
	st.shared.u32 	[%rd148], %r7814;
	ld.shared.u32 	%r7935, [%rd86];
	ld.shared.u32 	%r7934, [%rd88];
	ld.shared.u32 	%r7933, [%rd90];
	ld.shared.u32 	%r7932, [%rd92];
	// begin inline asm
	mov.b32 %r5969, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r5968, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r5966, %r579, %r5968, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5970, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5971, %r5969, %r5970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5974, %r5966, %r5971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5977, %r590, %r5968, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5982, %r5980, %r5981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5985, %r5977, %r5982;
	// end inline asm
	shr.u32 	%r5990, %r5968, 8;
	// begin inline asm
	lop3.b32 %r5988, %r579, %r5990, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5969, %r5992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5996, %r5988, %r5993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5999, %r590, %r5990, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r5980, %r6003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6007, %r5999, %r6004;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r6014, %r7934, -2004318072;
	// begin inline asm
	lop3.b32 %r6012, %r579, %r6014, %r6015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6016, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6017, %r6015, %r6016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6020, %r6012, %r6017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6023, %r590, %r6014, %r6026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6027, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6028, %r6026, %r6027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6031, %r6023, %r6028;
	// end inline asm
	shr.u32 	%r6036, %r6014, 8;
	// begin inline asm
	lop3.b32 %r6034, %r579, %r6036, %r6015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6039, %r6015, %r6038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6042, %r6034, %r6039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6045, %r590, %r6036, %r6026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6049, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6050, %r6026, %r6049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6053, %r6045, %r6050;
	// end inline asm
	// begin inline asm
	mov.b32 %r6061, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6072, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r6060, %r7933, -2004318072;
	// begin inline asm
	lop3.b32 %r6058, %r579, %r6060, %r6061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6062, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6063, %r6061, %r6062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6066, %r6058, %r6063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6069, %r590, %r6060, %r6072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6074, %r6072, %r6073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6077, %r6069, %r6074;
	// end inline asm
	shr.u32 	%r6082, %r6060, 8;
	// begin inline asm
	lop3.b32 %r6080, %r579, %r6082, %r6061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6084, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6085, %r6061, %r6084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6088, %r6080, %r6085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6091, %r590, %r6082, %r6072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6095, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6096, %r6072, %r6095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6099, %r6091, %r6096;
	// end inline asm
	// begin inline asm
	mov.b32 %r6107, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6118, {%rs1079, %rs1079};
	// end inline asm
	xor.b32  	%r6106, %r7932, -2004318072;
	// begin inline asm
	lop3.b32 %r6104, %r579, %r6106, %r6107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6108, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6109, %r6107, %r6108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6112, %r6104, %r6109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6115, %r590, %r6106, %r6118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6119, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6120, %r6118, %r6119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6123, %r6115, %r6120;
	// end inline asm
	shr.u32 	%r6128, %r6106, 8;
	// begin inline asm
	lop3.b32 %r6126, %r579, %r6128, %r6107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6130, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6131, %r6107, %r6130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6134, %r6126, %r6131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6137, %r590, %r6128, %r6118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6141, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6142, %r6118, %r6141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6145, %r6137, %r6142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6150, %r6148, %r5974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6155, %r6153, %r5985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6160, %r6158, %r5996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6165, %r6163, %r6007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6170, %r6168, %r6020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6175, %r6173, %r6031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6180, %r6178, %r6042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6185, %r6183, %r6053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6190, %r6188, %r6066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6193, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6195, %r6193, %r6077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6198, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6200, %r6198, %r6088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6205, %r6203, %r6099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6210, %r6208, %r6112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6215, %r6213, %r6123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6220, %r6218, %r6134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6225, %r6223, %r6145;
	// end inline asm
	// begin inline asm
	mov.b32 %r6233, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6244, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6230, %r579, %r580, %r6233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6234, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6235, %r6233, %r6234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6238, %r6230, %r6235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6241, %r590, %r580, %r6244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6245, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6246, %r6244, %r6245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6249, %r6241, %r6246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6252, %r579, %r602, %r6233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6256, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6257, %r6233, %r6256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6260, %r6252, %r6257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6263, %r590, %r602, %r6244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6267, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6268, %r6244, %r6267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6271, %r6263, %r6268;
	// end inline asm
	// begin inline asm
	mov.b32 %r6279, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6290, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6276, %r579, %r626, %r6279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6280, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6281, %r6279, %r6280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6284, %r6276, %r6281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6287, %r590, %r626, %r6290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6291, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6292, %r6290, %r6291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6295, %r6287, %r6292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6298, %r579, %r648, %r6279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6302, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6303, %r6279, %r6302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6306, %r6298, %r6303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6309, %r590, %r648, %r6290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6313, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6314, %r6290, %r6313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6317, %r6309, %r6314;
	// end inline asm
	// begin inline asm
	mov.b32 %r6325, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6336, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6322, %r579, %r672, %r6325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6327, %r6325, %r6326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6330, %r6322, %r6327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6333, %r590, %r672, %r6336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6338, %r6336, %r6337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6341, %r6333, %r6338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6344, %r579, %r694, %r6325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6349, %r6325, %r6348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6352, %r6344, %r6349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6355, %r590, %r694, %r6336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6359, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6360, %r6336, %r6359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6363, %r6355, %r6360;
	// end inline asm
	// begin inline asm
	mov.b32 %r6371, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6382, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6368, %r579, %r718, %r6371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6373, %r6371, %r6372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6376, %r6368, %r6373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6379, %r590, %r718, %r6382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6384, %r6382, %r6383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6387, %r6379, %r6384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6390, %r579, %r740, %r6371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6394, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6395, %r6371, %r6394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6398, %r6390, %r6395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6401, %r590, %r740, %r6382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6405, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6406, %r6382, %r6405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6409, %r6401, %r6406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6412, %r171, %r6238, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6416, %r171, %r6249, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6420, %r171, %r6260, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6424, %r171, %r6271, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6428, %r171, %r6284, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6432, %r171, %r6295, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6436, %r171, %r6306, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6440, %r171, %r6317, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6444, %r171, %r6330, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6448, %r171, %r6341, %r6195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6452, %r171, %r6352, %r6200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6456, %r171, %r6363, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6460, %r171, %r6376, %r6210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6464, %r171, %r6387, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6468, %r171, %r6398, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6472, %r171, %r6409, %r6225;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6478, %r579, %r2376, %r6481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6482, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6483, %r6481, %r6482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6486, %r6478, %r6483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6489, %r590, %r2376, %r6492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6493, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6494, %r6492, %r6493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6497, %r6489, %r6494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6500, %r579, %r2398, %r6481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6504, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6505, %r6481, %r6504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6508, %r6500, %r6505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6511, %r590, %r2398, %r6492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6515, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6516, %r6492, %r6515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6519, %r6511, %r6516;
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6538, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6524, %r579, %r2422, %r6527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6528, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6529, %r6527, %r6528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6532, %r6524, %r6529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6535, %r590, %r2422, %r6538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6539, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6540, %r6538, %r6539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6543, %r6535, %r6540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6546, %r579, %r2444, %r6527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6550, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6551, %r6527, %r6550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6554, %r6546, %r6551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6557, %r590, %r2444, %r6538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6561, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6562, %r6538, %r6561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6565, %r6557, %r6562;
	// end inline asm
	// begin inline asm
	mov.b32 %r6573, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6584, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6570, %r579, %r2468, %r6573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6575, %r6573, %r6574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6578, %r6570, %r6575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6581, %r590, %r2468, %r6584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6585, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6586, %r6584, %r6585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6589, %r6581, %r6586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6592, %r579, %r2490, %r6573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6596, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6597, %r6573, %r6596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6600, %r6592, %r6597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6603, %r590, %r2490, %r6584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6607, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6608, %r6584, %r6607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6611, %r6603, %r6608;
	// end inline asm
	// begin inline asm
	mov.b32 %r6619, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6630, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6616, %r579, %r2514, %r6619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6620, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6621, %r6619, %r6620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6624, %r6616, %r6621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6627, %r590, %r2514, %r6630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6631, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6632, %r6630, %r6631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6635, %r6627, %r6632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6638, %r579, %r2536, %r6619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6642, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6643, %r6619, %r6642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6646, %r6638, %r6643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6649, %r590, %r2536, %r6630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6653, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6654, %r6630, %r6653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6657, %r6649, %r6654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6660, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6662, %r6660, %r6486, %r6412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6666, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6668, %r6666, %r6497, %r6416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6672, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6674, %r6672, %r6508, %r6420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6678, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6680, %r6678, %r6519, %r6424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6684, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6686, %r6684, %r6532, %r6428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6690, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6692, %r6690, %r6543, %r6432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6696, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r6696, %r6554, %r6436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6702, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6704, %r6702, %r6565, %r6440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6708, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6710, %r6708, %r6578, %r6444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6714, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r6714, %r6589, %r6448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6720, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r6720, %r6600, %r6452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6726, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r6726, %r6611, %r6456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6732, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r6732, %r6624, %r6460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6738, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r6738, %r6635, %r6464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6744, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r6744, %r6646, %r6468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6750, %r202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r6750, %r6657, %r6472;
	// end inline asm
	// begin inline asm
	mov.b32 %r6761, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6772, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6758, %r579, %r4172, %r6761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6762, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6763, %r6761, %r6762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6766, %r6758, %r6763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6769, %r590, %r4172, %r6772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6773, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6774, %r6772, %r6773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6777, %r6769, %r6774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6780, %r579, %r4194, %r6761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6784, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6785, %r6761, %r6784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6788, %r6780, %r6785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6791, %r590, %r4194, %r6772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6795, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6796, %r6772, %r6795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6799, %r6791, %r6796;
	// end inline asm
	// begin inline asm
	mov.b32 %r6807, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6818, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6804, %r579, %r4218, %r6807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6808, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6809, %r6807, %r6808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6812, %r6804, %r6809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6815, %r590, %r4218, %r6818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6819, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6820, %r6818, %r6819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6823, %r6815, %r6820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6826, %r579, %r4240, %r6807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6830, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6831, %r6807, %r6830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6834, %r6826, %r6831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6837, %r590, %r4240, %r6818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6841, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6842, %r6818, %r6841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6845, %r6837, %r6842;
	// end inline asm
	// begin inline asm
	mov.b32 %r6853, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6864, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6850, %r579, %r4264, %r6853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6854, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6855, %r6853, %r6854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6858, %r6850, %r6855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6861, %r590, %r4264, %r6864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6865, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6866, %r6864, %r6865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6869, %r6861, %r6866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6872, %r579, %r4286, %r6853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6876, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6877, %r6853, %r6876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6880, %r6872, %r6877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6883, %r590, %r4286, %r6864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6887, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6888, %r6864, %r6887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6891, %r6883, %r6888;
	// end inline asm
	// begin inline asm
	mov.b32 %r6899, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r6910, {%rs1079, %rs1079};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6896, %r579, %r4310, %r6899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6900, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6901, %r6899, %r6900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6904, %r6896, %r6901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6907, %r590, %r4310, %r6910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6911, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6912, %r6910, %r6911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6915, %r6907, %r6912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6918, %r579, %r4332, %r6899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6922, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6923, %r6899, %r6922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6926, %r6918, %r6923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6929, %r590, %r4332, %r6910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6933, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6934, %r6910, %r6933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6937, %r6929, %r6934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r233, %r6766, %r6662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r233, %r6777, %r6668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r233, %r6788, %r6674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r233, %r6799, %r6680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r233, %r6812, %r6686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r233, %r6823, %r6692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r233, %r6834, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r233, %r6845, %r6704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7047, %r233, %r6858, %r6710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7044, %r233, %r6869, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7056, %r233, %r6880, %r6722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7053, %r233, %r6891, %r6728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7065, %r233, %r6904, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7062, %r233, %r6915, %r6740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7074, %r233, %r6926, %r6746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7071, %r233, %r6937, %r6752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7004, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r7004, %r7008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r267, %r7011, %r7006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7013, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7015, %r7013, %r7017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r267, %r7020, %r7015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7022, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7024, %r7022, %r7026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r267, %r7029, %r7024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7031, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7033, %r7031, %r7035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7036, %r267, %r7038, %r7033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7040, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7042, %r7040, %r7044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7045, %r267, %r7047, %r7042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7049, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7051, %r7049, %r7053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7054, %r267, %r7056, %r7051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7058, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7060, %r7058, %r7062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7063, %r267, %r7065, %r7060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7067, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7069, %r7067, %r7071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7072, %r267, %r7074, %r7069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7076, %r270, %r7011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7079, %r267, %r7008, %r7076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7083, %r270, %r7020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7086, %r267, %r7017, %r7083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7090, %r270, %r7029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7093, %r267, %r7026, %r7090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7097, %r270, %r7038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7100, %r267, %r7035, %r7097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7104, %r270, %r7047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7107, %r267, %r7044, %r7104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7111, %r270, %r7056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7114, %r267, %r7053, %r7111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7118, %r270, %r7065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7121, %r267, %r7062, %r7118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7125, %r270, %r7074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r267, %r7071, %r7125;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7219, %r7216}, {%r273, %r279, %r276, %r282}, {%r7009, %r7079}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7228, %r7225}, {%r273, %r279, %r276, %r282}, {%r7018, %r7086}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7237, %r7234}, {%r273, %r279, %r276, %r282}, {%r7027, %r7093}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7246, %r7243}, {%r273, %r279, %r276, %r282}, {%r7036, %r7100}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7255, %r7252}, {%r273, %r279, %r276, %r282}, {%r7045, %r7107}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7264, %r7261}, {%r273, %r279, %r276, %r282}, {%r7054, %r7114}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7273, %r7270}, {%r273, %r279, %r276, %r282}, {%r7063, %r7121}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7282, %r7279}, {%r273, %r279, %r276, %r282}, {%r7072, %r7128}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7212, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7214, %r7212, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7217, %r285, %r7219, %r7214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7221, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7223, %r7221, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7226, %r285, %r7228, %r7223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7230, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7232, %r7230, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7235, %r285, %r7237, %r7232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7239, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r7239, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r285, %r7246, %r7241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7248, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r7248, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r285, %r7255, %r7250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7257, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r7257, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r285, %r7264, %r7259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7266, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r7266, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r285, %r7273, %r7268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7275, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r7275, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r285, %r7282, %r7277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r288, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r285, %r7216, %r7284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r288, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r285, %r7225, %r7291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7298, %r288, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7301, %r285, %r7234, %r7298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7305, %r288, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7308, %r285, %r7243, %r7305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r288, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r285, %r7252, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7319, %r288, %r7264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7322, %r285, %r7261, %r7319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7326, %r288, %r7273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7329, %r285, %r7270, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7333, %r288, %r7282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7336, %r285, %r7279, %r7333;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7340, %r7341}, {%r291, %r297, %r294, %r300}, {%r7217, %r7287}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7350, %r7351}, {%r291, %r297, %r294, %r300}, {%r7226, %r7294}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7360, %r7361}, {%r291, %r297, %r294, %r300}, {%r7235, %r7301}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7370, %r7371}, {%r291, %r297, %r294, %r300}, {%r7244, %r7308}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7380, %r7381}, {%r291, %r297, %r294, %r300}, {%r7253, %r7315}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7390, %r7391}, {%r291, %r297, %r294, %r300}, {%r7262, %r7322}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7400, %r7401}, {%r291, %r297, %r294, %r300}, {%r7271, %r7329}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7410, %r7411}, {%r291, %r297, %r294, %r300}, {%r7280, %r7336}, {%r7915, %r7915};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r56, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r56, %r7341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r56, %r7350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r56, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7432, %r56, %r7360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7435, %r56, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7438, %r56, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7441, %r56, %r7371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7444, %r56, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7447, %r56, %r7381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7450, %r56, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7453, %r56, %r7391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7456, %r56, %r7400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7459, %r56, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7462, %r56, %r7410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7465, %r56, %r7411;
	// end inline asm
	// begin inline asm
	mov.b32 %r7468, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7469, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7470, %r7420, %r7468;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7473, %r7470, %r7469;
	// end inline asm
	// begin inline asm
	mov.b32 %r7476, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7477, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7478, %r7423, %r7476;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7481, %r7478, %r7477;
	// end inline asm
	// begin inline asm
	mov.b32 %r7484, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7485, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7486, %r7426, %r7484;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7489, %r7486, %r7485;
	// end inline asm
	// begin inline asm
	mov.b32 %r7492, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7493, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7494, %r7429, %r7492;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7497, %r7494, %r7493;
	// end inline asm
	// begin inline asm
	mov.b32 %r7500, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7501, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7502, %r7432, %r7500;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7505, %r7502, %r7501;
	// end inline asm
	// begin inline asm
	mov.b32 %r7508, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7509, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7510, %r7435, %r7508;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7513, %r7510, %r7509;
	// end inline asm
	// begin inline asm
	mov.b32 %r7516, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7517, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7518, %r7438, %r7516;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7521, %r7518, %r7517;
	// end inline asm
	// begin inline asm
	mov.b32 %r7524, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7525, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7526, %r7441, %r7524;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7529, %r7526, %r7525;
	// end inline asm
	// begin inline asm
	mov.b32 %r7532, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7533, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7534, %r7444, %r7532;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7537, %r7534, %r7533;
	// end inline asm
	// begin inline asm
	mov.b32 %r7540, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7541, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7542, %r7447, %r7540;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7545, %r7542, %r7541;
	// end inline asm
	// begin inline asm
	mov.b32 %r7548, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7549, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7550, %r7450, %r7548;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7553, %r7550, %r7549;
	// end inline asm
	// begin inline asm
	mov.b32 %r7556, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7557, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7558, %r7453, %r7556;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7561, %r7558, %r7557;
	// end inline asm
	// begin inline asm
	mov.b32 %r7564, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7565, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7566, %r7456, %r7564;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7569, %r7566, %r7565;
	// end inline asm
	// begin inline asm
	mov.b32 %r7572, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7573, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7574, %r7459, %r7572;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7577, %r7574, %r7573;
	// end inline asm
	// begin inline asm
	mov.b32 %r7580, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7581, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7582, %r7462, %r7580;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7585, %r7582, %r7581;
	// end inline asm
	// begin inline asm
	mov.b32 %r7588, {%rs1149, %rs1149};
	// end inline asm
	// begin inline asm
	mov.b32 %r7589, {%rs202, %rs202};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7590, %r7465, %r7588;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7593, %r7590, %r7589;
	// end inline asm
	// begin inline asm
	mov.b32 %r7599, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r7597, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7598, %r7599, %r7597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7601, %r7473, %r7598;
	// end inline asm
	// begin inline asm
	mov.b32 %r7604, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7605, %r7599, %r7604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7608, %r7481, %r7605;
	// end inline asm
	// begin inline asm
	mov.b32 %r7611, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7612, %r7599, %r7611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7615, %r7489, %r7612;
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7619, %r7599, %r7618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7622, %r7497, %r7619;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7625, %r7601, %r7615, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7629, %r7608, %r7622, %r2240;
	// end inline asm
	shl.b32 	%r7636, %r7629, 4;
	// begin inline asm
	lop3.b32 %r7633, %r2246, %r7625, %r7636, 202;
	// end inline asm
	xor.b32  	%r7815, %r7633, -2004318072;
	// begin inline asm
	mov.b32 %r7640, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r7638, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7639, %r7640, %r7638;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7642, %r7505, %r7639;
	// end inline asm
	// begin inline asm
	mov.b32 %r7645, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7646, %r7640, %r7645;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7649, %r7513, %r7646;
	// end inline asm
	// begin inline asm
	mov.b32 %r7652, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7653, %r7640, %r7652;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7656, %r7521, %r7653;
	// end inline asm
	// begin inline asm
	mov.b32 %r7659, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7640, %r7659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7529, %r7660;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7666, %r7642, %r7656, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7670, %r7649, %r7663, %r2240;
	// end inline asm
	shl.b32 	%r7677, %r7670, 4;
	// begin inline asm
	lop3.b32 %r7674, %r2246, %r7666, %r7677, 202;
	// end inline asm
	xor.b32  	%r7816, %r7674, -2004318072;
	// begin inline asm
	mov.b32 %r7681, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r7679, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7681, %r7679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7537, %r7680;
	// end inline asm
	// begin inline asm
	mov.b32 %r7686, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7681, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7545, %r7687;
	// end inline asm
	// begin inline asm
	mov.b32 %r7693, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7681, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7553, %r7694;
	// end inline asm
	// begin inline asm
	mov.b32 %r7700, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7681, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7561, %r7701;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7707, %r7683, %r7697, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7711, %r7690, %r7704, %r2240;
	// end inline asm
	shl.b32 	%r7718, %r7711, 4;
	// begin inline asm
	lop3.b32 %r7715, %r2246, %r7707, %r7718, 202;
	// end inline asm
	xor.b32  	%r7817, %r7715, -2004318072;
	// begin inline asm
	mov.b32 %r7722, {%rs1183, %rs1183};
	// end inline asm
	// begin inline asm
	mov.b32 %r7720, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7722, %r7720;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7569, %r7721;
	// end inline asm
	// begin inline asm
	mov.b32 %r7727, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7722, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7577, %r7728;
	// end inline asm
	// begin inline asm
	mov.b32 %r7734, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7722, %r7734;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7738, %r7585, %r7735;
	// end inline asm
	// begin inline asm
	mov.b32 %r7741, {%rs1191, %rs1191};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7742, %r7722, %r7741;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7745, %r7593, %r7742;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7748, %r7724, %r7738, %r2240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7752, %r7731, %r7745, %r2240;
	// end inline asm
	shl.b32 	%r7759, %r7752, 4;
	// begin inline asm
	lop3.b32 %r7756, %r2246, %r7748, %r7759, 202;
	// end inline asm
	xor.b32  	%r7818, %r7756, -2004318072;
	st.shared.u32 	[%rd145], %r7815;
	st.shared.u32 	[%rd146], %r7816;
	st.shared.u32 	[%rd147], %r7817;
	st.shared.u32 	[%rd148], %r7818;
	add.s32 	%r7931, %r7931, 64;
	add.s64 	%rd148, %rd148, 8324;
	add.s64 	%rd147, %rd147, 8324;
	add.s64 	%rd146, %rd146, 8324;
	add.s64 	%rd145, %rd145, 8324;
	add.s32 	%r7930, %r7930, 1;
	setp.eq.s32 	%p164, %r7931, 256;
	@%p164 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_30;
$L__BB0_31:                             // %guard_exit17471
                                        //   in Loop: Header=BB0_29 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7824, [%rd5];
	ld.shared.u32 	%r7825, [%rd6+128];
	ld.shared.u32 	%r7832, [%rd6+4];
	ld.shared.u32 	%r7833, [%rd6+132];
	ld.shared.u32 	%r7840, [%rd5+8324];
	ld.shared.u32 	%r7841, [%rd6+8452];
	ld.shared.u32 	%r7848, [%rd6+8328];
	ld.shared.u32 	%r7849, [%rd6+8456];
	ld.shared.u32 	%r7856, [%rd5+16648];
	ld.shared.u32 	%r7857, [%rd6+16776];
	ld.shared.u32 	%r7864, [%rd6+16652];
	ld.shared.u32 	%r7865, [%rd6+16780];
	ld.shared.u32 	%r7872, [%rd5+24972];
	ld.shared.u32 	%r7873, [%rd6+25100];
	ld.shared.u32 	%r7880, [%rd6+24976];
	ld.shared.u32 	%r7881, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7819, %r7824, %r7825, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7827, %r7832, %r7833, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7835, %r7840, %r7841, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7843, %r7848, %r7849, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7851, %r7856, %r7857, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7855, %r7856, %r7857, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7859, %r7864, %r7865, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7863, %r7864, %r7865, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7867, %r7872, %r7873, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7871, %r7872, %r7873, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7875, %r7880, %r7881, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7879, %r7880, %r7881, %r491;
	// end inline asm
	selp.b32 	%r7883, %r7823, %r7819, %p151;
	shfl.sync.bfly.b32	%r99, %r7883, 8, 31, -1;
	selp.b32 	%r7884, %r7831, %r7827, %p151;
	shfl.sync.bfly.b32	%r100, %r7884, 8, 31, -1;
	selp.b32 	%r7885, %r7839, %r7835, %p151;
	shfl.sync.bfly.b32	%r7886, %r7885, 8, 31, -1;
	selp.b32 	%r7887, %r7847, %r7843, %p151;
	shfl.sync.bfly.b32	%r7888, %r7887, 8, 31, -1;
	selp.b32 	%r7889, %r7855, %r7851, %p151;
	shfl.sync.bfly.b32	%r7890, %r7889, 8, 31, -1;
	selp.b32 	%r7891, %r7863, %r7859, %p151;
	shfl.sync.bfly.b32	%r7892, %r7891, 8, 31, -1;
	selp.b32 	%r7893, %r7871, %r7867, %p151;
	shfl.sync.bfly.b32	%r7894, %r7893, 8, 31, -1;
	selp.b32 	%r7895, %r7879, %r7875, %p151;
	shfl.sync.bfly.b32	%r7896, %r7895, 8, 31, -1;
	and.b32  	%r7897, %r44, 32512;
	setp.eq.s32 	%p166, %r7897, 0;
	shl.b32 	%r7916, %r44, 10;
	@%p166 bra 	$L__BB0_33;
// %bb.32:                              // %pass16657
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r7898, %r100, %r7831, %p151;
	selp.b32 	%r7899, %r7827, %r100, %p151;
	selp.b32 	%r7900, %r99, %r7823, %p151;
	selp.b32 	%r7901, %r7819, %r99, %p151;
	or.b32  	%r7903, %r31, %r7916;
	cvt.s64.s32 	%rd93, %r7903;
	add.s64 	%rd94, %rd93, %rd7;
	shr.u64 	%rd95, %rd94, 39;
	add.s64 	%rd96, %rd94, %rd95;
	shr.s64 	%rd97, %rd96, 25;
	setp.lt.s64 	%p168, %rd94, 0;
	and.b64  	%rd98, %rd96, -33554432;
	setp.ne.s64 	%p169, %rd98, %rd94;
	and.pred  	%p170, %p168, %p169;
	selp.u64 	%rd99, 1, 0, %p170;
	sub.s64 	%rd100, %rd99, %rd97;
	shl.b64 	%rd101, %rd100, 25;
	add.s64 	%rd102, %rd101, %rd94;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd104, %rd3, %rd103;
	st.global.v4.u32 	[%rd104], {%r7901, %r7899, %r7900, %r7898};
$L__BB0_33:                             // %pass16670
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r93, %r44, 64;
	setp.lt.u32 	%p171, %r93, 192;
	@%p171 bra 	$L__BB0_35;
// %bb.34:                              // %pass16764
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r101, %r7835, %r7886, %p151;
	selp.b32 	%r102, %r7886, %r7839, %p151;
	selp.b32 	%r103, %r7843, %r7888, %p151;
	selp.b32 	%r104, %r7888, %r7847, %p151;
	shl.b32 	%r7904, %r93, 10;
	or.b32  	%r7905, %r31, %r7904;
	cvt.s64.s32 	%rd105, %r7905;
	add.s64 	%rd106, %rd105, %rd7;
	shr.u64 	%rd107, %rd106, 39;
	add.s64 	%rd108, %rd106, %rd107;
	shr.s64 	%rd109, %rd108, 25;
	setp.lt.s64 	%p172, %rd106, 0;
	and.b64  	%rd110, %rd108, -33554432;
	setp.ne.s64 	%p173, %rd110, %rd106;
	and.pred  	%p174, %p172, %p173;
	selp.u64 	%rd111, 1, 0, %p174;
	sub.s64 	%rd112, %rd111, %rd109;
	shl.b64 	%rd113, %rd112, 25;
	add.s64 	%rd114, %rd113, %rd106;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd116, %rd3, %rd115;
	st.global.v4.u32 	[%rd116], {%r101, %r103, %r102, %r104};
$L__BB0_35:                             // %pass16777
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r94, %r44, 128;
	selp.b32 	%r109, %r7867, %r7894, %p151;
	selp.b32 	%r110, %r7894, %r7871, %p151;
	selp.b32 	%r111, %r7875, %r7896, %p151;
	selp.b32 	%r112, %r7896, %r7879, %p151;
	setp.lt.u32 	%p175, %r94, 192;
	@%p175 bra 	$L__BB0_37;
// %bb.36:                              // %pass16871
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r105, %r7851, %r7890, %p151;
	selp.b32 	%r106, %r7890, %r7855, %p151;
	selp.b32 	%r107, %r7859, %r7892, %p151;
	selp.b32 	%r108, %r7892, %r7863, %p151;
	shl.b32 	%r7906, %r94, 10;
	or.b32  	%r7907, %r31, %r7906;
	cvt.s64.s32 	%rd117, %r7907;
	add.s64 	%rd118, %rd117, %rd7;
	shr.u64 	%rd119, %rd118, 39;
	add.s64 	%rd120, %rd118, %rd119;
	shr.s64 	%rd121, %rd120, 25;
	setp.lt.s64 	%p176, %rd118, 0;
	and.b64  	%rd122, %rd120, -33554432;
	setp.ne.s64 	%p177, %rd122, %rd118;
	and.pred  	%p178, %p176, %p177;
	selp.u64 	%rd123, 1, 0, %p178;
	sub.s64 	%rd124, %rd123, %rd121;
	shl.b64 	%rd125, %rd124, 25;
	add.s64 	%rd126, %rd125, %rd118;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd128, %rd3, %rd127;
	st.global.v4.u32 	[%rd128], {%r105, %r107, %r106, %r108};
	bra.uni 	$L__BB0_37;
$L__BB0_38:                             // %L40519
	st.global.u32 	[%rd4], %r7915;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r7914, 2;
	st.global.u32 	[%rd4], %r7914;
	mov.u64 	%rd143, exception3423;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r113;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7913, 3;
	st.global.u32 	[%rd4], %r7913;
	mov.u64 	%rd141, exception3423;
	cvta.global.u64 	%rd142, %rd141;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd142;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r113;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd40, exception1;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r113;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
