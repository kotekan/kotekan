// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3410[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception13430[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<1197>;
	.reg .b32 	%r<8011>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<156>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r163, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r170, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r170, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd37, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r164, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r171, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r172, %r171, %r4;
	or.b32  	%r173, %r172, %r2;
	mul.wide.u32 	%rd43, %r173, 4;
	add.s64 	%rd4, %rd37, %rd43;
	mov.u32 	%r174, 1;
	st.global.u32 	[%rd4], %r174;
	setp.gt.u32 	%p2, %r164, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r165, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r165, %r164;
	setp.gt.s32 	%p4, %r165, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r166, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r175, %r165, %r164;
	and.b32  	%r176, %r175, 255;
	setp.ne.s32 	%p6, %r176, 0;
	setp.gt.u32 	%p7, %r166, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r167, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r167, %r166;
	setp.gt.s32 	%p10, %r167, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	not.b32 	%r177, %r166;
	add.s32 	%r178, %r177, %r167;
	and.b32  	%r179, %r178, 3;
	setp.eq.s32 	%p12, %r179, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r168, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r168, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r169, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r168, %r169;
	setp.lt.s32 	%p15, %r169, 49;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r111, %r4, 2, 1;
	shr.u32 	%r112, %r4, 4;
	shl.b32 	%r187, %r112, 1;
	shl.b32 	%r188, %r111, 2;
	shl.b32 	%r113, %r4, 3;
	and.b32  	%r189, %r113, 24;
	or.b32  	%r190, %r188, %r189;
	or.b32  	%r191, %r187, %r190;
	bfe.u32 	%r192, %r4, 3, 1;
	or.b32  	%r115, %r192, %r191;
	or.b32  	%r116, %r115, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r115;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p22, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L604
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_13:                             // %L607
	cvt.rn.f32.s32 	%f181, %r116;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L624
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_15:                             // %L627
	or.b32  	%r210, %r115, 64;
	or.b32  	%r6, %r115, 96;
	cvt.rn.f32.s32 	%f216, %r210;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L706
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_17:                             // %L709
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L726
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_19:                             // %L729
	or.b32  	%r228, %r115, 128;
	or.b32  	%r8, %r115, 160;
	cvt.rn.f32.s32 	%f285, %r228;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L808
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_21:                             // %L811
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L828
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_23:                             // %L831
	or.b32  	%r246, %r115, 192;
	or.b32  	%r10, %r115, 224;
	cvt.rn.f32.s32 	%f354, %r246;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L910
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_25:                             // %L913
	shr.u32 	%r110, %r4, 1;
	shr.u32 	%r114, %r4, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L930
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_27:                             // %L933
	and.b32  	%r290, %r4, 3;
	and.b32  	%r291, %r114, 2;
	and.b32  	%r292, %r110, 4;
	or.b32  	%r293, %r111, %r291;
	or.b32  	%r14, %r293, %r292;
	mul.lo.s32 	%r294, %r290, %r14;
	shl.b32 	%r295, %r294, 1;
	neg.s32 	%r296, %r295;
	cvt.rn.f32.s32 	%f35, %r296;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p79, %f830, 0f40000000;
	setp.gtu.f32 	%p237, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p79 bra 	$L__BB0_100;
// %bb.28:
	@%p237 bra 	$L__BB0_96;
	bra.uni 	$L__BB0_29;
$L__BB0_96:
	mov.b32 	%r118, %f830;
	and.b32  	%r297, %r118, 8388607;
	or.b32  	%r8005, %r297, 1065353216;
	mov.b32 	%f821, %r8005;
	add.s32 	%r298, %r118, -1073741824;
	and.b32  	%r8006, %r298, -8388608;
	setp.eq.s32 	%p86, %r8006, 0;
	@%p86 bra 	$L__BB0_99;
// %bb.97:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_98:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r299, %r8006, 192937984;
	add.s32 	%r300, %r8005, %r299;
	mov.b32 	%f501, %r300;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r8006, %r8006, %r299;
	mov.b32 	%r8005, %f821;
	setp.ne.s32 	%p87, %r8006, 0;
	setp.ne.s32 	%p88, %r8005, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_98;
$L__BB0_99:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p90, %r118, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_100;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r117, %f89;
	setp.lt.u32 	%p81, %r117, 1073741824;
	@%p81 bra 	$L__BB0_95;
// %bb.30:
	setp.lt.u32 	%p82, %r117, -2147483647;
	@%p82 bra 	$L__BB0_93;
// %bb.31:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p85, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p85;
	bra.uni 	$L__BB0_95;
$L__BB0_93:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p83, %f89, 0f40800000;
	@%p83 bra 	$L__BB0_95;
// %bb.94:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p84, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p84;
$L__BB0_95:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_100:                            // %__internal_fmodf_kernel.exit.i928
	shl.b32 	%r101, %r4, 1;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p91, %f510, 0f7F800000;
	mov.b32 	%r301, %f36;
	and.b32  	%r125, %r301, -2147483648;
	@%p91 bra 	$L__BB0_102;
// %bb.101:
	mov.b32 	%r302, %f822;
	or.b32  	%r303, %r125, %r302;
	mov.b32 	%f822, %r303;
$L__BB0_102:                            // %__nv_fmodf.exit929
	and.b32  	%r312, %r101, 6;
	mov.u32 	%r313, -8;
	sub.s32 	%r314, %r313, %r312;
	mul.lo.s32 	%r315, %r14, %r314;
	cvt.rn.f32.s32 	%f105, %r315;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p99, %f818, 0f40000000;
	setp.gtu.f32 	%p238, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	@%p238 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r16, %f818;
	and.b32  	%r316, %r16, 8388607;
	or.b32  	%r7973, %r316, 1065353216;
	mov.b32 	%f809, %r7973;
	add.s32 	%r317, %r16, -1073741824;
	and.b32  	%r7974, %r317, -8388608;
	setp.eq.s32 	%p106, %r7974, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r318, %r7974, 192937984;
	add.s32 	%r319, %r7973, %r318;
	mov.b32 	%f552, %r319;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7974, %r7974, %r318;
	mov.b32 	%r7973, %f809;
	setp.ne.s32 	%p107, %r7974, 0;
	setp.ne.s32 	%p108, %r7973, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p101, %r15, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r15, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p105, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p103, %f39, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p104, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p111, %f561, 0f7F800000;
	mov.b32 	%r320, %f106;
	and.b32  	%r23, %r320, -2147483648;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r321, %f810;
	or.b32  	%r322, %r23, %r321;
	mov.b32 	%f810, %r322;
$L__BB0_45:                             // %__nv_fmodf.exit
	div.approx.f32 	%f53, %f35, %f177;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p119, %f826, 0f40000000;
	@%p119 bra 	$L__BB0_110;
// %bb.46:
	setp.gtu.f32 	%p120, %f826, 0f4B800000;
	@%p120 bra 	$L__BB0_106;
	bra.uni 	$L__BB0_47;
$L__BB0_106:
	mov.b32 	%r127, %f826;
	and.b32  	%r343, %r127, 8388607;
	or.b32  	%r8007, %r343, 1065353216;
	mov.b32 	%f825, %r8007;
	add.s32 	%r344, %r127, -1073741824;
	and.b32  	%r8008, %r344, -8388608;
	setp.eq.s32 	%p126, %r8008, 0;
	@%p126 bra 	$L__BB0_109;
// %bb.107:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_108:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r345, %r8008, 192937984;
	add.s32 	%r346, %r8007, %r345;
	mov.b32 	%f605, %r346;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r8008, %r8008, %r345;
	mov.b32 	%r8007, %f825;
	setp.ne.s32 	%p127, %r8008, 0;
	setp.ne.s32 	%p128, %r8007, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_108;
$L__BB0_109:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p130, %r127, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_110;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r126, %f109;
	setp.lt.u32 	%p121, %r126, 1073741824;
	@%p121 bra 	$L__BB0_105;
// %bb.48:
	setp.lt.u32 	%p122, %r126, -2147483647;
	@%p122 bra 	$L__BB0_103;
// %bb.49:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p125;
	bra.uni 	$L__BB0_105;
$L__BB0_103:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_105;
// %bb.104:                             // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p124;
$L__BB0_105:                            // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_110:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p131, %f614, 0f7F800000;
	@%p131 bra 	$L__BB0_112;
// %bb.111:
	mov.b32 	%r347, %f53;
	and.b32  	%r348, %r347, -2147483648;
	mov.b32 	%r349, %f826;
	or.b32  	%r350, %r348, %r349;
	mov.b32 	%f826, %r350;
$L__BB0_112:                            // %__nv_fmodf.exit960
	div.approx.f32 	%f125, %f105, %f177;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p139, %f814, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f814, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r29, %f814;
	and.b32  	%r359, %r29, 8388607;
	or.b32  	%r7975, %r359, 1065353216;
	mov.b32 	%f813, %r7975;
	add.s32 	%r360, %r29, -1073741824;
	and.b32  	%r7976, %r360, -8388608;
	setp.eq.s32 	%p146, %r7976, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r361, %r7976, 192937984;
	add.s32 	%r362, %r7975, %r361;
	mov.b32 	%f656, %r362;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7976, %r7976, %r361;
	mov.b32 	%r7975, %f813;
	setp.ne.s32 	%p147, %r7976, 0;
	setp.ne.s32 	%p148, %r7975, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p150, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p141, %r28, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r28, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p145, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p143, %f56, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p144, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p151, %f665, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r363, %f125;
	and.b32  	%r364, %r363, -2147483648;
	mov.b32 	%r365, %f814;
	or.b32  	%r366, %r364, %r365;
	mov.b32 	%f814, %r366;
$L__BB0_63:                             // %__nv_fmodf.exit867
	@%p79 bra 	$L__BB0_120;
// %bb.64:
	@%p237 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_65;
$L__BB0_116:
	mov.b32 	%r135, %f830;
	and.b32  	%r381, %r135, 8388607;
	or.b32  	%r8009, %r381, 1065353216;
	mov.b32 	%f829, %r8009;
	add.s32 	%r382, %r135, -1073741824;
	and.b32  	%r8010, %r382, -8388608;
	setp.eq.s32 	%p166, %r8010, 0;
	@%p166 bra 	$L__BB0_119;
// %bb.117:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_118:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r383, %r8010, 192937984;
	add.s32 	%r384, %r8009, %r383;
	mov.b32 	%f708, %r384;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r8010, %r8010, %r383;
	mov.b32 	%r8009, %f829;
	setp.ne.s32 	%p167, %r8010, 0;
	setp.ne.s32 	%p168, %r8009, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_118;
$L__BB0_119:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p170, %r135, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_120;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r134, %f128;
	setp.lt.u32 	%p161, %r134, 1073741824;
	@%p161 bra 	$L__BB0_115;
// %bb.66:
	setp.lt.u32 	%p162, %r134, -2147483647;
	@%p162 bra 	$L__BB0_113;
// %bb.67:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p165;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_115;
// %bb.114:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p164;
$L__BB0_115:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_120:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p171, %f717, 0f7F800000;
	@%p171 bra 	$L__BB0_122;
// %bb.121:
	mov.b32 	%r385, %f830;
	or.b32  	%r386, %r125, %r385;
	mov.b32 	%f830, %r386;
$L__BB0_122:                            // %__nv_fmodf.exit991
	@%p99 bra 	$L__BB0_79;
// %bb.68:
	@%p238 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r39, %f818;
	and.b32  	%r395, %r39, 8388607;
	or.b32  	%r7977, %r395, 1065353216;
	mov.b32 	%f817, %r7977;
	add.s32 	%r396, %r39, -1073741824;
	and.b32  	%r7978, %r396, -8388608;
	setp.eq.s32 	%p186, %r7978, 0;
	@%p186 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r397, %r7978, 192937984;
	add.s32 	%r398, %r7977, %r397;
	mov.b32 	%f758, %r398;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7978, %r7978, %r397;
	mov.b32 	%r7977, %f817;
	setp.ne.s32 	%p187, %r7978, 0;
	setp.ne.s32 	%p188, %r7977, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p190, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p181, %r38, 1073741824;
	@%p181 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p182, %r38, -2147483647;
	@%p182 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p185, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p185;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p183, %f71, 0f40800000;
	@%p183 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p184, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p184;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p191, %f767, 0f7F800000;
	@%p191 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r399, %f818;
	or.b32  	%r400, %r23, %r399;
	mov.b32 	%f818, %r400;
$L__BB0_81:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p199, %r165, %r164;
	mov.u32 	%r7971, 0;
	@%p199 bra 	$L__BB0_92;
// %bb.82:                              // %L1450.lr.ph
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r270, %r115, 63;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r280, %r270, 96;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r271, %r270, 127;
	and.b32  	%r281, %r280, 127;
	setp.gt.f32 	%p17, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p23, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p29, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p35, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p41, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p47, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p53, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p59, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r271;
	cvt.rn.f32.s32 	%f457, %r281;
	selp.f32 	%f153, %f152, %f150, %p17;
	selp.f32 	%f187, %f186, %f184, %p23;
	selp.f32 	%f222, %f221, %f219, %p29;
	selp.f32 	%f256, %f255, %f253, %p35;
	selp.f32 	%f291, %f290, %f288, %p41;
	selp.f32 	%f325, %f324, %f322, %p47;
	selp.f32 	%f360, %f359, %f357, %p53;
	selp.f32 	%f394, %f393, %f391, %p59;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	mov.b32 	%r193, %f154;
	mov.b32 	%r200, %f188;
	mov.b32 	%r211, %f223;
	mov.b32 	%r218, %f257;
	mov.b32 	%r229, %f292;
	mov.b32 	%r236, %f326;
	mov.b32 	%r247, %f361;
	mov.b32 	%r254, %f395;
	mov.b32 	%r272, %f425;
	mov.b32 	%r282, %f459;
	mov.b32 	%r304, %f511;
	mov.b32 	%r335, %f562;
	and.b32  	%r194, %r193, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r212, %r211, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	and.b32  	%r230, %r229, -2147483648;
	and.b32  	%r237, %r236, -2147483648;
	and.b32  	%r248, %r247, -2147483648;
	and.b32  	%r255, %r254, -2147483648;
	and.b32  	%r273, %r272, -2147483648;
	and.b32  	%r283, %r282, -2147483648;
	and.b32  	%r305, %r304, -2147483648;
	and.b32  	%r336, %r335, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	or.b32  	%r195, %r194, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r213, %r212, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	or.b32  	%r231, %r230, 1056964608;
	or.b32  	%r238, %r237, 1056964608;
	or.b32  	%r249, %r248, 1056964608;
	or.b32  	%r256, %r255, 1056964608;
	or.b32  	%r274, %r273, 1056964608;
	or.b32  	%r284, %r283, 1056964608;
	or.b32  	%r306, %r305, 1056964608;
	or.b32  	%r337, %r336, 1056964608;
	mov.b32 	%r351, %f615;
	mov.b32 	%r373, %f666;
	mov.b32 	%f155, %r195;
	mov.b32 	%f189, %r202;
	mov.b32 	%f224, %r213;
	mov.b32 	%f258, %r220;
	mov.b32 	%f293, %r231;
	mov.b32 	%f327, %r238;
	mov.b32 	%f362, %r249;
	mov.b32 	%f396, %r256;
	mov.b32 	%f426, %r274;
	mov.b32 	%f460, %r284;
	mov.b32 	%f512, %r306;
	mov.b32 	%f563, %r337;
	and.b32  	%r352, %r351, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	add.f32 	%f718, %f830, %f830;
	shr.u32 	%r181, %r3, 3;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r353, %r352, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	mov.b32 	%r387, %f718;
	cvt.u16.u32 	%rs1, %r181;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p18, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p24, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p30, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p36, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p42, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p48, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p54, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p60, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p65, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p72, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p92, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p112, %f566, 0f4B000000;
	mov.b32 	%f616, %r353;
	mov.b32 	%f667, %r375;
	and.b32  	%r388, %r387, -2147483648;
	and.b16  	%rs2, %rs1, 255;
	selp.f32 	%f159, %f154, %f157, %p18;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p19, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p24;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p25, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p30;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p31, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p36;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p37, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p42;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p43, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p48;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p49, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p54;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p55, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p60;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p61, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p65;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p66, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p72;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p73, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p92;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p93, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p112;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p113, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r389, %r388, 1056964608;
	mul.lo.s16 	%rs3, %rs2, 171;
	selp.f32 	%f161, %f160, %f159, %p19;
	selp.f32 	%f195, %f194, %f193, %p25;
	selp.f32 	%f230, %f229, %f228, %p31;
	selp.f32 	%f264, %f263, %f262, %p37;
	selp.f32 	%f299, %f298, %f297, %p43;
	selp.f32 	%f333, %f332, %f331, %p49;
	selp.f32 	%f368, %f367, %f366, %p55;
	selp.f32 	%f402, %f401, %f400, %p61;
	selp.f32 	%f432, %f431, %f430, %p66;
	selp.f32 	%f466, %f465, %f464, %p73;
	selp.f32 	%f518, %f517, %f516, %p93;
	selp.f32 	%f569, %f568, %f567, %p113;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p132, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p153, %f670, 0f4B000000;
	mov.b32 	%f719, %r389;
	shr.u16 	%rs4, %rs3, 13;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p132;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p133, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p153;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p154, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	mul.lo.s16 	%rs5, %rs4, 48;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p133;
	selp.f32 	%f673, %f672, %f671, %p154;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p173, %f722, 0f4B000000;
	sub.s16 	%rs6, %rs1, %rs5;
	cvt.rzi.s32.f32 	%r196, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r214, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r232, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r239, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r250, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r257, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p173;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p174, %f722, 0f3F000000;
	and.b32  	%r102, %r101, 8;
	and.b32  	%r103, %r4, 16;
	and.b16  	%rs7, %rs6, 255;
	add.s32 	%r197, %r196, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r215, %r214, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r233, %r232, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r240, %r239, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r251, %r250, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r258, %r257, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r275, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r285, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r307, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r338, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p174;
	or.b32  	%r180, %r103, %r102;
	mul.wide.u16 	%r104, %rs7, 64;
	shl.b32 	%r105, %r4, 2;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r198, %r197, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r216, %r215, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r234, %r233, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r241, %r240, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r252, %r251, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r259, %r258, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r276, %r275, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r286, %r285, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r308, %r307, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r339, %r338, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	or.b32  	%r182, %r104, %r180;
	and.b32  	%r106, %r105, 4;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p20, %r198, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p26, %r205, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p32, %r216, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p38, %r223, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p44, %r234, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p50, %r241, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p56, %r252, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p62, %r259, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p67, %r276, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p74, %r286, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p94, %r308, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p114, %r339, 1;
	cvt.rzi.s32.f32 	%r354, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r376, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	or.b32  	%r183, %r182, %r106;
	and.b32  	%r107, %r4, 2;
	selp.f32 	%f173, %f171, %f172, %p20;
	and.b32  	%r199, %r197, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p26;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f242, %f240, %f241, %p32;
	and.b32  	%r217, %r215, 2;
	selp.f32 	%f276, %f274, %f275, %p38;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f311, %f309, %f310, %p44;
	and.b32  	%r235, %r233, 2;
	selp.f32 	%f345, %f343, %f344, %p50;
	and.b32  	%r242, %r240, 2;
	selp.f32 	%f380, %f378, %f379, %p56;
	and.b32  	%r253, %r251, 2;
	selp.f32 	%f414, %f412, %f413, %p62;
	and.b32  	%r260, %r258, 2;
	selp.f32 	%f444, %f442, %f443, %p67;
	and.b32  	%r277, %r275, 2;
	selp.f32 	%f478, %f476, %f477, %p74;
	and.b32  	%r287, %r285, 2;
	selp.f32 	%f530, %f528, %f529, %p94;
	and.b32  	%r309, %r307, 2;
	selp.f32 	%f581, %f579, %f580, %p114;
	and.b32  	%r340, %r338, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r355, %r354, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r377, %r376, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r184, %r183, %r107;
	and.b32  	%r108, %r105, 32;
	setp.eq.s32 	%p21, %r199, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p27, %r206, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p33, %r217, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p39, %r224, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p45, %r235, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p51, %r242, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p57, %r253, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p63, %r260, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p68, %r277, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r278, %r275, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p75, %r287, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r288, %r285, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p95, %r309, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r310, %r307, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p115, %r340, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r341, %r338, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p134, %r355, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p155, %r377, 1;
	cvt.rzi.s32.f32 	%r390, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	or.b32  	%r185, %r184, %r108;
	selp.f32 	%f176, %f173, %f175, %p21;
	selp.f32 	%f210, %f207, %f209, %p27;
	selp.f32 	%f245, %f242, %f244, %p33;
	selp.f32 	%f279, %f276, %f278, %p39;
	selp.f32 	%f314, %f311, %f313, %p45;
	selp.f32 	%f348, %f345, %f347, %p51;
	selp.f32 	%f383, %f380, %f382, %p57;
	selp.f32 	%f417, %f414, %f416, %p63;
	selp.f32 	%f445, %f443, %f442, %p67;
	selp.f32 	%f447, %f444, %f446, %p68;
	and.b32  	%r279, %r278, 2;
	setp.eq.f32 	%p70, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p74;
	selp.f32 	%f481, %f478, %f480, %p75;
	and.b32  	%r289, %r288, 2;
	setp.eq.f32 	%p77, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p94;
	selp.f32 	%f533, %f530, %f532, %p95;
	and.b32  	%r311, %r310, 2;
	setp.eq.f32 	%p97, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p114;
	selp.f32 	%f584, %f581, %f583, %p115;
	and.b32  	%r342, %r341, 2;
	setp.eq.f32 	%p117, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p134;
	and.b32  	%r356, %r354, 2;
	selp.f32 	%f685, %f683, %f684, %p155;
	and.b32  	%r378, %r376, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r391, %r390, 1;
	bfe.u32 	%r186, %r185, 1, 7;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p69, %r279, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p70;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p76, %r289, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p77;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p96, %r311, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p97;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p116, %r342, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p117;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p135, %r356, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r357, %r354, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p156, %r378, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r379, %r376, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p175, %r391, 1;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd44, %r186, 4;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p69;
	setp.gt.f32 	%p71, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p76;
	setp.gt.f32 	%p78, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p96;
	setp.gt.f32 	%p98, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p116;
	setp.gt.f32 	%p118, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p134;
	selp.f32 	%f637, %f634, %f636, %p135;
	and.b32  	%r358, %r357, 2;
	setp.eq.f32 	%p137, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p155;
	selp.f32 	%f688, %f685, %f687, %p156;
	and.b32  	%r380, %r379, 2;
	setp.eq.f32 	%p158, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p175;
	and.b32  	%r392, %r390, 2;
	add.s64 	%rd45, %rd1, %rd44;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p71;
	selp.f32 	%f489, %f488, %f483, %p78;
	selp.f32 	%f104, %f540, %f536, %p98;
	selp.f32 	%f593, %f592, %f587, %p118;
	setp.eq.s32 	%p136, %r358, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p137;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p157, %r380, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p158;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p176, %r392, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r393, %r390, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r109, [%rd45];
	mov.b32 	%r209, %f215;
	mov.b32 	%r208, %f3;
	mov.b32 	%r227, %f284;
	mov.b32 	%r226, %f12;
	mov.b32 	%r245, %f353;
	mov.b32 	%r244, %f21;
	mov.b32 	%r263, %f421;
	mov.b32 	%r262, %f30;
	mov.b32 	%r265, %f456;
	mov.b32 	%r266, %f489;
	mov.b32 	%r268, %f453;
	mov.b32 	%r269, %f486;
	mov.b32 	%r325, %f593;
	mov.b32 	%r324, %f104;
	mov.b32 	%r331, %f590;
	mov.b32 	%r330, %f103;
	selp.f32 	%f640, %f635, %f639, %p136;
	setp.gt.f32 	%p138, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p157;
	setp.gt.f32 	%p159, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p175;
	selp.f32 	%f740, %f737, %f739, %p176;
	and.b32  	%r394, %r393, 2;
	setp.eq.f32 	%p178, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r207, %r209, %r208;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r225, %r227, %r226;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r243, %r245, %r244;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r261, %r263, %r262;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r264, %r266, %r265;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	xor.b32  	%r328, %r331, -2147483648;
	xor.b32  	%r327, %r330, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p138;
	selp.f32 	%f697, %f696, %f691, %p159;
	setp.eq.s32 	%p177, %r394, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p178;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r325, %r324;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r329, %r331, %r330;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r325, %r324;
	// end inline asm
	mov.b32 	%r369, %f697;
	mov.b32 	%r368, %f124;
	mov.b32 	%r372, %f694;
	mov.b32 	%r371, %f123;
	selp.f32 	%f743, %f738, %f742, %p177;
	setp.gt.f32 	%p179, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r367, %r369, %r368;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r370, %r372, %r371;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p179;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r413, %f768;
	and.b32  	%r414, %r413, -2147483648;
	or.b32  	%r415, %r414, 1056964608;
	mov.b32 	%f769, %r415;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p192, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p192;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p193, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p193;
	cvt.rzi.s32.f32 	%r416, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r417, %r416, 1;
	setp.eq.b32 	%p194, %r417, 1;
	selp.f32 	%f787, %f785, %f786, %p194;
	selp.f32 	%f788, %f786, %f785, %p194;
	and.b32  	%r418, %r416, 2;
	setp.eq.s32 	%p195, %r418, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p195;
	add.s32 	%r419, %r416, 1;
	and.b32  	%r420, %r419, 2;
	setp.eq.s32 	%p196, %r420, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p196;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p197, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p197;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p198, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p198;
	mov.b32 	%r403, %f799;
	mov.b32 	%r402, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r401, %r403, %r402;
	// end inline asm
	mov.b32 	%r409, %f796;
	xor.b32  	%r406, %r409, -2147483648;
	mov.b32 	%r408, %f142;
	xor.b32  	%r405, %r408, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r404, %r406, %r405;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r407, %r409, %r408;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r410, %r403, %r402;
	// end inline asm
	or.b32  	%r422, %r103, %r1;
	or.b32  	%r50, %r422, %r108;
	shl.b32 	%r423, %r3, 5;
	and.b32  	%r424, %r423, 128;
	cvt.u16.u32 	%rs8, %r104;
	mul.hi.u16 	%rs9, %rs8, -21845;
	shr.u16 	%rs10, %rs9, 5;
	mul.lo.s16 	%rs11, %rs10, 48;
	sub.s16 	%rs12, %rs8, %rs11;
	cvt.u32.u16 	%r425, %rs12;
	and.b32  	%r426, %r105, 28;
	and.b32  	%r427, %r423, 96;
	or.b32  	%r428, %r426, %r427;
	add.s32 	%r429, %r425, %r168;
	shl.b32 	%r430, %r429, 8;
	or.b32  	%r431, %r428, %r424;
	or.b32  	%r51, %r431, %r430;
	and.b32  	%r52, %r4, 8;
	shl.b32 	%r432, %r4, 4;
	or.b32  	%r433, %r432, %r52;
	shr.u32 	%r434, %r433, 2;
	and.b32  	%r435, %r434, 30;
	and.b32  	%r436, %r4, 4;
	or.b32  	%r54, %r436, %r114;
	shr.u32 	%r55, %r1, 1;
	and.b32  	%r56, %r2, 32;
	or.b32  	%r57, %r55, 8;
	or.b32  	%r437, %r56, %r55;
	or.b32  	%r58, %r437, 16;
	or.b32  	%r59, %r437, 24;
	or.b32  	%r438, %r103, %r106;
	or.b32  	%r439, %r104, %r438;
	or.b32  	%r440, %r439, %r102;
	or.b32  	%r441, %r440, %r108;
	or.b32  	%r442, %r441, %r107;
	bfe.u32 	%r443, %r442, 1, 5;
	mul.lo.s32 	%r444, %r443, 65;
	add.s32 	%r445, %r444, %r437;
	or.b32  	%r446, %r57, %r56;
	add.s32 	%r447, %r444, %r446;
	add.s32 	%r448, %r444, %r58;
	add.s32 	%r449, %r444, %r59;
	shl.b32 	%r450, %r1, 1;
	or.b32  	%r451, %r450, %r112;
	mul.lo.s32 	%r452, %r451, 65;
	add.s32 	%r453, %r435, %r452;
	mul.wide.u32 	%rd46, %r453, 4;
	mov.u64 	%rd47, shmem;
	add.s64 	%rd5, %rd47, %rd46;
	cvt.u64.u32 	%rd48, %r435;
	cvt.u64.u32 	%rd49, %r452;
	add.s64 	%rd50, %rd49, %rd48;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd6, %rd47, %rd51;
	shl.b32 	%r454, %r166, 16;
	add.s32 	%r455, %r454, -196608;
	and.b32  	%r456, %r104, 192;
	or.b32  	%r457, %r456, %r114;
	shl.b32 	%r458, %r1, 10;
	shl.b32 	%r459, %r457, 8;
	or.b32  	%r460, %r427, %r458;
	or.b32  	%r461, %r460, %r426;
	or.b32  	%r462, %r461, %r424;
	or.b32  	%r60, %r462, %r459;
	cvt.s64.s32 	%rd7, %r455;
	and.b32  	%r463, %r1, 1;
	neg.s32 	%r464, %r463;
	setp.eq.b32 	%p200, %r463, 1;
	and.b32  	%r465, %r464, 1040;
	bfe.s32 	%r466, %r1, 2, 1;
	and.b32  	%r467, %r1, 4;
	setp.eq.s32 	%p201, %r467, 0;
	and.b32  	%r468, %r466, 260;
	mul.lo.s32 	%r469, %r112, 65;
	bfe.s32 	%r470, %r1, 1, 1;
	and.b32  	%r471, %r1, 2;
	setp.eq.s32 	%p202, %r471, 0;
	and.b32  	%r472, %r470, 520;
	shr.u32 	%r473, %r1, 3;
	mul.lo.s32 	%r474, %r473, 130;
	add.s32 	%r475, %r465, %r435;
	add.s32 	%r476, %r475, %r468;
	add.s32 	%r477, %r476, %r469;
	add.s32 	%r478, %r477, %r472;
	add.s32 	%r479, %r478, %r474;
	mul.wide.u32 	%rd52, %r479, 4;
	add.s64 	%rd8, %rd47, %rd52;
	cvt.u64.u32 	%rd53, %r474;
	selp.b64 	%rd54, 0, 520, %p202;
	cvt.u64.u32 	%rd55, %r469;
	selp.b64 	%rd56, 0, 260, %p201;
	selp.b64 	%rd57, 1040, 0, %p200;
	add.s64 	%rd58, %rd48, %rd57;
	add.s64 	%rd59, %rd58, %rd56;
	add.s64 	%rd60, %rd59, %rd55;
	add.s64 	%rd61, %rd60, %rd54;
	add.s64 	%rd62, %rd61, %rd53;
	shl.b64 	%rd63, %rd62, 2;
	add.s64 	%rd9, %rd47, %rd63;
	cvt.u64.u32 	%rd64, %r475;
	add.s64 	%rd65, %rd64, %rd56;
	add.s64 	%rd66, %rd65, %rd55;
	add.s64 	%rd67, %rd66, %rd54;
	add.s64 	%rd68, %rd67, %rd53;
	shl.b64 	%rd69, %rd68, 2;
	add.s64 	%rd10, %rd47, %rd69;
	add.s32 	%r480, %r479, 2113;
	mul.wide.u32 	%rd70, %r480, 4;
	add.s64 	%rd11, %rd47, %rd70;
	add.s32 	%r481, %r479, 2082;
	mul.wide.u32 	%rd71, %r481, 4;
	add.s64 	%rd12, %rd47, %rd71;
	add.s32 	%r482, %r479, 2114;
	mul.wide.u32 	%rd72, %r482, 4;
	add.s64 	%rd13, %rd47, %rd72;
	add.s32 	%r483, %r479, 4194;
	mul.wide.u32 	%rd73, %r483, 4;
	add.s64 	%rd14, %rd47, %rd73;
	add.s32 	%r484, %r479, 4163;
	mul.wide.u32 	%rd74, %r484, 4;
	add.s64 	%rd15, %rd47, %rd74;
	add.s32 	%r485, %r479, 4195;
	mul.wide.u32 	%rd75, %r485, 4;
	add.s64 	%rd16, %rd47, %rd75;
	add.s32 	%r486, %r479, 6275;
	mul.wide.u32 	%rd76, %r486, 4;
	add.s64 	%rd17, %rd47, %rd76;
	add.s32 	%r487, %r479, 6244;
	mul.wide.u32 	%rd77, %r487, 4;
	add.s64 	%rd18, %rd47, %rd77;
	add.s32 	%r488, %r479, 6276;
	mul.wide.u32 	%rd78, %r488, 4;
	add.s64 	%rd19, %rd47, %rd78;
	mul.wide.u32 	%rd79, %r449, 4;
	add.s64 	%rd20, %rd47, %rd79;
	mul.wide.u32 	%rd80, %r448, 4;
	add.s64 	%rd21, %rd47, %rd80;
	mul.wide.u32 	%rd81, %r447, 4;
	add.s64 	%rd22, %rd47, %rd81;
	mul.wide.u32 	%rd82, %r445, 4;
	add.s64 	%rd23, %rd47, %rd82;
	setp.eq.s32 	%p203, %r52, 0;
	mov.u16 	%rs1188, 25600;
	mov.u16 	%rs1084, 21504;
	mov.u16 	%rs1196, 18432;
	mov.u32 	%r7992, %r7971;
	mov.u32 	%r7993, %r7971;
	mov.u32 	%r7994, %r7971;
	mov.u32 	%r7995, %r7971;
	mov.u32 	%r7996, %r7971;
	mov.u32 	%r7997, %r7971;
	mov.u32 	%r7998, %r7971;
	mov.u32 	%r7999, %r7971;
	mov.u32 	%r8000, %r7971;
	mov.u32 	%r8001, %r7971;
	mov.u32 	%r8002, %r7971;
	mov.u32 	%r8003, %r7971;
	mov.u32 	%r73, %r7971;
	bra.uni 	$L__BB0_83;
$L__BB0_91:                             // %pass16860
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7965, %r7972, %r60;
	or.b32  	%r7966, %r7965, 196608;
	cvt.s64.s32 	%rd136, %r7966;
	add.s64 	%rd137, %rd136, %rd7;
	shr.u64 	%rd138, %rd137, 39;
	add.s64 	%rd139, %rd137, %rd138;
	shr.s64 	%rd140, %rd139, 25;
	setp.lt.s64 	%p231, %rd137, 0;
	and.b64  	%rd141, %rd139, -33554432;
	setp.ne.s64 	%p232, %rd141, %rd137;
	and.pred  	%p233, %p231, %p232;
	selp.u64 	%rd142, 1, 0, %p233;
	sub.s64 	%rd143, %rd142, %rd140;
	shl.b64 	%rd144, %rd143, 25;
	add.s64 	%rd145, %rd144, %rd137;
	shl.b64 	%rd146, %rd145, 2;
	add.s64 	%rd147, %rd3, %rd146;
	st.global.v4.u32 	[%rd147], {%r159, %r161, %r160, %r162};
	setp.ne.s32 	%p234, %r73, 32512;
	add.s32 	%r73, %r73, 256;
	add.s32 	%r7967, %r73, %r164;
	setp.lt.s32 	%p235, %r7967, %r165;
	and.pred  	%p236, %p234, %p235;
	@%p236 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_92;
$L__BB0_83:                             // %L1450
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	and.b32  	%r74, %r73, 32512;
	or.b32  	%r554, %r50, %r74;
	add.s32 	%r555, %r554, %r164;
	mad.lo.s32 	%r556, %r555, 12288, %r51;
	mul.hi.s32 	%r557, %r556, 715827883;
	shr.u32 	%r558, %r557, 31;
	shr.s32 	%r559, %r557, 26;
	add.s32 	%r560, %r559, %r558;
	setp.lt.s32 	%p204, %r556, 0;
	mul.lo.s32 	%r561, %r560, 402653184;
	setp.ne.s32 	%p205, %r561, %r556;
	and.pred  	%p206, %p204, %p205;
	selp.s32 	%r562, -1, 0, %p206;
	add.s32 	%r563, %r560, %r562;
	mad.lo.s32 	%r564, %r563, -402653184, %r556;
	mul.wide.s32 	%rd83, %r564, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r565, %r566, %r567, %r568}, [%rd84];
	or.b32  	%r569, %r554, 64;
	add.s32 	%r570, %r569, %r164;
	mad.lo.s32 	%r571, %r570, 12288, %r51;
	mul.hi.s32 	%r572, %r571, 715827883;
	shr.u32 	%r573, %r572, 31;
	shr.s32 	%r574, %r572, 26;
	add.s32 	%r575, %r574, %r573;
	setp.lt.s32 	%p207, %r571, 0;
	mul.lo.s32 	%r576, %r575, 402653184;
	setp.ne.s32 	%p208, %r576, %r571;
	and.pred  	%p209, %p207, %p208;
	selp.s32 	%r577, -1, 0, %p209;
	add.s32 	%r578, %r575, %r577;
	mad.lo.s32 	%r579, %r578, -402653184, %r571;
	mul.wide.s32 	%rd85, %r579, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r580, %r581, %r582, %r583}, [%rd86];
	or.b32  	%r584, %r554, 128;
	add.s32 	%r585, %r584, %r164;
	mad.lo.s32 	%r586, %r585, 12288, %r51;
	mul.hi.s32 	%r587, %r586, 715827883;
	shr.u32 	%r588, %r587, 31;
	shr.s32 	%r589, %r587, 26;
	add.s32 	%r590, %r589, %r588;
	setp.lt.s32 	%p210, %r586, 0;
	mul.lo.s32 	%r591, %r590, 402653184;
	setp.ne.s32 	%p211, %r591, %r586;
	and.pred  	%p212, %p210, %p211;
	selp.s32 	%r592, -1, 0, %p212;
	add.s32 	%r593, %r590, %r592;
	mad.lo.s32 	%r594, %r593, -402653184, %r586;
	mul.wide.s32 	%rd87, %r594, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r595, %r596, %r597, %r598}, [%rd88];
	or.b32  	%r599, %r554, 192;
	add.s32 	%r600, %r599, %r164;
	mad.lo.s32 	%r601, %r600, 12288, %r51;
	mul.hi.s32 	%r602, %r601, 715827883;
	shr.u32 	%r603, %r602, 31;
	shr.s32 	%r604, %r602, 26;
	add.s32 	%r605, %r604, %r603;
	setp.lt.s32 	%p213, %r601, 0;
	mul.lo.s32 	%r606, %r605, 402653184;
	setp.ne.s32 	%p214, %r606, %r601;
	and.pred  	%p215, %p213, %p214;
	selp.s32 	%r607, -1, 0, %p215;
	add.s32 	%r608, %r605, %r607;
	mad.lo.s32 	%r609, %r608, -402653184, %r601;
	mul.wide.s32 	%rd89, %r609, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r610, %r611, %r612, %r613}, [%rd90];
	selp.b32 	%r614, %r567, %r565, %p203;
	shfl.sync.bfly.b32	%r615, %r614, 8, 31, -1;
	selp.b32 	%r490, %r565, %r615, %p203;
	selp.b32 	%r491, %r615, %r567, %p203;
	selp.b32 	%r616, %r568, %r566, %p203;
	shfl.sync.bfly.b32	%r617, %r616, 8, 31, -1;
	selp.b32 	%r498, %r566, %r617, %p203;
	selp.b32 	%r499, %r617, %r568, %p203;
	selp.b32 	%r618, %r582, %r580, %p203;
	shfl.sync.bfly.b32	%r619, %r618, 8, 31, -1;
	selp.b32 	%r506, %r580, %r619, %p203;
	selp.b32 	%r507, %r619, %r582, %p203;
	selp.b32 	%r620, %r583, %r581, %p203;
	shfl.sync.bfly.b32	%r621, %r620, 8, 31, -1;
	selp.b32 	%r514, %r581, %r621, %p203;
	selp.b32 	%r515, %r621, %r583, %p203;
	selp.b32 	%r622, %r597, %r595, %p203;
	shfl.sync.bfly.b32	%r623, %r622, 8, 31, -1;
	selp.b32 	%r522, %r595, %r623, %p203;
	selp.b32 	%r523, %r623, %r597, %p203;
	selp.b32 	%r624, %r598, %r596, %p203;
	shfl.sync.bfly.b32	%r625, %r624, 8, 31, -1;
	selp.b32 	%r530, %r596, %r625, %p203;
	selp.b32 	%r531, %r625, %r598, %p203;
	selp.b32 	%r626, %r612, %r610, %p203;
	shfl.sync.bfly.b32	%r627, %r626, 8, 31, -1;
	selp.b32 	%r538, %r610, %r627, %p203;
	selp.b32 	%r539, %r627, %r612, %p203;
	selp.b32 	%r628, %r613, %r611, %p203;
	shfl.sync.bfly.b32	%r629, %r628, 8, 31, -1;
	selp.b32 	%r546, %r611, %r629, %p203;
	selp.b32 	%r547, %r629, %r613, %p203;
	mov.u32 	%r548, 21520;
	// begin inline asm
	prmt.b32 %r489, %r490, %r491, %r548;
	// end inline asm
	mov.u32 	%r552, 30258;
	// begin inline asm
	prmt.b32 %r493, %r490, %r491, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r497, %r498, %r499, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r501, %r498, %r499, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r505, %r506, %r507, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r509, %r506, %r507, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r513, %r514, %r515, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r514, %r515, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r521, %r522, %r523, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r525, %r522, %r523, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r529, %r530, %r531, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r533, %r530, %r531, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r537, %r538, %r539, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r541, %r538, %r539, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r545, %r546, %r547, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r549, %r546, %r547, %r552;
	// end inline asm
	st.shared.u32 	[%rd8], %r489;
	st.shared.u32 	[%rd9+128], %r493;
	st.shared.u32 	[%rd9+4], %r497;
	st.shared.u32 	[%rd9+132], %r501;
	st.shared.u32 	[%rd10+8324], %r505;
	st.shared.u32 	[%rd11], %r509;
	st.shared.u32 	[%rd12], %r513;
	st.shared.u32 	[%rd13], %r517;
	st.shared.u32 	[%rd10+16648], %r521;
	st.shared.u32 	[%rd14], %r525;
	st.shared.u32 	[%rd15], %r529;
	st.shared.u32 	[%rd16], %r533;
	st.shared.u32 	[%rd10+24972], %r537;
	st.shared.u32 	[%rd17], %r541;
	st.shared.u32 	[%rd18], %r545;
	st.shared.u32 	[%rd19], %r549;
	bar.sync 	0;
	mov.u64 	%rd152, %rd23;
	mov.u64 	%rd153, %rd22;
	mov.u64 	%rd154, %rd21;
	mov.u64 	%rd155, %rd20;
	mov.u32 	%r8004, %r7971;
$L__BB0_84:                             // %L11771
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	or.b32  	%r7814, %r8004, %r189;
	or.b32  	%r7815, %r54, %r7814;
	add.s32 	%r7816, %r7815, %r73;
	and.b32  	%r7817, %r7816, 1;
	neg.s32 	%r7818, %r7817;
	and.b32  	%r7819, %r7818, 1040;
	bfe.u32 	%r7820, %r7816, 6, 2;
	mul.lo.s32 	%r7821, %r7820, 2081;
	bfe.s32 	%r7822, %r7816, 2, 1;
	and.b32  	%r7823, %r7822, 260;
	bfe.s32 	%r7824, %r7816, 4, 1;
	and.b32  	%r7825, %r7824, 65;
	bfe.s32 	%r7826, %r7816, 1, 1;
	and.b32  	%r7827, %r7826, 520;
	bfe.s32 	%r7828, %r7816, 3, 1;
	and.b32  	%r7829, %r7828, 130;
	or.b32  	%r7830, %r7819, %r55;
	or.b32  	%r7831, %r7830, %r56;
	add.s32 	%r7832, %r7831, %r7821;
	add.s32 	%r7833, %r7832, %r7823;
	add.s32 	%r7834, %r7833, %r7825;
	add.s32 	%r7835, %r7834, %r7827;
	add.s32 	%r7836, %r7835, %r7829;
	mul.wide.u32 	%rd91, %r7836, 4;
	add.s64 	%rd93, %rd47, %rd91;
	ld.shared.u32 	%r7837, [%rd93];
	or.b32  	%r7838, %r57, %r7819;
	or.b32  	%r7839, %r7838, %r56;
	add.s32 	%r7840, %r7839, %r7821;
	add.s32 	%r7841, %r7840, %r7823;
	add.s32 	%r7842, %r7841, %r7825;
	add.s32 	%r7843, %r7842, %r7827;
	add.s32 	%r7844, %r7843, %r7829;
	mul.wide.u32 	%rd94, %r7844, 4;
	add.s64 	%rd95, %rd47, %rd94;
	ld.shared.u32 	%r7845, [%rd95];
	add.s32 	%r7846, %r58, %r7819;
	add.s32 	%r7847, %r7846, %r7821;
	add.s32 	%r7848, %r7847, %r7823;
	add.s32 	%r7849, %r7848, %r7825;
	add.s32 	%r7850, %r7849, %r7827;
	add.s32 	%r7851, %r7850, %r7829;
	mul.wide.u32 	%rd96, %r7851, 4;
	add.s64 	%rd97, %rd47, %rd96;
	ld.shared.u32 	%r7852, [%rd97];
	add.s32 	%r7853, %r59, %r7819;
	add.s32 	%r7854, %r7853, %r7821;
	add.s32 	%r7855, %r7854, %r7823;
	add.s32 	%r7856, %r7855, %r7825;
	add.s32 	%r7857, %r7856, %r7827;
	add.s32 	%r7858, %r7857, %r7829;
	mul.wide.u32 	%rd98, %r7858, 4;
	add.s64 	%rd99, %rd47, %rd98;
	ld.shared.u32 	%r7859, [%rd99];
	// begin inline asm
	mov.b32 %r635, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r646, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r634, %r7837, -2004318072;
	mov.u32 	%r633, 983055;
	// begin inline asm
	lop3.b32 %r632, %r633, %r634, %r635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r636, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r637, %r635, %r636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r640, %r632, %r637;
	// end inline asm
	mov.u32 	%r644, 15728880;
	// begin inline asm
	lop3.b32 %r643, %r644, %r634, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r648, %r646, %r647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r651, %r643, %r648;
	// end inline asm
	shr.u32 	%r656, %r634, 8;
	// begin inline asm
	lop3.b32 %r654, %r633, %r656, %r635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r659, %r635, %r658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r662, %r654, %r659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r665, %r644, %r656, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r646, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r692, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r680, %r7845, -2004318072;
	// begin inline asm
	lop3.b32 %r678, %r633, %r680, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r682, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r683, %r681, %r682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r686, %r678, %r683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r689, %r644, %r680, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r693, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r694, %r692, %r693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r697, %r689, %r694;
	// end inline asm
	shr.u32 	%r702, %r680, 8;
	// begin inline asm
	lop3.b32 %r700, %r633, %r702, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r704, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r681, %r704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r708, %r700, %r705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r711, %r644, %r702, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r715, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r692, %r715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r719, %r711, %r716;
	// end inline asm
	// begin inline asm
	mov.b32 %r727, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r738, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r726, %r7852, -2004318072;
	// begin inline asm
	lop3.b32 %r724, %r633, %r726, %r727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r728, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r729, %r727, %r728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r732, %r724, %r729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r735, %r644, %r726, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r739, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r738, %r739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r743, %r735, %r740;
	// end inline asm
	shr.u32 	%r748, %r726, 8;
	// begin inline asm
	lop3.b32 %r746, %r633, %r748, %r727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r750, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r727, %r750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r754, %r746, %r751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r757, %r644, %r748, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r761, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r738, %r761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r765, %r757, %r762;
	// end inline asm
	// begin inline asm
	mov.b32 %r773, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r784, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r772, %r7859, -2004318072;
	// begin inline asm
	lop3.b32 %r770, %r633, %r772, %r773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r774, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r775, %r773, %r774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r778, %r770, %r775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r781, %r644, %r772, %r784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r785, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r786, %r784, %r785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r789, %r781, %r786;
	// end inline asm
	shr.u32 	%r794, %r772, 8;
	// begin inline asm
	lop3.b32 %r792, %r633, %r794, %r773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r796, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r797, %r773, %r796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r800, %r792, %r797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r803, %r644, %r794, %r784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r807, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r808, %r784, %r807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r811, %r803, %r808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r814, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r816, %r814, %r640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r819, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r821, %r819, %r651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r824, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r826, %r824, %r662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r829, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r831, %r829, %r673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r834, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r836, %r834, %r686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r839, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r841, %r839, %r697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r844, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r846, %r844, %r708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r849, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r851, %r849, %r719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r854, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r856, %r854, %r732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r859, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r861, %r859, %r743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r864, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r866, %r864, %r754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r869, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r871, %r869, %r765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r874, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r876, %r874, %r778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r879, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r881, %r879, %r789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r884, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r886, %r884, %r800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r889, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r891, %r889, %r811;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r898, %r7992, -2004318072;
	// begin inline asm
	lop3.b32 %r896, %r633, %r898, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r899, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r907, %r644, %r898, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r910, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	shr.u32 	%r920, %r898, 8;
	// begin inline asm
	lop3.b32 %r918, %r633, %r920, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r899, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r929, %r644, %r920, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r910, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r944, %r7993, -2004318072;
	// begin inline asm
	lop3.b32 %r942, %r633, %r944, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r947, %r945, %r946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r942, %r947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r953, %r644, %r944, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r956, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	shr.u32 	%r966, %r944, 8;
	// begin inline asm
	lop3.b32 %r964, %r633, %r966, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r945, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r975, %r644, %r966, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r956, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r990, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r988, %r633, %r990, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r991, %r992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r988, %r993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r999, %r644, %r990, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r1002, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	shr.u32 	%r1012, %r990, 8;
	// begin inline asm
	lop3.b32 %r1010, %r633, %r1012, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1015, %r991, %r1014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1018, %r1010, %r1015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1021, %r644, %r1012, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1026, %r1002, %r1025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1029, %r1021, %r1026;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1036, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r1034, %r633, %r1036, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1039, %r1037, %r1038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1042, %r1034, %r1039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1045, %r644, %r1036, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1048, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	shr.u32 	%r1058, %r1036, 8;
	// begin inline asm
	lop3.b32 %r1056, %r633, %r1058, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1037, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1067, %r644, %r1058, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1048, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1078, %r207, %r904, %r816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1082, %r207, %r915, %r821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1086, %r207, %r926, %r826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1090, %r207, %r937, %r831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1094, %r207, %r950, %r836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1098, %r207, %r961, %r841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1102, %r207, %r972, %r846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1106, %r207, %r983, %r851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1110, %r207, %r996, %r856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1114, %r207, %r1007, %r861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1118, %r207, %r1018, %r866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1122, %r207, %r1029, %r871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1126, %r207, %r1042, %r876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1130, %r207, %r1053, %r881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1134, %r207, %r1064, %r886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1138, %r207, %r1075, %r891;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1146, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r1144, %r633, %r1146, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1149, %r1147, %r1148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1152, %r1144, %r1149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1155, %r644, %r1146, %r1158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1160, %r1158, %r1159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1163, %r1155, %r1160;
	// end inline asm
	shr.u32 	%r1168, %r1146, 8;
	// begin inline asm
	lop3.b32 %r1166, %r633, %r1168, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1171, %r1147, %r1170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1174, %r1166, %r1171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1177, %r644, %r1168, %r1158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1158, %r1181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1185, %r1177, %r1182;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1192, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r1190, %r633, %r1192, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1194, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1195, %r1193, %r1194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1198, %r1190, %r1195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1201, %r644, %r1192, %r1204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1205, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1206, %r1204, %r1205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1209, %r1201, %r1206;
	// end inline asm
	shr.u32 	%r1214, %r1192, 8;
	// begin inline asm
	lop3.b32 %r1212, %r633, %r1214, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1216, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1217, %r1193, %r1216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1220, %r1212, %r1217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1223, %r644, %r1214, %r1204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1227, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1204, %r1227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1231, %r1223, %r1228;
	// end inline asm
	// begin inline asm
	mov.b32 %r1239, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1250, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1238, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r1236, %r633, %r1238, %r1239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1240, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1241, %r1239, %r1240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1244, %r1236, %r1241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1247, %r644, %r1238, %r1250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1251, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1252, %r1250, %r1251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1255, %r1247, %r1252;
	// end inline asm
	shr.u32 	%r1260, %r1238, 8;
	// begin inline asm
	lop3.b32 %r1258, %r633, %r1260, %r1239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1262, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1263, %r1239, %r1262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1266, %r1258, %r1263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1269, %r644, %r1260, %r1250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1273, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1274, %r1250, %r1273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1277, %r1269, %r1274;
	// end inline asm
	// begin inline asm
	mov.b32 %r1285, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1296, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1284, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r1282, %r633, %r1284, %r1285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1286, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1287, %r1285, %r1286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1290, %r1282, %r1287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1293, %r644, %r1284, %r1296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1297, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1298, %r1296, %r1297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1301, %r1293, %r1298;
	// end inline asm
	shr.u32 	%r1306, %r1284, 8;
	// begin inline asm
	lop3.b32 %r1304, %r633, %r1306, %r1285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1308, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1309, %r1285, %r1308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1312, %r1304, %r1309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1315, %r644, %r1306, %r1296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1319, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1320, %r1296, %r1319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1323, %r1315, %r1320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1328, %r1326, %r1152, %r1078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r1332, %r1163, %r1082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1340, %r1338, %r1174, %r1086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1346, %r1344, %r1185, %r1090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1352, %r1350, %r1198, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1358, %r1356, %r1209, %r1098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1364, %r1362, %r1220, %r1102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1368, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1370, %r1368, %r1231, %r1106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1374, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1376, %r1374, %r1244, %r1110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1382, %r1380, %r1255, %r1114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1386, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1388, %r1386, %r1266, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1392, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1394, %r1392, %r1277, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1398, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1400, %r1398, %r1290, %r1126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1404, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1406, %r1404, %r1301, %r1130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1410, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1412, %r1410, %r1312, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1416, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1418, %r1416, %r1323, %r1138;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1426, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r1424, %r633, %r1426, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1428, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1427, %r1428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1432, %r1424, %r1429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1435, %r644, %r1426, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1438, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	shr.u32 	%r1448, %r1426, 8;
	// begin inline asm
	lop3.b32 %r1446, %r633, %r1448, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1427, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1457, %r644, %r1448, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1438, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1472, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r1470, %r633, %r1472, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1473, %r1474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1478, %r1470, %r1475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1481, %r644, %r1472, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1484, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	shr.u32 	%r1494, %r1472, 8;
	// begin inline asm
	lop3.b32 %r1492, %r633, %r1494, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1473, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1503, %r644, %r1494, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1484, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1518, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r1516, %r633, %r1518, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1520, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1519, %r1520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1524, %r1516, %r1521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1527, %r644, %r1518, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1530, %r1531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1535, %r1527, %r1532;
	// end inline asm
	shr.u32 	%r1540, %r1518, 8;
	// begin inline asm
	lop3.b32 %r1538, %r633, %r1540, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1519, %r1542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1546, %r1538, %r1543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1549, %r644, %r1540, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1554, %r1530, %r1553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1557, %r1549, %r1554;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1564, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r1562, %r633, %r1564, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1566, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1567, %r1565, %r1566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1570, %r1562, %r1567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1573, %r644, %r1564, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1578, %r1576, %r1577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1581, %r1573, %r1578;
	// end inline asm
	shr.u32 	%r1586, %r1564, 8;
	// begin inline asm
	lop3.b32 %r1584, %r633, %r1586, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1589, %r1565, %r1588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1592, %r1584, %r1589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1595, %r644, %r1586, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1576, %r1599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1603, %r1595, %r1600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1677, %r243, %r1432, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1674, %r243, %r1443, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1686, %r243, %r1454, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1683, %r243, %r1465, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r243, %r1478, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r243, %r1489, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r243, %r1500, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1701, %r243, %r1511, %r1370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1713, %r243, %r1524, %r1376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r243, %r1535, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r243, %r1546, %r1388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r243, %r1557, %r1394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r243, %r1570, %r1400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r243, %r1581, %r1406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r243, %r1592, %r1412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r243, %r1603, %r1418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1670, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1672, %r1670, %r1674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1675, %r264, %r1677, %r1672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1679, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1681, %r1679, %r1683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1684, %r264, %r1686, %r1681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1688, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1690, %r1688, %r1692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1693, %r264, %r1695, %r1690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1697, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1699, %r1697, %r1701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r264, %r1704, %r1699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1706, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1708, %r1706, %r1710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1711, %r264, %r1713, %r1708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1715, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1717, %r1715, %r1719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r264, %r1722, %r1717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1724, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1726, %r1724, %r1728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1729, %r264, %r1731, %r1726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1733, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1735, %r1733, %r1737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r264, %r1740, %r1735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1742, %r267, %r1677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1745, %r264, %r1674, %r1742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1749, %r267, %r1686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r264, %r1683, %r1749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1756, %r267, %r1695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r264, %r1692, %r1756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1763, %r267, %r1704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r264, %r1701, %r1763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1770, %r267, %r1713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1773, %r264, %r1710, %r1770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1777, %r267, %r1722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r264, %r1719, %r1777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1784, %r267, %r1731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r264, %r1728, %r1784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1791, %r267, %r1740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r264, %r1737, %r1791;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1885, %r1882}, {%r323, %r329, %r326, %r332}, {%r1675, %r1745}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1894, %r1891}, {%r323, %r329, %r326, %r332}, {%r1684, %r1752}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1903, %r1900}, {%r323, %r329, %r326, %r332}, {%r1693, %r1759}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1912, %r1909}, {%r323, %r329, %r326, %r332}, {%r1702, %r1766}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1921, %r1918}, {%r323, %r329, %r326, %r332}, {%r1711, %r1773}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1930, %r1927}, {%r323, %r329, %r326, %r332}, {%r1720, %r1780}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1939, %r1936}, {%r323, %r329, %r326, %r332}, {%r1729, %r1787}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1948, %r1945}, {%r323, %r329, %r326, %r332}, {%r1738, %r1794}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1878, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1880, %r1878, %r1882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r367, %r1885, %r1880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1887, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1889, %r1887, %r1891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1892, %r367, %r1894, %r1889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1896, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1898, %r1896, %r1900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1901, %r367, %r1903, %r1898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1905, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1907, %r1905, %r1909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r367, %r1912, %r1907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1914, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1916, %r1914, %r1918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1919, %r367, %r1921, %r1916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1923, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1925, %r1923, %r1927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1928, %r367, %r1930, %r1925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1932, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1934, %r1932, %r1936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1937, %r367, %r1939, %r1934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1941, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1943, %r1941, %r1945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1946, %r367, %r1948, %r1943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1950, %r370, %r1885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1953, %r367, %r1882, %r1950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1957, %r370, %r1894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1960, %r367, %r1891, %r1957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1964, %r370, %r1903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1967, %r367, %r1900, %r1964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1971, %r370, %r1912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1974, %r367, %r1909, %r1971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1978, %r370, %r1921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1981, %r367, %r1918, %r1978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1985, %r370, %r1930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1988, %r367, %r1927, %r1985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1992, %r370, %r1939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1995, %r367, %r1936, %r1992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1999, %r370, %r1948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2002, %r367, %r1945, %r1999;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2006, %r2007}, {%r401, %r407, %r404, %r410}, {%r1883, %r1953}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2016, %r2017}, {%r401, %r407, %r404, %r410}, {%r1892, %r1960}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2026, %r2027}, {%r401, %r407, %r404, %r410}, {%r1901, %r1967}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2036, %r2037}, {%r401, %r407, %r404, %r410}, {%r1910, %r1974}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2046, %r2047}, {%r401, %r407, %r404, %r410}, {%r1919, %r1981}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2056, %r2057}, {%r401, %r407, %r404, %r410}, {%r1928, %r1988}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2066, %r2067}, {%r401, %r407, %r404, %r410}, {%r1937, %r1995}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2076, %r2077}, {%r401, %r407, %r404, %r410}, {%r1946, %r2002}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2086, %r109, %r2006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2089, %r109, %r2007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2092, %r109, %r2016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2095, %r109, %r2017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2098, %r109, %r2026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2101, %r109, %r2027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2104, %r109, %r2036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2107, %r109, %r2037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2110, %r109, %r2046;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2113, %r109, %r2047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2116, %r109, %r2056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2119, %r109, %r2057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2122, %r109, %r2066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2125, %r109, %r2067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2128, %r109, %r2076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2131, %r109, %r2077;
	// end inline asm
	mov.u16 	%rs205, -14592;
	// begin inline asm
	mov.b32 %r2134, {%rs205, %rs205};
	// end inline asm
	mov.u16 	%rs207, 18176;
	// begin inline asm
	mov.b32 %r2135, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2136, %r2086, %r2134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2139, %r2136, %r2135;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2144, %r2089, %r2142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2147, %r2144, %r2143;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2152, %r2092, %r2150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2155, %r2152, %r2151;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2160, %r2095, %r2158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2163, %r2160, %r2159;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2168, %r2098, %r2166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2171, %r2168, %r2167;
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2176, %r2101, %r2174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2179, %r2176, %r2175;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2184, %r2104, %r2182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2187, %r2184, %r2183;
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2192, %r2107, %r2190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2195, %r2192, %r2191;
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2200, %r2110, %r2198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2203, %r2200, %r2199;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2208, %r2113, %r2206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2211, %r2208, %r2207;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2216, %r2116, %r2214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2219, %r2216, %r2215;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2224, %r2119, %r2222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2227, %r2224, %r2223;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2231, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2232, %r2122, %r2230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2235, %r2232, %r2231;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2239, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2240, %r2125, %r2238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2243, %r2240, %r2239;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2247, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2248, %r2128, %r2246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2251, %r2248, %r2247;
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2255, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2256, %r2131, %r2254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2259, %r2256, %r2255;
	// end inline asm
	// begin inline asm
	mov.b32 %r2265, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2263, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2264, %r2265, %r2263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2267, %r2139, %r2264;
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2265, %r2270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2274, %r2147, %r2271;
	// end inline asm
	// begin inline asm
	mov.b32 %r2277, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2278, %r2265, %r2277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2281, %r2155, %r2278;
	// end inline asm
	// begin inline asm
	mov.b32 %r2284, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2265, %r2284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2288, %r2163, %r2285;
	// end inline asm
	mov.u32 	%r2294, 25152;
	// begin inline asm
	prmt.b32 %r2291, %r2267, %r2281, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2295, %r2274, %r2288, %r2294;
	// end inline asm
	shl.b32 	%r2302, %r2295, 4;
	mov.u32 	%r2300, 252645135;
	// begin inline asm
	lop3.b32 %r2299, %r2300, %r2291, %r2302, 202;
	// end inline asm
	xor.b32  	%r7860, %r2299, -2004318072;
	// begin inline asm
	mov.b32 %r2306, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2305, %r2306, %r2304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2308, %r2171, %r2305;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2306, %r2311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2315, %r2179, %r2312;
	// end inline asm
	// begin inline asm
	mov.b32 %r2318, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2319, %r2306, %r2318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2322, %r2187, %r2319;
	// end inline asm
	// begin inline asm
	mov.b32 %r2325, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2326, %r2306, %r2325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2329, %r2195, %r2326;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2332, %r2308, %r2322, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2336, %r2315, %r2329, %r2294;
	// end inline asm
	shl.b32 	%r2343, %r2336, 4;
	// begin inline asm
	lop3.b32 %r2340, %r2300, %r2332, %r2343, 202;
	// end inline asm
	xor.b32  	%r7861, %r2340, -2004318072;
	// begin inline asm
	mov.b32 %r2347, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2345, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2346, %r2347, %r2345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2349, %r2203, %r2346;
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2353, %r2347, %r2352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2356, %r2211, %r2353;
	// end inline asm
	// begin inline asm
	mov.b32 %r2359, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2360, %r2347, %r2359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2363, %r2219, %r2360;
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2347, %r2366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2370, %r2227, %r2367;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2373, %r2349, %r2363, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2377, %r2356, %r2370, %r2294;
	// end inline asm
	shl.b32 	%r2384, %r2377, 4;
	// begin inline asm
	lop3.b32 %r2381, %r2300, %r2373, %r2384, 202;
	// end inline asm
	xor.b32  	%r7862, %r2381, -2004318072;
	// begin inline asm
	mov.b32 %r2388, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2386, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2387, %r2388, %r2386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2390, %r2235, %r2387;
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2394, %r2388, %r2393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2243, %r2394;
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2388, %r2400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2404, %r2251, %r2401;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2388, %r2407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2259, %r2408;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2414, %r2390, %r2404, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2418, %r2397, %r2411, %r2294;
	// end inline asm
	shl.b32 	%r2425, %r2418, 4;
	// begin inline asm
	lop3.b32 %r2422, %r2300, %r2414, %r2425, 202;
	// end inline asm
	xor.b32  	%r7863, %r2422, -2004318072;
	st.shared.u32 	[%rd152], %r7860;
	st.shared.u32 	[%rd153], %r7861;
	st.shared.u32 	[%rd154], %r7862;
	st.shared.u32 	[%rd155], %r7863;
	ld.shared.u32 	%r7992, [%rd93];
	ld.shared.u32 	%r7993, [%rd95];
	ld.shared.u32 	%r7994, [%rd97];
	ld.shared.u32 	%r7995, [%rd99];
	// begin inline asm
	mov.b32 %r2431, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2430, %r7992, -2004318072;
	// begin inline asm
	lop3.b32 %r2428, %r633, %r2430, %r2431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2433, %r2431, %r2432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2436, %r2428, %r2433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2439, %r644, %r2430, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2444, %r2442, %r2443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2447, %r2439, %r2444;
	// end inline asm
	shr.u32 	%r2452, %r2430, 8;
	// begin inline asm
	lop3.b32 %r2450, %r633, %r2452, %r2431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2455, %r2431, %r2454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2458, %r2450, %r2455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2461, %r644, %r2452, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2442, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2476, %r7993, -2004318072;
	// begin inline asm
	lop3.b32 %r2474, %r633, %r2476, %r2477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2478, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2479, %r2477, %r2478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2482, %r2474, %r2479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2485, %r644, %r2476, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2490, %r2488, %r2489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2493, %r2485, %r2490;
	// end inline asm
	shr.u32 	%r2498, %r2476, 8;
	// begin inline asm
	lop3.b32 %r2496, %r633, %r2498, %r2477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2501, %r2477, %r2500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2504, %r2496, %r2501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2507, %r644, %r2498, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2488, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2522, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r2520, %r633, %r2522, %r2523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2524, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2525, %r2523, %r2524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2528, %r2520, %r2525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2531, %r644, %r2522, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2536, %r2534, %r2535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2539, %r2531, %r2536;
	// end inline asm
	shr.u32 	%r2544, %r2522, 8;
	// begin inline asm
	lop3.b32 %r2542, %r633, %r2544, %r2523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2547, %r2523, %r2546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2550, %r2542, %r2547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2553, %r644, %r2544, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2558, %r2534, %r2557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2561, %r2553, %r2558;
	// end inline asm
	// begin inline asm
	mov.b32 %r2569, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2568, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r2566, %r633, %r2568, %r2569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2570, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2571, %r2569, %r2570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2574, %r2566, %r2571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2577, %r644, %r2568, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2582, %r2580, %r2581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2585, %r2577, %r2582;
	// end inline asm
	shr.u32 	%r2590, %r2568, 8;
	// begin inline asm
	lop3.b32 %r2588, %r633, %r2590, %r2569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2593, %r2569, %r2592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2596, %r2588, %r2593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2599, %r644, %r2590, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2580, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2610, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2612, %r2610, %r2436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2615, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2617, %r2615, %r2447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2620, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2622, %r2620, %r2458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2625, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2627, %r2625, %r2469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2630, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2632, %r2630, %r2482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2635, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2637, %r2635, %r2493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2640, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2642, %r2640, %r2504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2645, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2647, %r2645, %r2515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2650, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2652, %r2650, %r2528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2655, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2657, %r2655, %r2539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2660, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2662, %r2660, %r2550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2665, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2667, %r2665, %r2561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2670, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2672, %r2670, %r2574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2675, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2677, %r2675, %r2585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2680, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2682, %r2680, %r2596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2685, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2687, %r2685, %r2607;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2692, %r633, %r1146, %r2695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2696, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2697, %r2695, %r2696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2700, %r2692, %r2697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2703, %r644, %r1146, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2708, %r2706, %r2707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2711, %r2703, %r2708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2714, %r633, %r1168, %r2695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2719, %r2695, %r2718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2722, %r2714, %r2719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2725, %r644, %r1168, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2706, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2738, %r633, %r1192, %r2741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2742, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2743, %r2741, %r2742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2746, %r2738, %r2743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2749, %r644, %r1192, %r2752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2753, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2754, %r2752, %r2753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2757, %r2749, %r2754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2760, %r633, %r1214, %r2741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2764, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2765, %r2741, %r2764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2768, %r2760, %r2765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2771, %r644, %r1214, %r2752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2776, %r2752, %r2775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2779, %r2771, %r2776;
	// end inline asm
	// begin inline asm
	mov.b32 %r2787, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2798, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2784, %r633, %r1238, %r2787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2788, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2789, %r2787, %r2788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2792, %r2784, %r2789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2795, %r644, %r1238, %r2798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2799, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2800, %r2798, %r2799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2803, %r2795, %r2800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2806, %r633, %r1260, %r2787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2810, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2811, %r2787, %r2810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2814, %r2806, %r2811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2817, %r644, %r1260, %r2798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2821, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2822, %r2798, %r2821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2825, %r2817, %r2822;
	// end inline asm
	// begin inline asm
	mov.b32 %r2833, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2844, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2830, %r633, %r1284, %r2833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2834, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2835, %r2833, %r2834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2838, %r2830, %r2835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2841, %r644, %r1284, %r2844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2845, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2846, %r2844, %r2845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2849, %r2841, %r2846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2852, %r633, %r1306, %r2833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2856, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2857, %r2833, %r2856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2860, %r2852, %r2857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2863, %r644, %r1306, %r2844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2867, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2868, %r2844, %r2867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2871, %r2863, %r2868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2874, %r207, %r2700, %r2612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2878, %r207, %r2711, %r2617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2882, %r207, %r2722, %r2622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2886, %r207, %r2733, %r2627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2890, %r207, %r2746, %r2632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2894, %r207, %r2757, %r2637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r207, %r2768, %r2642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2902, %r207, %r2779, %r2647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2906, %r207, %r2792, %r2652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r207, %r2803, %r2657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r207, %r2814, %r2662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r207, %r2825, %r2667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2922, %r207, %r2838, %r2672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r207, %r2849, %r2677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r207, %r2860, %r2682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r207, %r2871, %r2687;
	// end inline asm
	// begin inline asm
	mov.b32 %r2943, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2954, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2940, %r633, %r1426, %r2943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2944, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2945, %r2943, %r2944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2948, %r2940, %r2945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2951, %r644, %r1426, %r2954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2955, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2956, %r2954, %r2955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2959, %r2951, %r2956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2962, %r633, %r1448, %r2943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2966, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2967, %r2943, %r2966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2970, %r2962, %r2967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2973, %r644, %r1448, %r2954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2977, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2978, %r2954, %r2977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2981, %r2973, %r2978;
	// end inline asm
	// begin inline asm
	mov.b32 %r2989, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3000, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2986, %r633, %r1472, %r2989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2990, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2991, %r2989, %r2990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2994, %r2986, %r2991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2997, %r644, %r1472, %r3000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3001, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3002, %r3000, %r3001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3005, %r2997, %r3002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3008, %r633, %r1494, %r2989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3012, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3013, %r2989, %r3012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3016, %r3008, %r3013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3019, %r644, %r1494, %r3000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3023, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3024, %r3000, %r3023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3027, %r3019, %r3024;
	// end inline asm
	// begin inline asm
	mov.b32 %r3035, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3046, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3032, %r633, %r1518, %r3035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3036, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3037, %r3035, %r3036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3040, %r3032, %r3037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3043, %r644, %r1518, %r3046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3047, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3048, %r3046, %r3047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3051, %r3043, %r3048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3054, %r633, %r1540, %r3035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3058, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3059, %r3035, %r3058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3062, %r3054, %r3059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3065, %r644, %r1540, %r3046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3069, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3070, %r3046, %r3069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3073, %r3065, %r3070;
	// end inline asm
	// begin inline asm
	mov.b32 %r3081, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3092, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3078, %r633, %r1564, %r3081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3082, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3083, %r3081, %r3082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3086, %r3078, %r3083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3089, %r644, %r1564, %r3092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3093, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3094, %r3092, %r3093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3097, %r3089, %r3094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3100, %r633, %r1586, %r3081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3104, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3105, %r3081, %r3104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3108, %r3100, %r3105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3111, %r644, %r1586, %r3092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3115, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3116, %r3092, %r3115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3119, %r3111, %r3116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3122, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r3122, %r2948, %r2874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3128, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r3128, %r2959, %r2878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3134, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r3134, %r2970, %r2882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3140, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r3140, %r2981, %r2886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3146, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r3146, %r2994, %r2890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3152, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r3152, %r3005, %r2894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3158, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3160, %r3158, %r3016, %r2898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3164, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3166, %r3164, %r3027, %r2902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3170, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r3170, %r3040, %r2906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3176, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3178, %r3176, %r3051, %r2910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3182, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3184, %r3182, %r3062, %r2914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3188, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3190, %r3188, %r3073, %r2918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3194, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3196, %r3194, %r3086, %r2922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3200, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3202, %r3200, %r3097, %r2926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3206, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3208, %r3206, %r3108, %r2930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3212, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3214, %r3212, %r3119, %r2934;
	// end inline asm
	// begin inline asm
	mov.b32 %r3223, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3234, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3220, %r633, %r634, %r3223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3224, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3225, %r3223, %r3224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3228, %r3220, %r3225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3231, %r644, %r634, %r3234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3235, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3236, %r3234, %r3235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3239, %r3231, %r3236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3242, %r633, %r656, %r3223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3246, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3247, %r3223, %r3246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3250, %r3242, %r3247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3253, %r644, %r656, %r3234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3257, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3258, %r3234, %r3257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3261, %r3253, %r3258;
	// end inline asm
	// begin inline asm
	mov.b32 %r3269, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3280, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3266, %r633, %r680, %r3269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3270, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3271, %r3269, %r3270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3274, %r3266, %r3271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3277, %r644, %r680, %r3280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3281, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3282, %r3280, %r3281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3285, %r3277, %r3282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3288, %r633, %r702, %r3269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3292, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3293, %r3269, %r3292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3296, %r3288, %r3293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3299, %r644, %r702, %r3280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3303, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3304, %r3280, %r3303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3307, %r3299, %r3304;
	// end inline asm
	// begin inline asm
	mov.b32 %r3315, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3326, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3312, %r633, %r726, %r3315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3316, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3317, %r3315, %r3316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3320, %r3312, %r3317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3323, %r644, %r726, %r3326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3327, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3328, %r3326, %r3327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3331, %r3323, %r3328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3334, %r633, %r748, %r3315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3338, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3339, %r3315, %r3338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3342, %r3334, %r3339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3345, %r644, %r748, %r3326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3349, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3350, %r3326, %r3349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3353, %r3345, %r3350;
	// end inline asm
	// begin inline asm
	mov.b32 %r3361, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3372, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3358, %r633, %r772, %r3361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3362, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3363, %r3361, %r3362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3366, %r3358, %r3363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3369, %r644, %r772, %r3372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3373, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3374, %r3372, %r3373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3377, %r3369, %r3374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3380, %r633, %r794, %r3361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3384, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3385, %r3361, %r3384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3388, %r3380, %r3385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3391, %r644, %r794, %r3372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3395, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3396, %r3372, %r3395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3399, %r3391, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r243, %r3228, %r3124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r243, %r3239, %r3130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r243, %r3250, %r3136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r243, %r3261, %r3142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r243, %r3274, %r3148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r243, %r3285, %r3154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r243, %r3296, %r3160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r243, %r3307, %r3166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r243, %r3320, %r3172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r243, %r3331, %r3178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r243, %r3342, %r3184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r243, %r3353, %r3190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r243, %r3366, %r3196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r243, %r3377, %r3202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r243, %r3388, %r3208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r243, %r3399, %r3214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3466, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3468, %r3466, %r3470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3471, %r264, %r3473, %r3468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3475, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r3475, %r3479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r264, %r3482, %r3477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3484, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r3484, %r3488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r264, %r3491, %r3486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3493, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r3493, %r3497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r264, %r3500, %r3495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3502, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r3502, %r3506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r264, %r3509, %r3504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3511, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3513, %r3511, %r3515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3516, %r264, %r3518, %r3513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3520, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r3520, %r3524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r264, %r3527, %r3522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3529, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r3529, %r3533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r264, %r3536, %r3531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r267, %r3473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r264, %r3470, %r3538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3545, %r267, %r3482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r264, %r3479, %r3545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r267, %r3491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r264, %r3488, %r3552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r267, %r3500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r264, %r3497, %r3559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3566, %r267, %r3509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3569, %r264, %r3506, %r3566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3573, %r267, %r3518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3576, %r264, %r3515, %r3573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3580, %r267, %r3527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3583, %r264, %r3524, %r3580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3587, %r267, %r3536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3590, %r264, %r3533, %r3587;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3681, %r3678}, {%r323, %r329, %r326, %r332}, {%r3471, %r3541}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3690, %r3687}, {%r323, %r329, %r326, %r332}, {%r3480, %r3548}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3699, %r3696}, {%r323, %r329, %r326, %r332}, {%r3489, %r3555}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3708, %r3705}, {%r323, %r329, %r326, %r332}, {%r3498, %r3562}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3717, %r3714}, {%r323, %r329, %r326, %r332}, {%r3507, %r3569}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3726, %r3723}, {%r323, %r329, %r326, %r332}, {%r3516, %r3576}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3735, %r3732}, {%r323, %r329, %r326, %r332}, {%r3525, %r3583}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3744, %r3741}, {%r323, %r329, %r326, %r332}, {%r3534, %r3590}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3674, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3676, %r3674, %r3678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3679, %r367, %r3681, %r3676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3683, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3685, %r3683, %r3687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3688, %r367, %r3690, %r3685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3692, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3694, %r3692, %r3696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3697, %r367, %r3699, %r3694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3701, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3703, %r3701, %r3705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3706, %r367, %r3708, %r3703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3710, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3712, %r3710, %r3714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3715, %r367, %r3717, %r3712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3719, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3721, %r3719, %r3723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3724, %r367, %r3726, %r3721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3728, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3730, %r3728, %r3732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3733, %r367, %r3735, %r3730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3737, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3739, %r3737, %r3741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3742, %r367, %r3744, %r3739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3746, %r370, %r3681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3749, %r367, %r3678, %r3746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3753, %r370, %r3690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3756, %r367, %r3687, %r3753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3760, %r370, %r3699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3763, %r367, %r3696, %r3760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3767, %r370, %r3708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3770, %r367, %r3705, %r3767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3774, %r370, %r3717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3777, %r367, %r3714, %r3774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3781, %r370, %r3726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3784, %r367, %r3723, %r3781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3788, %r370, %r3735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3791, %r367, %r3732, %r3788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3795, %r370, %r3744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3798, %r367, %r3741, %r3795;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3802, %r3803}, {%r401, %r407, %r404, %r410}, {%r3679, %r3749}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3812, %r3813}, {%r401, %r407, %r404, %r410}, {%r3688, %r3756}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3822, %r3823}, {%r401, %r407, %r404, %r410}, {%r3697, %r3763}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3832, %r3833}, {%r401, %r407, %r404, %r410}, {%r3706, %r3770}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3842, %r3843}, {%r401, %r407, %r404, %r410}, {%r3715, %r3777}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3852, %r3853}, {%r401, %r407, %r404, %r410}, {%r3724, %r3784}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3863}, {%r401, %r407, %r404, %r410}, {%r3733, %r3791}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3872, %r3873}, {%r401, %r407, %r404, %r410}, {%r3742, %r3798}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3882, %r109, %r3802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3885, %r109, %r3803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3888, %r109, %r3812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3891, %r109, %r3813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3894, %r109, %r3822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3897, %r109, %r3823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3900, %r109, %r3832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3903, %r109, %r3833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3906, %r109, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3909, %r109, %r3843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3912, %r109, %r3852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3915, %r109, %r3853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3918, %r109, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3921, %r109, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3924, %r109, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3927, %r109, %r3873;
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3931, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3932, %r3882, %r3930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3935, %r3932, %r3931;
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3939, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3940, %r3885, %r3938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3943, %r3940, %r3939;
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3948, %r3888, %r3946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3951, %r3948, %r3947;
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3956, %r3891, %r3954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3959, %r3956, %r3955;
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3964, %r3894, %r3962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3967, %r3964, %r3963;
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3972, %r3897, %r3970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3975, %r3972, %r3971;
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3979, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3980, %r3900, %r3978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3983, %r3980, %r3979;
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3987, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3988, %r3903, %r3986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3991, %r3988, %r3987;
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3995, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3996, %r3906, %r3994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3999, %r3996, %r3995;
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4003, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4004, %r3909, %r4002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4007, %r4004, %r4003;
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4011, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4012, %r3912, %r4010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4015, %r4012, %r4011;
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4019, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4020, %r3915, %r4018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4023, %r4020, %r4019;
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4027, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4028, %r3918, %r4026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4031, %r4028, %r4027;
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4035, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4036, %r3921, %r4034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4039, %r4036, %r4035;
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4044, %r3924, %r4042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4047, %r4044, %r4043;
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4052, %r3927, %r4050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4055, %r4052, %r4051;
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4060, %r4061, %r4059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4063, %r3935, %r4060;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4067, %r4061, %r4066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4070, %r3943, %r4067;
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4074, %r4061, %r4073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4077, %r3951, %r4074;
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4081, %r4061, %r4080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4084, %r3959, %r4081;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4087, %r4063, %r4077, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4091, %r4070, %r4084, %r2294;
	// end inline asm
	shl.b32 	%r4098, %r4091, 4;
	// begin inline asm
	lop3.b32 %r4095, %r2300, %r4087, %r4098, 202;
	// end inline asm
	xor.b32  	%r7864, %r4095, -2004318072;
	// begin inline asm
	mov.b32 %r4102, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4101, %r4102, %r4100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4104, %r3967, %r4101;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4108, %r4102, %r4107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4111, %r3975, %r4108;
	// end inline asm
	// begin inline asm
	mov.b32 %r4114, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4115, %r4102, %r4114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4118, %r3983, %r4115;
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4122, %r4102, %r4121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4125, %r3991, %r4122;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4128, %r4104, %r4118, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4132, %r4111, %r4125, %r2294;
	// end inline asm
	shl.b32 	%r4139, %r4132, 4;
	// begin inline asm
	lop3.b32 %r4136, %r2300, %r4128, %r4139, 202;
	// end inline asm
	xor.b32  	%r7865, %r4136, -2004318072;
	// begin inline asm
	mov.b32 %r4143, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4142, %r4143, %r4141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4145, %r3999, %r4142;
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4149, %r4143, %r4148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4152, %r4007, %r4149;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4156, %r4143, %r4155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4159, %r4015, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4163, %r4143, %r4162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4166, %r4023, %r4163;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4169, %r4145, %r4159, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4173, %r4152, %r4166, %r2294;
	// end inline asm
	shl.b32 	%r4180, %r4173, 4;
	// begin inline asm
	lop3.b32 %r4177, %r2300, %r4169, %r4180, 202;
	// end inline asm
	xor.b32  	%r7866, %r4177, -2004318072;
	// begin inline asm
	mov.b32 %r4184, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4183, %r4184, %r4182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4186, %r4031, %r4183;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4190, %r4184, %r4189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4193, %r4039, %r4190;
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4197, %r4184, %r4196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4200, %r4047, %r4197;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4204, %r4184, %r4203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4207, %r4055, %r4204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4210, %r4186, %r4200, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4214, %r4193, %r4207, %r2294;
	// end inline asm
	shl.b32 	%r4221, %r4214, 4;
	// begin inline asm
	lop3.b32 %r4218, %r2300, %r4210, %r4221, 202;
	// end inline asm
	xor.b32  	%r7867, %r4218, -2004318072;
	st.shared.u32 	[%rd152], %r7864;
	st.shared.u32 	[%rd153], %r7865;
	st.shared.u32 	[%rd154], %r7866;
	st.shared.u32 	[%rd155], %r7867;
	ld.shared.u32 	%r7996, [%rd93];
	ld.shared.u32 	%r7997, [%rd95];
	ld.shared.u32 	%r7998, [%rd97];
	ld.shared.u32 	%r7999, [%rd99];
	// begin inline asm
	mov.b32 %r4227, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4226, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r4224, %r633, %r4226, %r4227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4229, %r4227, %r4228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4232, %r4224, %r4229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4235, %r644, %r4226, %r4238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4240, %r4238, %r4239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4243, %r4235, %r4240;
	// end inline asm
	shr.u32 	%r4248, %r4226, 8;
	// begin inline asm
	lop3.b32 %r4246, %r633, %r4248, %r4227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4251, %r4227, %r4250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4254, %r4246, %r4251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4257, %r644, %r4248, %r4238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4262, %r4238, %r4261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4265, %r4257, %r4262;
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4272, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r4270, %r633, %r4272, %r4273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4274, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4275, %r4273, %r4274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4278, %r4270, %r4275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4281, %r644, %r4272, %r4284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4286, %r4284, %r4285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4289, %r4281, %r4286;
	// end inline asm
	shr.u32 	%r4294, %r4272, 8;
	// begin inline asm
	lop3.b32 %r4292, %r633, %r4294, %r4273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4297, %r4273, %r4296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4300, %r4292, %r4297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4303, %r644, %r4294, %r4284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4308, %r4284, %r4307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4311, %r4303, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4318, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r4316, %r633, %r4318, %r4319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4321, %r4319, %r4320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4324, %r4316, %r4321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4327, %r644, %r4318, %r4330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4332, %r4330, %r4331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4335, %r4327, %r4332;
	// end inline asm
	shr.u32 	%r4340, %r4318, 8;
	// begin inline asm
	lop3.b32 %r4338, %r633, %r4340, %r4319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4319, %r4342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4346, %r4338, %r4343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4349, %r644, %r4340, %r4330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4330, %r4353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4357, %r4349, %r4354;
	// end inline asm
	// begin inline asm
	mov.b32 %r4365, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4364, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r4362, %r633, %r4364, %r4365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4367, %r4365, %r4366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4370, %r4362, %r4367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4373, %r644, %r4364, %r4376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4377, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4378, %r4376, %r4377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4381, %r4373, %r4378;
	// end inline asm
	shr.u32 	%r4386, %r4364, 8;
	// begin inline asm
	lop3.b32 %r4384, %r633, %r4386, %r4365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4388, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4365, %r4388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4392, %r4384, %r4389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4395, %r644, %r4386, %r4376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4376, %r4399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4403, %r4395, %r4400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4406, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4408, %r4406, %r4232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4411, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4413, %r4411, %r4243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4416, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4418, %r4416, %r4254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4421, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4423, %r4421, %r4265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4426, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4428, %r4426, %r4278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4431, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4433, %r4431, %r4289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4436, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4438, %r4436, %r4300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4441, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4443, %r4441, %r4311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4446, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4448, %r4446, %r4324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4451, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4453, %r4451, %r4335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4456, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4458, %r4456, %r4346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4461, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4463, %r4461, %r4357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4466, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4468, %r4466, %r4370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4471, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4473, %r4471, %r4381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4476, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4478, %r4476, %r4392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4481, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4483, %r4481, %r4403;
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4488, %r633, %r1426, %r4491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4492, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4491, %r4492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4496, %r4488, %r4493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4499, %r644, %r1426, %r4502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4502, %r4503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4507, %r4499, %r4504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4510, %r633, %r1448, %r4491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4491, %r4514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4518, %r4510, %r4515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4521, %r644, %r1448, %r4502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4525, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4502, %r4525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4529, %r4521, %r4526;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4534, %r633, %r1472, %r4537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4538, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4537, %r4538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4542, %r4534, %r4539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4545, %r644, %r1472, %r4548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4548, %r4549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4553, %r4545, %r4550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4556, %r633, %r1494, %r4537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4537, %r4560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4564, %r4556, %r4561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4567, %r644, %r1494, %r4548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4548, %r4571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4575, %r4567, %r4572;
	// end inline asm
	// begin inline asm
	mov.b32 %r4583, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4594, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4580, %r633, %r1518, %r4583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4584, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4583, %r4584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4588, %r4580, %r4585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4591, %r644, %r1518, %r4594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4595, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4594, %r4595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4599, %r4591, %r4596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4602, %r633, %r1540, %r4583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4583, %r4606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4610, %r4602, %r4607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4613, %r644, %r1540, %r4594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4594, %r4617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4621, %r4613, %r4618;
	// end inline asm
	// begin inline asm
	mov.b32 %r4629, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4626, %r633, %r1564, %r4629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4630, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4631, %r4629, %r4630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4634, %r4626, %r4631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4637, %r644, %r1564, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4640, %r4641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4645, %r4637, %r4642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4648, %r633, %r1586, %r4629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4629, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4659, %r644, %r1586, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4640, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4670, %r207, %r4496, %r4408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4674, %r207, %r4507, %r4413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4678, %r207, %r4518, %r4418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4682, %r207, %r4529, %r4423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4686, %r207, %r4542, %r4428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4690, %r207, %r4553, %r4433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4694, %r207, %r4564, %r4438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4698, %r207, %r4575, %r4443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4702, %r207, %r4588, %r4448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4706, %r207, %r4599, %r4453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4710, %r207, %r4610, %r4458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4714, %r207, %r4621, %r4463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4718, %r207, %r4634, %r4468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4722, %r207, %r4645, %r4473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4726, %r207, %r4656, %r4478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4730, %r207, %r4667, %r4483;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4736, %r633, %r634, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4741, %r4739, %r4740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4744, %r4736, %r4741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4747, %r644, %r634, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4750, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4758, %r633, %r656, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4739, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r644, %r656, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4750, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4782, %r633, %r680, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4787, %r4785, %r4786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4790, %r4782, %r4787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4793, %r644, %r680, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4796, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4804, %r633, %r702, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4785, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r644, %r702, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4796, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	mov.b32 %r4831, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4828, %r633, %r726, %r4831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4833, %r4831, %r4832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4836, %r4828, %r4833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4839, %r644, %r726, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4844, %r4842, %r4843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4847, %r4839, %r4844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4850, %r633, %r748, %r4831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4831, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4861, %r644, %r748, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4842, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	// begin inline asm
	mov.b32 %r4877, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4874, %r633, %r772, %r4877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4879, %r4877, %r4878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4882, %r4874, %r4879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4885, %r644, %r772, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4890, %r4888, %r4889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4893, %r4885, %r4890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4896, %r633, %r794, %r4877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4877, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4907, %r644, %r794, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4888, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4918, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4920, %r4918, %r4744, %r4670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4924, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4926, %r4924, %r4755, %r4674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4930, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4932, %r4930, %r4766, %r4678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4936, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4938, %r4936, %r4777, %r4682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4942, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4944, %r4942, %r4790, %r4686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4948, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4950, %r4948, %r4801, %r4690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4954, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4956, %r4954, %r4812, %r4694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4960, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4962, %r4960, %r4823, %r4698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4966, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4968, %r4966, %r4836, %r4702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4972, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4974, %r4972, %r4847, %r4706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4978, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4980, %r4978, %r4858, %r4710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4984, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4986, %r4984, %r4869, %r4714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4990, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4992, %r4990, %r4882, %r4718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4996, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4998, %r4996, %r4893, %r4722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5002, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5004, %r5002, %r4904, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5008, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5010, %r5008, %r4915, %r4730;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5016, %r633, %r2430, %r5019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5020, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5021, %r5019, %r5020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5024, %r5016, %r5021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5027, %r644, %r2430, %r5030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5031, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5032, %r5030, %r5031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5035, %r5027, %r5032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5038, %r633, %r2452, %r5019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5042, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5043, %r5019, %r5042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5046, %r5038, %r5043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5049, %r644, %r2452, %r5030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5053, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5054, %r5030, %r5053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5057, %r5049, %r5054;
	// end inline asm
	// begin inline asm
	mov.b32 %r5065, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5062, %r633, %r2476, %r5065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5066, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5067, %r5065, %r5066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5070, %r5062, %r5067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5073, %r644, %r2476, %r5076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5077, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5078, %r5076, %r5077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5081, %r5073, %r5078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5084, %r633, %r2498, %r5065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5088, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5089, %r5065, %r5088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5092, %r5084, %r5089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5095, %r644, %r2498, %r5076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5099, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5100, %r5076, %r5099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5103, %r5095, %r5100;
	// end inline asm
	// begin inline asm
	mov.b32 %r5111, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5122, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5108, %r633, %r2522, %r5111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5112, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5113, %r5111, %r5112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5116, %r5108, %r5113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5119, %r644, %r2522, %r5122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5123, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5124, %r5122, %r5123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5127, %r5119, %r5124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5130, %r633, %r2544, %r5111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5134, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5135, %r5111, %r5134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5138, %r5130, %r5135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5141, %r644, %r2544, %r5122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5145, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5146, %r5122, %r5145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5149, %r5141, %r5146;
	// end inline asm
	// begin inline asm
	mov.b32 %r5157, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5168, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5154, %r633, %r2568, %r5157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5158, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5159, %r5157, %r5158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5162, %r5154, %r5159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5165, %r644, %r2568, %r5168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5169, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5170, %r5168, %r5169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5173, %r5165, %r5170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5176, %r633, %r2590, %r5157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5180, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5181, %r5157, %r5180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5184, %r5176, %r5181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5187, %r644, %r2590, %r5168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5191, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5192, %r5168, %r5191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5195, %r5187, %r5192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5269, %r243, %r5024, %r4920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5266, %r243, %r5035, %r4926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5278, %r243, %r5046, %r4932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5275, %r243, %r5057, %r4938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r243, %r5070, %r4944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5284, %r243, %r5081, %r4950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5296, %r243, %r5092, %r4956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5293, %r243, %r5103, %r4962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5305, %r243, %r5116, %r4968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5302, %r243, %r5127, %r4974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5314, %r243, %r5138, %r4980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5311, %r243, %r5149, %r4986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5323, %r243, %r5162, %r4992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5320, %r243, %r5173, %r4998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5332, %r243, %r5184, %r5004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5329, %r243, %r5195, %r5010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5262, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5264, %r5262, %r5266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5267, %r264, %r5269, %r5264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5271, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5273, %r5271, %r5275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5276, %r264, %r5278, %r5273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5280, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5282, %r5280, %r5284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5285, %r264, %r5287, %r5282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5289, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5291, %r5289, %r5293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5294, %r264, %r5296, %r5291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5298, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5300, %r5298, %r5302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5303, %r264, %r5305, %r5300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5307, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5309, %r5307, %r5311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5312, %r264, %r5314, %r5309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5316, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5318, %r5316, %r5320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5321, %r264, %r5323, %r5318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5325, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5327, %r5325, %r5329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5330, %r264, %r5332, %r5327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5334, %r267, %r5269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5337, %r264, %r5266, %r5334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5341, %r267, %r5278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5344, %r264, %r5275, %r5341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5348, %r267, %r5287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5351, %r264, %r5284, %r5348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5355, %r267, %r5296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5358, %r264, %r5293, %r5355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5362, %r267, %r5305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5365, %r264, %r5302, %r5362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5369, %r267, %r5314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5372, %r264, %r5311, %r5369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5376, %r267, %r5323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5379, %r264, %r5320, %r5376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5383, %r267, %r5332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5386, %r264, %r5329, %r5383;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5477, %r5474}, {%r323, %r329, %r326, %r332}, {%r5267, %r5337}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5486, %r5483}, {%r323, %r329, %r326, %r332}, {%r5276, %r5344}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5495, %r5492}, {%r323, %r329, %r326, %r332}, {%r5285, %r5351}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5504, %r5501}, {%r323, %r329, %r326, %r332}, {%r5294, %r5358}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5513, %r5510}, {%r323, %r329, %r326, %r332}, {%r5303, %r5365}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5522, %r5519}, {%r323, %r329, %r326, %r332}, {%r5312, %r5372}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5531, %r5528}, {%r323, %r329, %r326, %r332}, {%r5321, %r5379}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5540, %r5537}, {%r323, %r329, %r326, %r332}, {%r5330, %r5386}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5470, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5472, %r5470, %r5474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5475, %r367, %r5477, %r5472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5479, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5481, %r5479, %r5483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5484, %r367, %r5486, %r5481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5488, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5490, %r5488, %r5492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5493, %r367, %r5495, %r5490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5497, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5499, %r5497, %r5501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5502, %r367, %r5504, %r5499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5506, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5508, %r5506, %r5510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5511, %r367, %r5513, %r5508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5515, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5517, %r5515, %r5519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5520, %r367, %r5522, %r5517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5524, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5526, %r5524, %r5528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5529, %r367, %r5531, %r5526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5533, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5535, %r5533, %r5537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5538, %r367, %r5540, %r5535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5542, %r370, %r5477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5545, %r367, %r5474, %r5542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5549, %r370, %r5486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r367, %r5483, %r5549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5556, %r370, %r5495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r367, %r5492, %r5556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5563, %r370, %r5504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r367, %r5501, %r5563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5570, %r370, %r5513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5573, %r367, %r5510, %r5570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5577, %r370, %r5522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r367, %r5519, %r5577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5584, %r370, %r5531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r367, %r5528, %r5584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5591, %r370, %r5540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r367, %r5537, %r5591;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5598, %r5599}, {%r401, %r407, %r404, %r410}, {%r5475, %r5545}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5608, %r5609}, {%r401, %r407, %r404, %r410}, {%r5484, %r5552}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5618, %r5619}, {%r401, %r407, %r404, %r410}, {%r5493, %r5559}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5628, %r5629}, {%r401, %r407, %r404, %r410}, {%r5502, %r5566}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5638, %r5639}, {%r401, %r407, %r404, %r410}, {%r5511, %r5573}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5648, %r5649}, {%r401, %r407, %r404, %r410}, {%r5520, %r5580}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5658, %r5659}, {%r401, %r407, %r404, %r410}, {%r5529, %r5587}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5668, %r5669}, {%r401, %r407, %r404, %r410}, {%r5538, %r5594}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5678, %r109, %r5598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5681, %r109, %r5599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5684, %r109, %r5608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5687, %r109, %r5609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5690, %r109, %r5618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5693, %r109, %r5619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5696, %r109, %r5628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5699, %r109, %r5629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5702, %r109, %r5638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5705, %r109, %r5639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5708, %r109, %r5648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5711, %r109, %r5649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5714, %r109, %r5658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5717, %r109, %r5659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5720, %r109, %r5668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5723, %r109, %r5669;
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5728, %r5678, %r5726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5731, %r5728, %r5727;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5736, %r5681, %r5734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5739, %r5736, %r5735;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5744, %r5684, %r5742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5747, %r5744, %r5743;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5752, %r5687, %r5750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5755, %r5752, %r5751;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5760, %r5690, %r5758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5763, %r5760, %r5759;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5768, %r5693, %r5766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5771, %r5768, %r5767;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5776, %r5696, %r5774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5779, %r5776, %r5775;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5784, %r5699, %r5782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5787, %r5784, %r5783;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5792, %r5702, %r5790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5795, %r5792, %r5791;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5800, %r5705, %r5798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5803, %r5800, %r5799;
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5808, %r5708, %r5806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5811, %r5808, %r5807;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5816, %r5711, %r5814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5819, %r5816, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5824, %r5714, %r5822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5827, %r5824, %r5823;
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5832, %r5717, %r5830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5835, %r5832, %r5831;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5840, %r5720, %r5838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5843, %r5840, %r5839;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5848, %r5723, %r5846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5851, %r5848, %r5847;
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5857, %r5855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5731, %r5856;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5857, %r5862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5739, %r5863;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5857, %r5869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5873, %r5747, %r5870;
	// end inline asm
	// begin inline asm
	mov.b32 %r5876, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5857, %r5876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5880, %r5755, %r5877;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5883, %r5859, %r5873, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5887, %r5866, %r5880, %r2294;
	// end inline asm
	shl.b32 	%r5894, %r5887, 4;
	// begin inline asm
	lop3.b32 %r5891, %r2300, %r5883, %r5894, 202;
	// end inline asm
	xor.b32  	%r7868, %r5891, -2004318072;
	// begin inline asm
	mov.b32 %r5898, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5898, %r5896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5763, %r5897;
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5898, %r5903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5771, %r5904;
	// end inline asm
	// begin inline asm
	mov.b32 %r5910, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5898, %r5910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5779, %r5911;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5898, %r5917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5787, %r5918;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5924, %r5900, %r5914, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5928, %r5907, %r5921, %r2294;
	// end inline asm
	shl.b32 	%r5935, %r5928, 4;
	// begin inline asm
	lop3.b32 %r5932, %r2300, %r5924, %r5935, 202;
	// end inline asm
	xor.b32  	%r7869, %r5932, -2004318072;
	// begin inline asm
	mov.b32 %r5939, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5938, %r5939, %r5937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5941, %r5795, %r5938;
	// end inline asm
	// begin inline asm
	mov.b32 %r5944, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5945, %r5939, %r5944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5948, %r5803, %r5945;
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5939, %r5951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5811, %r5952;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5939, %r5958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5962, %r5819, %r5959;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5965, %r5941, %r5955, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5969, %r5948, %r5962, %r2294;
	// end inline asm
	shl.b32 	%r5976, %r5969, 4;
	// begin inline asm
	lop3.b32 %r5973, %r2300, %r5965, %r5976, 202;
	// end inline asm
	xor.b32  	%r7870, %r5973, -2004318072;
	// begin inline asm
	mov.b32 %r5980, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5978, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5979, %r5980, %r5978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5982, %r5827, %r5979;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5980, %r5985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5989, %r5835, %r5986;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5980, %r5992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5996, %r5843, %r5993;
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5980, %r5999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6003, %r5851, %r6000;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6006, %r5982, %r5996, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6010, %r5989, %r6003, %r2294;
	// end inline asm
	shl.b32 	%r6017, %r6010, 4;
	// begin inline asm
	lop3.b32 %r6014, %r2300, %r6006, %r6017, 202;
	// end inline asm
	xor.b32  	%r7871, %r6014, -2004318072;
	st.shared.u32 	[%rd152], %r7868;
	st.shared.u32 	[%rd153], %r7869;
	st.shared.u32 	[%rd154], %r7870;
	st.shared.u32 	[%rd155], %r7871;
	ld.shared.u32 	%r8000, [%rd93];
	ld.shared.u32 	%r8001, [%rd95];
	ld.shared.u32 	%r8002, [%rd97];
	ld.shared.u32 	%r8003, [%rd99];
	// begin inline asm
	mov.b32 %r6023, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6022, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r6020, %r633, %r6022, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6024, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6025, %r6023, %r6024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6028, %r6020, %r6025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6031, %r644, %r6022, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6035, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6036, %r6034, %r6035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6039, %r6031, %r6036;
	// end inline asm
	shr.u32 	%r6044, %r6022, 8;
	// begin inline asm
	lop3.b32 %r6042, %r633, %r6044, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6047, %r6023, %r6046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6050, %r6042, %r6047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6053, %r644, %r6044, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6058, %r6034, %r6057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6061, %r6053, %r6058;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6068, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r6066, %r633, %r6068, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6070, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6071, %r6069, %r6070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6074, %r6066, %r6071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6077, %r644, %r6068, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6081, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6082, %r6080, %r6081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6085, %r6077, %r6082;
	// end inline asm
	shr.u32 	%r6090, %r6068, 8;
	// begin inline asm
	lop3.b32 %r6088, %r633, %r6090, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6092, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6093, %r6069, %r6092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6096, %r6088, %r6093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6099, %r644, %r6090, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6103, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6104, %r6080, %r6103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6107, %r6099, %r6104;
	// end inline asm
	// begin inline asm
	mov.b32 %r6115, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6126, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6114, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r6112, %r633, %r6114, %r6115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6116, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6117, %r6115, %r6116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6120, %r6112, %r6117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6123, %r644, %r6114, %r6126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6127, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6128, %r6126, %r6127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6131, %r6123, %r6128;
	// end inline asm
	shr.u32 	%r6136, %r6114, 8;
	// begin inline asm
	lop3.b32 %r6134, %r633, %r6136, %r6115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6138, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6139, %r6115, %r6138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6142, %r6134, %r6139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6145, %r644, %r6136, %r6126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6149, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6150, %r6126, %r6149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6153, %r6145, %r6150;
	// end inline asm
	// begin inline asm
	mov.b32 %r6161, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6172, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6160, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r6158, %r633, %r6160, %r6161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6162, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6163, %r6161, %r6162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6166, %r6158, %r6163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6169, %r644, %r6160, %r6172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6173, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6174, %r6172, %r6173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6177, %r6169, %r6174;
	// end inline asm
	shr.u32 	%r6182, %r6160, 8;
	// begin inline asm
	lop3.b32 %r6180, %r633, %r6182, %r6161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6184, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6185, %r6161, %r6184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6188, %r6180, %r6185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6191, %r644, %r6182, %r6172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6195, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6196, %r6172, %r6195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6199, %r6191, %r6196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6204, %r6202, %r6028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6209, %r6207, %r6039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6214, %r6212, %r6050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6217, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6219, %r6217, %r6061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6222, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6224, %r6222, %r6074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6227, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6229, %r6227, %r6085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6232, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6234, %r6232, %r6096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6237, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6239, %r6237, %r6107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6244, %r6242, %r6120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6247, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6249, %r6247, %r6131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6252, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6254, %r6252, %r6142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6257, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6259, %r6257, %r6153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6262, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6264, %r6262, %r6166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6267, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6269, %r6267, %r6177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6272, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6274, %r6272, %r6188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6277, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6279, %r6277, %r6199;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6284, %r633, %r634, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6288, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6289, %r6287, %r6288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6292, %r6284, %r6289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6295, %r644, %r634, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6300, %r6298, %r6299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6303, %r6295, %r6300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6306, %r633, %r656, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6311, %r6287, %r6310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6314, %r6306, %r6311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r644, %r656, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6298, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6330, %r633, %r680, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6335, %r6333, %r6334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6338, %r6330, %r6335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6341, %r644, %r680, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6346, %r6344, %r6345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6349, %r6341, %r6346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r633, %r702, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6333, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r644, %r702, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6344, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6390, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6376, %r633, %r726, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6380, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6381, %r6379, %r6380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6384, %r6376, %r6381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6387, %r644, %r726, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6392, %r6390, %r6391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6395, %r6387, %r6392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6398, %r633, %r748, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6403, %r6379, %r6402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6406, %r6398, %r6403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6409, %r644, %r748, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6414, %r6390, %r6413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6417, %r6409, %r6414;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6422, %r633, %r772, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6426, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6427, %r6425, %r6426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6430, %r6422, %r6427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6433, %r644, %r772, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6438, %r6436, %r6437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6441, %r6433, %r6438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r633, %r794, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6425, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r644, %r794, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6436, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6466, %r207, %r6292, %r6204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6470, %r207, %r6303, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6474, %r207, %r6314, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6478, %r207, %r6325, %r6219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6482, %r207, %r6338, %r6224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6486, %r207, %r6349, %r6229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6490, %r207, %r6360, %r6234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6494, %r207, %r6371, %r6239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6498, %r207, %r6384, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6502, %r207, %r6395, %r6249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6506, %r207, %r6406, %r6254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6510, %r207, %r6417, %r6259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6514, %r207, %r6430, %r6264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6518, %r207, %r6441, %r6269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6522, %r207, %r6452, %r6274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6526, %r207, %r6463, %r6279;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r633, %r2430, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6535, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r644, %r2430, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6546, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r633, %r2452, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6535, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6565, %r644, %r2452, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6569, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6570, %r6546, %r6569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6573, %r6565, %r6570;
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6578, %r633, %r2476, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6582, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6583, %r6581, %r6582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6586, %r6578, %r6583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6589, %r644, %r2476, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6593, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6594, %r6592, %r6593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6597, %r6589, %r6594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6600, %r633, %r2498, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6604, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6605, %r6581, %r6604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6608, %r6600, %r6605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6611, %r644, %r2498, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6615, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6616, %r6592, %r6615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6619, %r6611, %r6616;
	// end inline asm
	// begin inline asm
	mov.b32 %r6627, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6638, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6624, %r633, %r2522, %r6627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6628, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6629, %r6627, %r6628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6632, %r6624, %r6629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6635, %r644, %r2522, %r6638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6639, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6640, %r6638, %r6639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6643, %r6635, %r6640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6646, %r633, %r2544, %r6627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6650, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6651, %r6627, %r6650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6654, %r6646, %r6651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6657, %r644, %r2544, %r6638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6661, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6662, %r6638, %r6661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6665, %r6657, %r6662;
	// end inline asm
	// begin inline asm
	mov.b32 %r6673, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6684, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6670, %r633, %r2568, %r6673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6674, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6675, %r6673, %r6674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6678, %r6670, %r6675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6681, %r644, %r2568, %r6684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6685, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6686, %r6684, %r6685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6689, %r6681, %r6686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6692, %r633, %r2590, %r6673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6696, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6697, %r6673, %r6696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6700, %r6692, %r6697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6703, %r644, %r2590, %r6684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6707, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6708, %r6684, %r6707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6711, %r6703, %r6708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6714, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r6714, %r6540, %r6466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6720, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r6720, %r6551, %r6470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6726, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r6726, %r6562, %r6474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6732, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r6732, %r6573, %r6478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6738, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r6738, %r6586, %r6482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6744, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r6744, %r6597, %r6486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6750, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r6750, %r6608, %r6490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6756, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r6756, %r6619, %r6494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6762, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r6762, %r6632, %r6498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r6768, %r6643, %r6502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6774, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r6774, %r6654, %r6506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6780, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r6780, %r6665, %r6510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r6786, %r6678, %r6514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6792, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r6792, %r6689, %r6518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r6798, %r6700, %r6522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r6804, %r6711, %r6526;
	// end inline asm
	// begin inline asm
	mov.b32 %r6815, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6826, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6812, %r633, %r4226, %r6815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6816, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6817, %r6815, %r6816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6820, %r6812, %r6817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6823, %r644, %r4226, %r6826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6827, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6828, %r6826, %r6827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6831, %r6823, %r6828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6834, %r633, %r4248, %r6815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6838, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6839, %r6815, %r6838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6842, %r6834, %r6839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6845, %r644, %r4248, %r6826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6849, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6850, %r6826, %r6849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6853, %r6845, %r6850;
	// end inline asm
	// begin inline asm
	mov.b32 %r6861, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6872, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6858, %r633, %r4272, %r6861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6862, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6863, %r6861, %r6862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6866, %r6858, %r6863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6869, %r644, %r4272, %r6872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6873, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6874, %r6872, %r6873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6877, %r6869, %r6874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6880, %r633, %r4294, %r6861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6884, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6885, %r6861, %r6884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6888, %r6880, %r6885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6891, %r644, %r4294, %r6872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6895, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6896, %r6872, %r6895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6899, %r6891, %r6896;
	// end inline asm
	// begin inline asm
	mov.b32 %r6907, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6918, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6904, %r633, %r4318, %r6907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6908, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6909, %r6907, %r6908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6912, %r6904, %r6909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6915, %r644, %r4318, %r6918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6919, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6920, %r6918, %r6919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6923, %r6915, %r6920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6926, %r633, %r4340, %r6907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6930, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6931, %r6907, %r6930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6934, %r6926, %r6931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6937, %r644, %r4340, %r6918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6941, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6942, %r6918, %r6941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6945, %r6937, %r6942;
	// end inline asm
	// begin inline asm
	mov.b32 %r6953, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6964, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6950, %r633, %r4364, %r6953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6954, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6955, %r6953, %r6954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6958, %r6950, %r6955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6961, %r644, %r4364, %r6964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6965, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6966, %r6964, %r6965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6969, %r6961, %r6966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6972, %r633, %r4386, %r6953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6976, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6977, %r6953, %r6976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6980, %r6972, %r6977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6983, %r644, %r4386, %r6964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6987, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6988, %r6964, %r6987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6991, %r6983, %r6988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7065, %r243, %r6820, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7062, %r243, %r6831, %r6722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7074, %r243, %r6842, %r6728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7071, %r243, %r6853, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r243, %r6866, %r6740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7080, %r243, %r6877, %r6746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7092, %r243, %r6888, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7089, %r243, %r6899, %r6758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7101, %r243, %r6912, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7098, %r243, %r6923, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7110, %r243, %r6934, %r6776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7107, %r243, %r6945, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r243, %r6958, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7116, %r243, %r6969, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r243, %r6980, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7125, %r243, %r6991, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7058, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7060, %r7058, %r7062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7063, %r264, %r7065, %r7060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7067, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7069, %r7067, %r7071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7072, %r264, %r7074, %r7069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7076, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7078, %r7076, %r7080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7081, %r264, %r7083, %r7078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7085, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7087, %r7085, %r7089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7090, %r264, %r7092, %r7087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7094, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7096, %r7094, %r7098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7099, %r264, %r7101, %r7096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7103, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7105, %r7103, %r7107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7108, %r264, %r7110, %r7105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7112, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7114, %r7112, %r7116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7117, %r264, %r7119, %r7114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7121, %r267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7123, %r7121, %r7125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7126, %r264, %r7128, %r7123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7130, %r267, %r7065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7133, %r264, %r7062, %r7130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7137, %r267, %r7074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7140, %r264, %r7071, %r7137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7144, %r267, %r7083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r264, %r7080, %r7144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7151, %r267, %r7092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7154, %r264, %r7089, %r7151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7158, %r267, %r7101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7161, %r264, %r7098, %r7158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7165, %r267, %r7110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7168, %r264, %r7107, %r7165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7172, %r267, %r7119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7175, %r264, %r7116, %r7172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7179, %r267, %r7128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7182, %r264, %r7125, %r7179;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7273, %r7270}, {%r323, %r329, %r326, %r332}, {%r7063, %r7133}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7282, %r7279}, {%r323, %r329, %r326, %r332}, {%r7072, %r7140}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7291, %r7288}, {%r323, %r329, %r326, %r332}, {%r7081, %r7147}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7300, %r7297}, {%r323, %r329, %r326, %r332}, {%r7090, %r7154}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7309, %r7306}, {%r323, %r329, %r326, %r332}, {%r7099, %r7161}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7318, %r7315}, {%r323, %r329, %r326, %r332}, {%r7108, %r7168}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7327, %r7324}, {%r323, %r329, %r326, %r332}, {%r7117, %r7175}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7333}, {%r323, %r329, %r326, %r332}, {%r7126, %r7182}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7266, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r7266, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r367, %r7273, %r7268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7275, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r7275, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r367, %r7282, %r7277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7284, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r7284, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r367, %r7291, %r7286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7293, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r7293, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r367, %r7300, %r7295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7302, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r7302, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r367, %r7309, %r7304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7311, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r7311, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r367, %r7318, %r7313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7320, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7322, %r7320, %r7324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7325, %r367, %r7327, %r7322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7329, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r7329, %r7333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r367, %r7336, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r370, %r7273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r367, %r7270, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r370, %r7282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r367, %r7279, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r370, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r367, %r7288, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r370, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r367, %r7297, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r370, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r367, %r7306, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r370, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r367, %r7315, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r370, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r367, %r7324, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r370, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r367, %r7333, %r7387;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7394, %r7395}, {%r401, %r407, %r404, %r410}, {%r7271, %r7341}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7404, %r7405}, {%r401, %r407, %r404, %r410}, {%r7280, %r7348}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7414, %r7415}, {%r401, %r407, %r404, %r410}, {%r7289, %r7355}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7424, %r7425}, {%r401, %r407, %r404, %r410}, {%r7298, %r7362}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7434, %r7435}, {%r401, %r407, %r404, %r410}, {%r7307, %r7369}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7444, %r7445}, {%r401, %r407, %r404, %r410}, {%r7316, %r7376}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7454, %r7455}, {%r401, %r407, %r404, %r410}, {%r7325, %r7383}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7464, %r7465}, {%r401, %r407, %r404, %r410}, {%r7334, %r7390}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7474, %r109, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7477, %r109, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7480, %r109, %r7404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7483, %r109, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7486, %r109, %r7414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7489, %r109, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7492, %r109, %r7424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7495, %r109, %r7425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7498, %r109, %r7434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7501, %r109, %r7435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7504, %r109, %r7444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7507, %r109, %r7445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7510, %r109, %r7454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7513, %r109, %r7455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7516, %r109, %r7464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7519, %r109, %r7465;
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7523, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7524, %r7474, %r7522;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7527, %r7524, %r7523;
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7531, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7532, %r7477, %r7530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7535, %r7532, %r7531;
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7540, %r7480, %r7538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7543, %r7540, %r7539;
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7548, %r7483, %r7546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7551, %r7548, %r7547;
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7556, %r7486, %r7554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7559, %r7556, %r7555;
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7564, %r7489, %r7562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7567, %r7564, %r7563;
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7571, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7572, %r7492, %r7570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7575, %r7572, %r7571;
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7579, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7580, %r7495, %r7578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7583, %r7580, %r7579;
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7587, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7588, %r7498, %r7586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7591, %r7588, %r7587;
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7595, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7596, %r7501, %r7594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7599, %r7596, %r7595;
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7603, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7604, %r7504, %r7602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7607, %r7604, %r7603;
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7611, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7612, %r7507, %r7610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7615, %r7612, %r7611;
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7619, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7620, %r7510, %r7618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7623, %r7620, %r7619;
	// end inline asm
	// begin inline asm
	mov.b32 %r7626, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7627, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7628, %r7513, %r7626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7631, %r7628, %r7627;
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7635, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7636, %r7516, %r7634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7639, %r7636, %r7635;
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7643, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7644, %r7519, %r7642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7647, %r7644, %r7643;
	// end inline asm
	// begin inline asm
	mov.b32 %r7653, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7651, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7653, %r7651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7527, %r7652;
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7653, %r7658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7662, %r7535, %r7659;
	// end inline asm
	// begin inline asm
	mov.b32 %r7665, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7653, %r7665;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7669, %r7543, %r7666;
	// end inline asm
	// begin inline asm
	mov.b32 %r7672, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7653, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7551, %r7673;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7679, %r7655, %r7669, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7683, %r7662, %r7676, %r2294;
	// end inline asm
	shl.b32 	%r7690, %r7683, 4;
	// begin inline asm
	lop3.b32 %r7687, %r2300, %r7679, %r7690, 202;
	// end inline asm
	xor.b32  	%r7872, %r7687, -2004318072;
	// begin inline asm
	mov.b32 %r7694, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7692, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7694, %r7692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7559, %r7693;
	// end inline asm
	// begin inline asm
	mov.b32 %r7699, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7694, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7567, %r7700;
	// end inline asm
	// begin inline asm
	mov.b32 %r7706, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7694, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7575, %r7707;
	// end inline asm
	// begin inline asm
	mov.b32 %r7713, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7694, %r7713;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7583, %r7714;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7720, %r7696, %r7710, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7724, %r7703, %r7717, %r2294;
	// end inline asm
	shl.b32 	%r7731, %r7724, 4;
	// begin inline asm
	lop3.b32 %r7728, %r2300, %r7720, %r7731, 202;
	// end inline asm
	xor.b32  	%r7873, %r7728, -2004318072;
	// begin inline asm
	mov.b32 %r7735, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7733, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7735, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7591, %r7734;
	// end inline asm
	// begin inline asm
	mov.b32 %r7740, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7741, %r7735, %r7740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7744, %r7599, %r7741;
	// end inline asm
	// begin inline asm
	mov.b32 %r7747, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7748, %r7735, %r7747;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7751, %r7607, %r7748;
	// end inline asm
	// begin inline asm
	mov.b32 %r7754, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7735, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7615, %r7755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7761, %r7737, %r7751, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7765, %r7744, %r7758, %r2294;
	// end inline asm
	shl.b32 	%r7772, %r7765, 4;
	// begin inline asm
	lop3.b32 %r7769, %r2300, %r7761, %r7772, 202;
	// end inline asm
	xor.b32  	%r7874, %r7769, -2004318072;
	// begin inline asm
	mov.b32 %r7776, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7774, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7775, %r7776, %r7774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7778, %r7623, %r7775;
	// end inline asm
	// begin inline asm
	mov.b32 %r7781, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7782, %r7776, %r7781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7785, %r7631, %r7782;
	// end inline asm
	// begin inline asm
	mov.b32 %r7788, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7789, %r7776, %r7788;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7792, %r7639, %r7789;
	// end inline asm
	// begin inline asm
	mov.b32 %r7795, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7796, %r7776, %r7795;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7799, %r7647, %r7796;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7802, %r7778, %r7792, %r2294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7806, %r7785, %r7799, %r2294;
	// end inline asm
	shl.b32 	%r7813, %r7806, 4;
	// begin inline asm
	lop3.b32 %r7810, %r2300, %r7802, %r7813, 202;
	// end inline asm
	xor.b32  	%r7875, %r7810, -2004318072;
	st.shared.u32 	[%rd152], %r7872;
	st.shared.u32 	[%rd153], %r7873;
	st.shared.u32 	[%rd154], %r7874;
	st.shared.u32 	[%rd155], %r7875;
	add.s32 	%r8004, %r8004, 64;
	add.s64 	%rd155, %rd155, 8324;
	add.s64 	%rd154, %rd154, 8324;
	add.s64 	%rd153, %rd153, 8324;
	add.s64 	%rd152, %rd152, 8324;
	setp.eq.s32 	%p216, %r8004, 256;
	@%p216 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit17352
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7881, [%rd5];
	ld.shared.u32 	%r7882, [%rd6+128];
	ld.shared.u32 	%r7889, [%rd6+4];
	ld.shared.u32 	%r7890, [%rd6+132];
	ld.shared.u32 	%r7897, [%rd5+8324];
	ld.shared.u32 	%r7898, [%rd6+8452];
	ld.shared.u32 	%r7905, [%rd6+8328];
	ld.shared.u32 	%r7906, [%rd6+8456];
	ld.shared.u32 	%r7913, [%rd5+16648];
	ld.shared.u32 	%r7914, [%rd6+16776];
	ld.shared.u32 	%r7921, [%rd6+16652];
	ld.shared.u32 	%r7922, [%rd6+16780];
	ld.shared.u32 	%r7929, [%rd5+24972];
	ld.shared.u32 	%r7930, [%rd6+25100];
	ld.shared.u32 	%r7937, [%rd6+24976];
	ld.shared.u32 	%r7938, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7876, %r7881, %r7882, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7884, %r7889, %r7890, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7892, %r7897, %r7898, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7900, %r7905, %r7906, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7908, %r7913, %r7914, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7916, %r7921, %r7922, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7924, %r7929, %r7930, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7928, %r7929, %r7930, %r552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7932, %r7937, %r7938, %r548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7936, %r7937, %r7938, %r552;
	// end inline asm
	selp.b32 	%r7940, %r7880, %r7876, %p203;
	shfl.sync.bfly.b32	%r149, %r7940, 8, 31, -1;
	selp.b32 	%r7941, %r7888, %r7884, %p203;
	shfl.sync.bfly.b32	%r150, %r7941, 8, 31, -1;
	selp.b32 	%r7942, %r7896, %r7892, %p203;
	shfl.sync.bfly.b32	%r7943, %r7942, 8, 31, -1;
	selp.b32 	%r7944, %r7904, %r7900, %p203;
	shfl.sync.bfly.b32	%r7945, %r7944, 8, 31, -1;
	selp.b32 	%r7946, %r7912, %r7908, %p203;
	shfl.sync.bfly.b32	%r7947, %r7946, 8, 31, -1;
	selp.b32 	%r7948, %r7920, %r7916, %p203;
	shfl.sync.bfly.b32	%r7949, %r7948, 8, 31, -1;
	selp.b32 	%r7950, %r7928, %r7924, %p203;
	shfl.sync.bfly.b32	%r7951, %r7950, 8, 31, -1;
	selp.b32 	%r7952, %r7936, %r7932, %p203;
	shfl.sync.bfly.b32	%r7953, %r7952, 8, 31, -1;
	setp.eq.s32 	%p218, %r74, 0;
	shl.b32 	%r7972, %r73, 10;
	@%p218 bra 	$L__BB0_87;
// %bb.86:                              // %pass16539
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r7954, %r150, %r7888, %p203;
	selp.b32 	%r7955, %r7884, %r150, %p203;
	selp.b32 	%r7956, %r149, %r7880, %p203;
	selp.b32 	%r7957, %r7876, %r149, %p203;
	or.b32  	%r7959, %r60, %r7972;
	cvt.s64.s32 	%rd100, %r7959;
	add.s64 	%rd101, %rd100, %rd7;
	shr.u64 	%rd102, %rd101, 39;
	add.s64 	%rd103, %rd101, %rd102;
	shr.s64 	%rd104, %rd103, 25;
	setp.lt.s64 	%p220, %rd101, 0;
	and.b64  	%rd105, %rd103, -33554432;
	setp.ne.s64 	%p221, %rd105, %rd101;
	and.pred  	%p222, %p220, %p221;
	selp.u64 	%rd106, 1, 0, %p222;
	sub.s64 	%rd107, %rd106, %rd104;
	shl.b64 	%rd108, %rd107, 25;
	add.s64 	%rd109, %rd108, %rd101;
	shl.b64 	%rd110, %rd109, 2;
	add.s64 	%rd111, %rd3, %rd110;
	st.global.v4.u32 	[%rd111], {%r7957, %r7955, %r7956, %r7954};
$L__BB0_87:                             // %pass16552
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r143, %r73, 64;
	setp.lt.u32 	%p223, %r143, 192;
	@%p223 bra 	$L__BB0_89;
// %bb.88:                              // %pass16646
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r151, %r7892, %r7943, %p203;
	selp.b32 	%r152, %r7943, %r7896, %p203;
	selp.b32 	%r153, %r7900, %r7945, %p203;
	selp.b32 	%r154, %r7945, %r7904, %p203;
	shl.b32 	%r7960, %r143, 10;
	or.b32  	%r7961, %r60, %r7960;
	cvt.s64.s32 	%rd112, %r7961;
	add.s64 	%rd113, %rd112, %rd7;
	shr.u64 	%rd114, %rd113, 39;
	add.s64 	%rd115, %rd113, %rd114;
	shr.s64 	%rd116, %rd115, 25;
	setp.lt.s64 	%p224, %rd113, 0;
	and.b64  	%rd117, %rd115, -33554432;
	setp.ne.s64 	%p225, %rd117, %rd113;
	and.pred  	%p226, %p224, %p225;
	selp.u64 	%rd118, 1, 0, %p226;
	sub.s64 	%rd119, %rd118, %rd116;
	shl.b64 	%rd120, %rd119, 25;
	add.s64 	%rd121, %rd120, %rd113;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.v4.u32 	[%rd123], {%r151, %r153, %r152, %r154};
$L__BB0_89:                             // %pass16659
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r144, %r73, 128;
	selp.b32 	%r159, %r7924, %r7951, %p203;
	selp.b32 	%r160, %r7951, %r7928, %p203;
	selp.b32 	%r161, %r7932, %r7953, %p203;
	selp.b32 	%r162, %r7953, %r7936, %p203;
	setp.lt.u32 	%p227, %r144, 192;
	@%p227 bra 	$L__BB0_91;
// %bb.90:                              // %pass16753
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r155, %r7908, %r7947, %p203;
	selp.b32 	%r156, %r7947, %r7912, %p203;
	selp.b32 	%r157, %r7916, %r7949, %p203;
	selp.b32 	%r158, %r7949, %r7920, %p203;
	shl.b32 	%r7962, %r144, 10;
	or.b32  	%r7963, %r60, %r7962;
	cvt.s64.s32 	%rd124, %r7963;
	add.s64 	%rd125, %rd124, %rd7;
	shr.u64 	%rd126, %rd125, 39;
	add.s64 	%rd127, %rd125, %rd126;
	shr.s64 	%rd128, %rd127, 25;
	setp.lt.s64 	%p228, %rd125, 0;
	and.b64  	%rd129, %rd127, -33554432;
	setp.ne.s64 	%p229, %rd129, %rd125;
	and.pred  	%p230, %p228, %p229;
	selp.u64 	%rd130, 1, 0, %p230;
	sub.s64 	%rd131, %rd130, %rd128;
	shl.b64 	%rd132, %rd131, 25;
	add.s64 	%rd133, %rd132, %rd125;
	shl.b64 	%rd134, %rd133, 2;
	add.s64 	%rd135, %rd3, %rd134;
	st.global.v4.u32 	[%rd135], {%r155, %r157, %r156, %r158};
	bra.uni 	$L__BB0_91;
$L__BB0_92:                             // %L40591
	st.global.u32 	[%rd4], %r7971;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r7970, 2;
	st.global.u32 	[%rd4], %r7970;
	mov.u64 	%rd150, exception3410;
	cvta.global.u64 	%rd151, %rd150;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd151;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r163;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7969, 3;
	st.global.u32 	[%rd4], %r7969;
	mov.u64 	%rd148, exception3410;
	cvta.global.u64 	%rd149, %rd148;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd149;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r163;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd41, exception13430;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r163;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
