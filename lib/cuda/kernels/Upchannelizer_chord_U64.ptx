// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3413[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<1197>;
	.reg .b32 	%r<8012>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<149>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r166, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r173, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r173, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r167, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r174, %r4, 9;
	or.b32  	%r175, %r2, %r3;
	or.b32  	%r176, %r175, %r174;
	mul.wide.u32 	%rd42, %r176, 4;
	add.s64 	%rd4, %rd36, %rd42;
	mov.u32 	%r177, 1;
	st.global.u32 	[%rd4], %r177;
	setp.gt.u32 	%p2, %r167, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r168, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r168, %r167;
	setp.gt.s32 	%p4, %r168, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r169, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r178, %r168, %r167;
	and.b32  	%r179, %r178, 255;
	setp.ne.s32 	%p6, %r179, 0;
	setp.gt.u32 	%p7, %r169, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r170, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r170, %r169;
	setp.gt.s32 	%p10, %r170, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	not.b32 	%r180, %r169;
	add.s32 	%r181, %r180, %r170;
	and.b32  	%r182, %r181, 3;
	setp.eq.s32 	%p12, %r182, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r171, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r171, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r172, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r171, %r172;
	setp.lt.s32 	%p15, %r172, 49;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r114, %r3, 2, 1;
	shr.u32 	%r115, %r3, 4;
	shl.b32 	%r189, %r115, 1;
	shl.b32 	%r190, %r114, 2;
	shl.b32 	%r116, %r3, 3;
	and.b32  	%r191, %r116, 24;
	or.b32  	%r192, %r190, %r191;
	or.b32  	%r193, %r189, %r192;
	bfe.u32 	%r194, %r3, 3, 1;
	or.b32  	%r118, %r194, %r193;
	or.b32  	%r119, %r118, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r118;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p22, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L602
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_13:                             // %L605
	cvt.rn.f32.s32 	%f181, %r119;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L622
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_15:                             // %L625
	or.b32  	%r212, %r118, 64;
	or.b32  	%r6, %r118, 96;
	cvt.rn.f32.s32 	%f216, %r212;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L704
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_17:                             // %L707
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L724
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_19:                             // %L727
	or.b32  	%r230, %r118, 128;
	or.b32  	%r8, %r118, 160;
	cvt.rn.f32.s32 	%f285, %r230;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L806
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_21:                             // %L809
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L826
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_23:                             // %L829
	or.b32  	%r248, %r118, 192;
	or.b32  	%r10, %r118, 224;
	cvt.rn.f32.s32 	%f354, %r248;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L908
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_25:                             // %L911
	shr.u32 	%r113, %r3, 1;
	shr.u32 	%r117, %r3, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L928
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_27:                             // %L931
	and.b32  	%r292, %r3, 3;
	and.b32  	%r293, %r117, 2;
	and.b32  	%r294, %r113, 4;
	or.b32  	%r295, %r114, %r293;
	or.b32  	%r14, %r295, %r294;
	mul.lo.s32 	%r296, %r292, %r14;
	shl.b32 	%r297, %r296, 1;
	neg.s32 	%r298, %r297;
	cvt.rn.f32.s32 	%f35, %r298;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p79, %f830, 0f40000000;
	setp.gtu.f32 	%p237, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p79 bra 	$L__BB0_100;
// %bb.28:
	@%p237 bra 	$L__BB0_96;
	bra.uni 	$L__BB0_29;
$L__BB0_96:
	mov.b32 	%r121, %f830;
	and.b32  	%r299, %r121, 8388607;
	or.b32  	%r8006, %r299, 1065353216;
	mov.b32 	%f821, %r8006;
	add.s32 	%r300, %r121, -1073741824;
	and.b32  	%r8007, %r300, -8388608;
	setp.eq.s32 	%p86, %r8007, 0;
	@%p86 bra 	$L__BB0_99;
// %bb.97:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_98:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r301, %r8007, 192937984;
	add.s32 	%r302, %r8006, %r301;
	mov.b32 	%f501, %r302;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r8007, %r8007, %r301;
	mov.b32 	%r8006, %f821;
	setp.ne.s32 	%p87, %r8007, 0;
	setp.ne.s32 	%p88, %r8006, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_98;
$L__BB0_99:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p90, %r121, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_100;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r120, %f89;
	setp.lt.u32 	%p81, %r120, 1073741824;
	@%p81 bra 	$L__BB0_95;
// %bb.30:
	setp.lt.u32 	%p82, %r120, -2147483647;
	@%p82 bra 	$L__BB0_93;
// %bb.31:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p85, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p85;
	bra.uni 	$L__BB0_95;
$L__BB0_93:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p83, %f89, 0f40800000;
	@%p83 bra 	$L__BB0_95;
// %bb.94:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p84, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p84;
$L__BB0_95:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_100:                            // %__internal_fmodf_kernel.exit.i928
	shl.b32 	%r109, %r3, 1;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p91, %f510, 0f7F800000;
	mov.b32 	%r303, %f36;
	and.b32  	%r128, %r303, -2147483648;
	@%p91 bra 	$L__BB0_102;
// %bb.101:
	mov.b32 	%r304, %f822;
	or.b32  	%r305, %r128, %r304;
	mov.b32 	%f822, %r305;
$L__BB0_102:                            // %__nv_fmodf.exit929
	and.b32  	%r314, %r109, 6;
	mov.u32 	%r315, -8;
	sub.s32 	%r316, %r315, %r314;
	mul.lo.s32 	%r317, %r14, %r316;
	cvt.rn.f32.s32 	%f105, %r317;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p99, %f818, 0f40000000;
	setp.gtu.f32 	%p238, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	@%p238 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r16, %f818;
	and.b32  	%r318, %r16, 8388607;
	or.b32  	%r7973, %r318, 1065353216;
	mov.b32 	%f809, %r7973;
	add.s32 	%r319, %r16, -1073741824;
	and.b32  	%r7974, %r319, -8388608;
	setp.eq.s32 	%p106, %r7974, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r320, %r7974, 192937984;
	add.s32 	%r321, %r7973, %r320;
	mov.b32 	%f552, %r321;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7974, %r7974, %r320;
	mov.b32 	%r7973, %f809;
	setp.ne.s32 	%p107, %r7974, 0;
	setp.ne.s32 	%p108, %r7973, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p101, %r15, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r15, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p105, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p103, %f39, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p104, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p111, %f561, 0f7F800000;
	mov.b32 	%r322, %f106;
	and.b32  	%r23, %r322, -2147483648;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r323, %f810;
	or.b32  	%r324, %r23, %r323;
	mov.b32 	%f810, %r324;
$L__BB0_45:                             // %__nv_fmodf.exit
	div.approx.f32 	%f53, %f35, %f177;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p119, %f826, 0f40000000;
	@%p119 bra 	$L__BB0_110;
// %bb.46:
	setp.gtu.f32 	%p120, %f826, 0f4B800000;
	@%p120 bra 	$L__BB0_106;
	bra.uni 	$L__BB0_47;
$L__BB0_106:
	mov.b32 	%r130, %f826;
	and.b32  	%r345, %r130, 8388607;
	or.b32  	%r8008, %r345, 1065353216;
	mov.b32 	%f825, %r8008;
	add.s32 	%r346, %r130, -1073741824;
	and.b32  	%r8009, %r346, -8388608;
	setp.eq.s32 	%p126, %r8009, 0;
	@%p126 bra 	$L__BB0_109;
// %bb.107:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_108:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r347, %r8009, 192937984;
	add.s32 	%r348, %r8008, %r347;
	mov.b32 	%f605, %r348;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r8009, %r8009, %r347;
	mov.b32 	%r8008, %f825;
	setp.ne.s32 	%p127, %r8009, 0;
	setp.ne.s32 	%p128, %r8008, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_108;
$L__BB0_109:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p130, %r130, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_110;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r129, %f109;
	setp.lt.u32 	%p121, %r129, 1073741824;
	@%p121 bra 	$L__BB0_105;
// %bb.48:
	setp.lt.u32 	%p122, %r129, -2147483647;
	@%p122 bra 	$L__BB0_103;
// %bb.49:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p125;
	bra.uni 	$L__BB0_105;
$L__BB0_103:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_105;
// %bb.104:                             // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p124;
$L__BB0_105:                            // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_110:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p131, %f614, 0f7F800000;
	@%p131 bra 	$L__BB0_112;
// %bb.111:
	mov.b32 	%r349, %f53;
	and.b32  	%r350, %r349, -2147483648;
	mov.b32 	%r351, %f826;
	or.b32  	%r352, %r350, %r351;
	mov.b32 	%f826, %r352;
$L__BB0_112:                            // %__nv_fmodf.exit960
	div.approx.f32 	%f125, %f105, %f177;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p139, %f814, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f814, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r29, %f814;
	and.b32  	%r361, %r29, 8388607;
	or.b32  	%r7975, %r361, 1065353216;
	mov.b32 	%f813, %r7975;
	add.s32 	%r362, %r29, -1073741824;
	and.b32  	%r7976, %r362, -8388608;
	setp.eq.s32 	%p146, %r7976, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r363, %r7976, 192937984;
	add.s32 	%r364, %r7975, %r363;
	mov.b32 	%f656, %r364;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7976, %r7976, %r363;
	mov.b32 	%r7975, %f813;
	setp.ne.s32 	%p147, %r7976, 0;
	setp.ne.s32 	%p148, %r7975, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p150, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p141, %r28, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r28, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p145, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p143, %f56, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p144, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p151, %f665, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r365, %f125;
	and.b32  	%r366, %r365, -2147483648;
	mov.b32 	%r367, %f814;
	or.b32  	%r368, %r366, %r367;
	mov.b32 	%f814, %r368;
$L__BB0_63:                             // %__nv_fmodf.exit867
	@%p79 bra 	$L__BB0_120;
// %bb.64:
	@%p237 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_65;
$L__BB0_116:
	mov.b32 	%r138, %f830;
	and.b32  	%r383, %r138, 8388607;
	or.b32  	%r8010, %r383, 1065353216;
	mov.b32 	%f829, %r8010;
	add.s32 	%r384, %r138, -1073741824;
	and.b32  	%r8011, %r384, -8388608;
	setp.eq.s32 	%p166, %r8011, 0;
	@%p166 bra 	$L__BB0_119;
// %bb.117:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_118:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r385, %r8011, 192937984;
	add.s32 	%r386, %r8010, %r385;
	mov.b32 	%f708, %r386;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r8011, %r8011, %r385;
	mov.b32 	%r8010, %f829;
	setp.ne.s32 	%p167, %r8011, 0;
	setp.ne.s32 	%p168, %r8010, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_118;
$L__BB0_119:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p170, %r138, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_120;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r137, %f128;
	setp.lt.u32 	%p161, %r137, 1073741824;
	@%p161 bra 	$L__BB0_115;
// %bb.66:
	setp.lt.u32 	%p162, %r137, -2147483647;
	@%p162 bra 	$L__BB0_113;
// %bb.67:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p165;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_115;
// %bb.114:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p164;
$L__BB0_115:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_120:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p171, %f717, 0f7F800000;
	@%p171 bra 	$L__BB0_122;
// %bb.121:
	mov.b32 	%r387, %f830;
	or.b32  	%r388, %r128, %r387;
	mov.b32 	%f830, %r388;
$L__BB0_122:                            // %__nv_fmodf.exit991
	@%p99 bra 	$L__BB0_79;
// %bb.68:
	@%p238 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r39, %f818;
	and.b32  	%r397, %r39, 8388607;
	or.b32  	%r7977, %r397, 1065353216;
	mov.b32 	%f817, %r7977;
	add.s32 	%r398, %r39, -1073741824;
	and.b32  	%r7978, %r398, -8388608;
	setp.eq.s32 	%p186, %r7978, 0;
	@%p186 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r399, %r7978, 192937984;
	add.s32 	%r400, %r7977, %r399;
	mov.b32 	%f758, %r400;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7978, %r7978, %r399;
	mov.b32 	%r7977, %f817;
	setp.ne.s32 	%p187, %r7978, 0;
	setp.ne.s32 	%p188, %r7977, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p190, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p181, %r38, 1073741824;
	@%p181 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p182, %r38, -2147483647;
	@%p182 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p185, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p185;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p183, %f71, 0f40800000;
	@%p183 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p184, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p184;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p191, %f767, 0f7F800000;
	@%p191 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r401, %f818;
	or.b32  	%r402, %r23, %r401;
	mov.b32 	%f818, %r402;
$L__BB0_81:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p199, %r168, %r167;
	mov.u32 	%r7971, 0;
	@%p199 bra 	$L__BB0_92;
// %bb.82:                              // %L1448.lr.ph
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r272, %r118, 63;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r282, %r272, 96;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r273, %r272, 127;
	and.b32  	%r283, %r282, 127;
	setp.gt.f32 	%p17, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p23, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p29, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p35, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p41, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p47, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p53, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p59, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r273;
	cvt.rn.f32.s32 	%f457, %r283;
	selp.f32 	%f153, %f152, %f150, %p17;
	selp.f32 	%f187, %f186, %f184, %p23;
	selp.f32 	%f222, %f221, %f219, %p29;
	selp.f32 	%f256, %f255, %f253, %p35;
	selp.f32 	%f291, %f290, %f288, %p41;
	selp.f32 	%f325, %f324, %f322, %p47;
	selp.f32 	%f360, %f359, %f357, %p53;
	selp.f32 	%f394, %f393, %f391, %p59;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	mov.b32 	%r195, %f154;
	mov.b32 	%r202, %f188;
	mov.b32 	%r213, %f223;
	mov.b32 	%r220, %f257;
	mov.b32 	%r231, %f292;
	mov.b32 	%r238, %f326;
	mov.b32 	%r249, %f361;
	mov.b32 	%r256, %f395;
	mov.b32 	%r274, %f425;
	mov.b32 	%r284, %f459;
	mov.b32 	%r306, %f511;
	mov.b32 	%r337, %f562;
	and.b32  	%r196, %r195, -2147483648;
	and.b32  	%r203, %r202, -2147483648;
	and.b32  	%r214, %r213, -2147483648;
	and.b32  	%r221, %r220, -2147483648;
	and.b32  	%r232, %r231, -2147483648;
	and.b32  	%r239, %r238, -2147483648;
	and.b32  	%r250, %r249, -2147483648;
	and.b32  	%r257, %r256, -2147483648;
	and.b32  	%r275, %r274, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r307, %r306, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	or.b32  	%r197, %r196, 1056964608;
	or.b32  	%r204, %r203, 1056964608;
	or.b32  	%r215, %r214, 1056964608;
	or.b32  	%r222, %r221, 1056964608;
	or.b32  	%r233, %r232, 1056964608;
	or.b32  	%r240, %r239, 1056964608;
	or.b32  	%r251, %r250, 1056964608;
	or.b32  	%r258, %r257, 1056964608;
	or.b32  	%r276, %r275, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r308, %r307, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	mov.b32 	%r353, %f615;
	mov.b32 	%r375, %f666;
	mov.b32 	%f155, %r197;
	mov.b32 	%f189, %r204;
	mov.b32 	%f224, %r215;
	mov.b32 	%f258, %r222;
	mov.b32 	%f293, %r233;
	mov.b32 	%f327, %r240;
	mov.b32 	%f362, %r251;
	mov.b32 	%f396, %r258;
	mov.b32 	%f426, %r276;
	mov.b32 	%f460, %r286;
	mov.b32 	%f512, %r308;
	mov.b32 	%f563, %r339;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r376, %r375, -2147483648;
	add.f32 	%f718, %f830, %f830;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r377, %r376, 1056964608;
	mov.b32 	%r389, %f718;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p18, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p24, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p30, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p36, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p42, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p48, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p54, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p60, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p65, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p72, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p92, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p112, %f566, 0f4B000000;
	mov.b32 	%f616, %r355;
	mov.b32 	%f667, %r377;
	and.b32  	%r390, %r389, -2147483648;
	selp.f32 	%f159, %f154, %f157, %p18;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p19, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p24;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p25, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p30;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p31, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p36;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p37, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p42;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p43, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p48;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p49, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p54;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p55, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p60;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p61, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p65;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p66, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p72;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p73, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p92;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p93, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p112;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p113, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r391, %r390, 1056964608;
	shr.u32 	%r183, %r4, 3;
	selp.f32 	%f161, %f160, %f159, %p19;
	selp.f32 	%f195, %f194, %f193, %p25;
	selp.f32 	%f230, %f229, %f228, %p31;
	selp.f32 	%f264, %f263, %f262, %p37;
	selp.f32 	%f299, %f298, %f297, %p43;
	selp.f32 	%f333, %f332, %f331, %p49;
	selp.f32 	%f368, %f367, %f366, %p55;
	selp.f32 	%f402, %f401, %f400, %p61;
	selp.f32 	%f432, %f431, %f430, %p66;
	selp.f32 	%f466, %f465, %f464, %p73;
	selp.f32 	%f518, %f517, %f516, %p93;
	selp.f32 	%f569, %f568, %f567, %p113;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p132, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p153, %f670, 0f4B000000;
	mov.b32 	%f719, %r391;
	cvt.u16.u32 	%rs1, %r183;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p132;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p133, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p153;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p154, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	and.b16  	%rs2, %rs1, 255;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p133;
	selp.f32 	%f673, %f672, %f671, %p154;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p173, %f722, 0f4B000000;
	mul.lo.s16 	%rs3, %rs2, 171;
	cvt.rzi.s32.f32 	%r198, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r205, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r216, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r223, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r234, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r241, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r252, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r259, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p173;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p174, %f722, 0f3F000000;
	shl.b32 	%r104, %r3, 2;
	shr.u16 	%rs4, %rs3, 13;
	add.s32 	%r199, %r198, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r206, %r205, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r217, %r216, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r224, %r223, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r235, %r234, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r242, %r241, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r253, %r252, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r260, %r259, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r277, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r287, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r309, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r340, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p174;
	and.b32  	%r105, %r104, 4;
	mul.lo.s16 	%rs5, %rs4, 48;
	and.b32  	%r111, %r3, 18;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r200, %r199, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r207, %r206, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r218, %r217, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r225, %r224, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r236, %r235, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r243, %r242, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r254, %r253, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r261, %r260, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	and.b32  	%r107, %r104, 32;
	sub.s16 	%rs6, %rs1, %rs5;
	or.b32  	%r184, %r111, %r105;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p20, %r200, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p26, %r207, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p32, %r218, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p38, %r225, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p44, %r236, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p50, %r243, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p56, %r254, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p62, %r261, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p67, %r278, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p74, %r288, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p94, %r310, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p114, %r341, 1;
	cvt.rzi.s32.f32 	%r356, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r378, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	and.b16  	%rs7, %rs6, 255;
	and.b32  	%r110, %r109, 8;
	or.b32  	%r185, %r184, %r107;
	selp.f32 	%f173, %f171, %f172, %p20;
	and.b32  	%r201, %r199, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p26;
	and.b32  	%r208, %r206, 2;
	selp.f32 	%f242, %f240, %f241, %p32;
	and.b32  	%r219, %r217, 2;
	selp.f32 	%f276, %f274, %f275, %p38;
	and.b32  	%r226, %r224, 2;
	selp.f32 	%f311, %f309, %f310, %p44;
	and.b32  	%r237, %r235, 2;
	selp.f32 	%f345, %f343, %f344, %p50;
	and.b32  	%r244, %r242, 2;
	selp.f32 	%f380, %f378, %f379, %p56;
	and.b32  	%r255, %r253, 2;
	selp.f32 	%f414, %f412, %f413, %p62;
	and.b32  	%r262, %r260, 2;
	selp.f32 	%f444, %f442, %f443, %p67;
	and.b32  	%r279, %r277, 2;
	selp.f32 	%f478, %f476, %f477, %p74;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f530, %f528, %f529, %p94;
	and.b32  	%r311, %r309, 2;
	selp.f32 	%f581, %f579, %f580, %p114;
	and.b32  	%r342, %r340, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	mul.wide.u16 	%r108, %rs7, 64;
	or.b32  	%r186, %r185, %r110;
	setp.eq.s32 	%p21, %r201, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p27, %r208, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p33, %r219, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p39, %r226, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p45, %r237, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p51, %r244, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p57, %r255, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p63, %r262, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p68, %r279, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r280, %r277, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p75, %r289, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p95, %r311, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r312, %r309, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p115, %r342, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r343, %r340, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p134, %r357, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p155, %r379, 1;
	cvt.rzi.s32.f32 	%r392, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	or.b32  	%r187, %r186, %r108;
	selp.f32 	%f176, %f173, %f175, %p21;
	selp.f32 	%f210, %f207, %f209, %p27;
	selp.f32 	%f245, %f242, %f244, %p33;
	selp.f32 	%f279, %f276, %f278, %p39;
	selp.f32 	%f314, %f311, %f313, %p45;
	selp.f32 	%f348, %f345, %f347, %p51;
	selp.f32 	%f383, %f380, %f382, %p57;
	selp.f32 	%f417, %f414, %f416, %p63;
	selp.f32 	%f445, %f443, %f442, %p67;
	selp.f32 	%f447, %f444, %f446, %p68;
	and.b32  	%r281, %r280, 2;
	setp.eq.f32 	%p70, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p74;
	selp.f32 	%f481, %f478, %f480, %p75;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p77, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p94;
	selp.f32 	%f533, %f530, %f532, %p95;
	and.b32  	%r313, %r312, 2;
	setp.eq.f32 	%p97, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p114;
	selp.f32 	%f584, %f581, %f583, %p115;
	and.b32  	%r344, %r343, 2;
	setp.eq.f32 	%p117, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p134;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f685, %f683, %f684, %p155;
	and.b32  	%r380, %r378, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r393, %r392, 1;
	bfe.u32 	%r188, %r187, 1, 7;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p69, %r281, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p70;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p76, %r291, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p77;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p96, %r313, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p97;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p116, %r344, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p117;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p135, %r358, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r359, %r356, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p156, %r380, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r381, %r378, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p175, %r393, 1;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd43, %r188, 4;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p69;
	setp.gt.f32 	%p71, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p76;
	setp.gt.f32 	%p78, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p96;
	setp.gt.f32 	%p98, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p116;
	setp.gt.f32 	%p118, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p134;
	selp.f32 	%f637, %f634, %f636, %p135;
	and.b32  	%r360, %r359, 2;
	setp.eq.f32 	%p137, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p155;
	selp.f32 	%f688, %f685, %f687, %p156;
	and.b32  	%r382, %r381, 2;
	setp.eq.f32 	%p158, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p175;
	and.b32  	%r394, %r392, 2;
	add.s64 	%rd44, %rd1, %rd43;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p71;
	selp.f32 	%f489, %f488, %f483, %p78;
	selp.f32 	%f104, %f540, %f536, %p98;
	selp.f32 	%f593, %f592, %f587, %p118;
	setp.eq.s32 	%p136, %r360, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p137;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p157, %r382, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p158;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p176, %r394, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r395, %r392, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r106, %r3, 16;
	ld.global.u32 	%r112, [%rd44];
	mov.b32 	%r211, %f215;
	mov.b32 	%r210, %f3;
	mov.b32 	%r229, %f284;
	mov.b32 	%r228, %f12;
	mov.b32 	%r247, %f353;
	mov.b32 	%r246, %f21;
	mov.b32 	%r265, %f421;
	mov.b32 	%r264, %f30;
	mov.b32 	%r267, %f456;
	mov.b32 	%r268, %f489;
	mov.b32 	%r270, %f453;
	mov.b32 	%r271, %f486;
	mov.b32 	%r327, %f593;
	mov.b32 	%r326, %f104;
	mov.b32 	%r333, %f590;
	mov.b32 	%r332, %f103;
	selp.f32 	%f640, %f635, %f639, %p136;
	setp.gt.f32 	%p138, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p157;
	setp.gt.f32 	%p159, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p175;
	selp.f32 	%f740, %f737, %f739, %p176;
	and.b32  	%r396, %r395, 2;
	setp.eq.f32 	%p178, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r209, %r211, %r210;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r227, %r229, %r228;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r245, %r247, %r246;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r263, %r265, %r264;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r266, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r269, %r271, %r270;
	// end inline asm
	xor.b32  	%r330, %r333, -2147483648;
	xor.b32  	%r329, %r332, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p138;
	selp.f32 	%f697, %f696, %f691, %p159;
	setp.eq.s32 	%p177, %r396, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p178;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r330, %r329;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r327, %r326;
	// end inline asm
	mov.b32 	%r371, %f697;
	mov.b32 	%r370, %f124;
	mov.b32 	%r374, %f694;
	mov.b32 	%r373, %f123;
	selp.f32 	%f743, %f738, %f742, %p177;
	setp.gt.f32 	%p179, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r371, %r370;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p179;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r415, %f768;
	and.b32  	%r416, %r415, -2147483648;
	or.b32  	%r417, %r416, 1056964608;
	mov.b32 	%f769, %r417;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p192, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p192;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p193, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p193;
	cvt.rzi.s32.f32 	%r418, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r419, %r418, 1;
	setp.eq.b32 	%p194, %r419, 1;
	selp.f32 	%f787, %f785, %f786, %p194;
	selp.f32 	%f788, %f786, %f785, %p194;
	and.b32  	%r420, %r418, 2;
	setp.eq.s32 	%p195, %r420, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p195;
	add.s32 	%r421, %r418, 1;
	and.b32  	%r422, %r421, 2;
	setp.eq.s32 	%p196, %r422, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p196;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p197, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p197;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p198, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p198;
	mov.b32 	%r405, %f799;
	mov.b32 	%r404, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r405, %r404;
	// end inline asm
	mov.b32 	%r411, %f796;
	xor.b32  	%r408, %r411, -2147483648;
	mov.b32 	%r410, %f142;
	xor.b32  	%r407, %r410, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r406, %r408, %r407;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r409, %r411, %r410;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r412, %r405, %r404;
	// end inline asm
	cvt.u16.u32 	%rs8, %r108;
	mul.hi.u16 	%rs9, %rs8, -21845;
	shr.u16 	%rs10, %rs9, 5;
	mul.lo.s16 	%rs11, %rs10, 48;
	sub.s16 	%rs12, %rs8, %rs11;
	cvt.u32.u16 	%r424, %rs12;
	or.b32  	%r50, %r106, %r1;
	and.b32  	%r425, %r104, 28;
	shl.b32 	%r426, %r4, 5;
	and.b32  	%r427, %r426, 96;
	or.b32  	%r51, %r425, %r427;
	and.b32  	%r428, %r426, 128;
	add.s32 	%r429, %r424, %r171;
	shl.b32 	%r430, %r429, 8;
	or.b32  	%r431, %r51, %r428;
	or.b32  	%r52, %r431, %r430;
	and.b32  	%r53, %r3, 8;
	shl.b32 	%r432, %r3, 4;
	or.b32  	%r433, %r53, %r432;
	shr.u32 	%r434, %r433, 2;
	and.b32  	%r435, %r434, 30;
	and.b32  	%r55, %r3, 4;
	and.b32  	%r436, %r2, 32;
	shr.u32 	%r437, %r1, 1;
	or.b32  	%r56, %r436, %r437;
	or.b32  	%r57, %r56, 8;
	or.b32  	%r58, %r56, 16;
	or.b32  	%r59, %r56, 24;
	or.b32  	%r438, %r111, %r107;
	or.b32  	%r439, %r438, %r110;
	or.b32  	%r440, %r439, %r105;
	shr.u32 	%r441, %r440, 1;
	mul.lo.s32 	%r442, %r441, 65;
	add.s32 	%r443, %r56, %r442;
	add.s32 	%r444, %r57, %r442;
	add.s32 	%r445, %r58, %r442;
	add.s32 	%r446, %r59, %r442;
	shl.b32 	%r447, %r1, 1;
	or.b32  	%r448, %r115, %r447;
	mul.lo.s32 	%r449, %r448, 65;
	add.s32 	%r450, %r435, %r449;
	mul.wide.u32 	%rd45, %r450, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd5, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r435;
	cvt.u64.u32 	%rd48, %r449;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd6, %rd46, %rd50;
	shl.b32 	%r451, %r169, 16;
	add.s32 	%r452, %r451, -196608;
	shl.b32 	%r453, %r1, 10;
	and.b32  	%r454, %r108, 192;
	or.b32  	%r455, %r454, %r117;
	shl.b32 	%r456, %r455, 8;
	or.b32  	%r457, %r428, %r453;
	or.b32  	%r60, %r457, %r456;
	cvt.s64.s32 	%rd7, %r452;
	and.b32  	%r458, %r1, 1;
	neg.s32 	%r459, %r458;
	setp.eq.b32 	%p200, %r458, 1;
	and.b32  	%r460, %r459, 1040;
	bfe.s32 	%r461, %r1, 1, 1;
	and.b32  	%r462, %r1, 2;
	setp.eq.s32 	%p201, %r462, 0;
	and.b32  	%r463, %r461, 520;
	bfe.s32 	%r464, %r1, 2, 1;
	and.b32  	%r465, %r1, 4;
	setp.eq.s32 	%p202, %r465, 0;
	and.b32  	%r466, %r464, 260;
	mul.lo.s32 	%r467, %r115, 65;
	shr.u32 	%r468, %r1, 3;
	mul.lo.s32 	%r469, %r468, 130;
	add.s32 	%r470, %r460, %r435;
	add.s32 	%r471, %r470, %r463;
	add.s32 	%r472, %r471, %r466;
	add.s32 	%r473, %r472, %r467;
	add.s32 	%r474, %r473, %r469;
	mul.wide.u32 	%rd51, %r474, 4;
	add.s64 	%rd8, %rd46, %rd51;
	cvt.u64.u32 	%rd52, %r469;
	cvt.u64.u32 	%rd53, %r467;
	selp.b64 	%rd54, 0, 260, %p202;
	selp.b64 	%rd55, 0, 520, %p201;
	selp.b64 	%rd56, 1040, 0, %p200;
	add.s64 	%rd57, %rd47, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd54;
	add.s64 	%rd60, %rd59, %rd53;
	add.s64 	%rd61, %rd60, %rd52;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd9, %rd46, %rd62;
	add.s32 	%r475, %r474, 2113;
	mul.wide.u32 	%rd63, %r475, 4;
	add.s64 	%rd10, %rd46, %rd63;
	add.s32 	%r476, %r474, 2082;
	mul.wide.u32 	%rd64, %r476, 4;
	add.s64 	%rd11, %rd46, %rd64;
	add.s32 	%r477, %r474, 2114;
	mul.wide.u32 	%rd65, %r477, 4;
	add.s64 	%rd12, %rd46, %rd65;
	add.s32 	%r478, %r474, 4194;
	mul.wide.u32 	%rd66, %r478, 4;
	add.s64 	%rd13, %rd46, %rd66;
	add.s32 	%r479, %r474, 4163;
	mul.wide.u32 	%rd67, %r479, 4;
	add.s64 	%rd14, %rd46, %rd67;
	add.s32 	%r480, %r474, 4195;
	mul.wide.u32 	%rd68, %r480, 4;
	add.s64 	%rd15, %rd46, %rd68;
	add.s32 	%r481, %r474, 6275;
	mul.wide.u32 	%rd69, %r481, 4;
	add.s64 	%rd16, %rd46, %rd69;
	add.s32 	%r482, %r474, 6244;
	mul.wide.u32 	%rd70, %r482, 4;
	add.s64 	%rd17, %rd46, %rd70;
	add.s32 	%r483, %r474, 6276;
	mul.wide.u32 	%rd71, %r483, 4;
	add.s64 	%rd18, %rd46, %rd71;
	mul.wide.u32 	%rd72, %r446, 4;
	add.s64 	%rd19, %rd46, %rd72;
	mul.wide.u32 	%rd73, %r445, 4;
	add.s64 	%rd20, %rd46, %rd73;
	mul.wide.u32 	%rd74, %r444, 4;
	add.s64 	%rd21, %rd46, %rd74;
	mul.wide.u32 	%rd75, %r443, 4;
	add.s64 	%rd22, %rd46, %rd75;
	setp.eq.s32 	%p203, %r53, 0;
	mov.u16 	%rs1188, 25600;
	mov.u16 	%rs1084, 21504;
	mov.u16 	%rs1196, 18432;
	mov.u32 	%r7993, %r7971;
	mov.u32 	%r7994, %r7971;
	mov.u32 	%r7995, %r7971;
	mov.u32 	%r7996, %r7971;
	mov.u32 	%r7997, %r7971;
	mov.u32 	%r7998, %r7971;
	mov.u32 	%r7999, %r7971;
	mov.u32 	%r8000, %r7971;
	mov.u32 	%r8001, %r7971;
	mov.u32 	%r8002, %r7971;
	mov.u32 	%r8003, %r7971;
	mov.u32 	%r8004, %r7971;
	mov.u32 	%r73, %r7971;
	bra.uni 	$L__BB0_83;
$L__BB0_91:                             // %pass16865
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7964, %r7972, %r51;
	or.b32  	%r7965, %r7964, %r60;
	or.b32  	%r7966, %r7965, 196608;
	cvt.s64.s32 	%rd129, %r7966;
	add.s64 	%rd130, %rd129, %rd7;
	shr.u64 	%rd131, %rd130, 39;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 25;
	setp.lt.s64 	%p231, %rd130, 0;
	and.b64  	%rd134, %rd132, -33554432;
	setp.ne.s64 	%p232, %rd134, %rd130;
	and.pred  	%p233, %p231, %p232;
	selp.u64 	%rd135, 1, 0, %p233;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 25;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r162, %r164, %r163, %r165};
	setp.ne.s32 	%p234, %r73, 32512;
	add.s32 	%r73, %r73, 256;
	add.s32 	%r7967, %r73, %r167;
	setp.lt.s32 	%p235, %r7967, %r168;
	and.pred  	%p236, %p234, %p235;
	@%p236 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_92;
$L__BB0_83:                             // %L1448
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r549, %r73, %r104;
	and.b32  	%r550, %r549, 32544;
	or.b32  	%r551, %r50, %r550;
	add.s32 	%r552, %r551, %r167;
	mad.lo.s32 	%r553, %r552, 12288, %r52;
	mul.hi.s32 	%r554, %r553, 715827883;
	shr.u32 	%r555, %r554, 31;
	shr.s32 	%r556, %r554, 26;
	add.s32 	%r557, %r556, %r555;
	setp.lt.s32 	%p204, %r553, 0;
	mul.lo.s32 	%r558, %r557, 402653184;
	setp.ne.s32 	%p205, %r558, %r553;
	and.pred  	%p206, %p204, %p205;
	selp.s32 	%r559, -1, 0, %p206;
	add.s32 	%r560, %r557, %r559;
	mad.lo.s32 	%r561, %r560, -402653184, %r553;
	mul.wide.s32 	%rd76, %r561, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r562, %r563, %r564, %r565}, [%rd77];
	or.b32  	%r566, %r551, 64;
	add.s32 	%r567, %r566, %r167;
	mad.lo.s32 	%r568, %r567, 12288, %r52;
	mul.hi.s32 	%r569, %r568, 715827883;
	shr.u32 	%r570, %r569, 31;
	shr.s32 	%r571, %r569, 26;
	add.s32 	%r572, %r571, %r570;
	setp.lt.s32 	%p207, %r568, 0;
	mul.lo.s32 	%r573, %r572, 402653184;
	setp.ne.s32 	%p208, %r573, %r568;
	and.pred  	%p209, %p207, %p208;
	selp.s32 	%r574, -1, 0, %p209;
	add.s32 	%r575, %r572, %r574;
	mad.lo.s32 	%r576, %r575, -402653184, %r568;
	mul.wide.s32 	%rd78, %r576, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r577, %r578, %r579, %r580}, [%rd79];
	or.b32  	%r581, %r551, 128;
	add.s32 	%r582, %r581, %r167;
	mad.lo.s32 	%r583, %r582, 12288, %r52;
	mul.hi.s32 	%r584, %r583, 715827883;
	shr.u32 	%r585, %r584, 31;
	shr.s32 	%r586, %r584, 26;
	add.s32 	%r587, %r586, %r585;
	setp.lt.s32 	%p210, %r583, 0;
	mul.lo.s32 	%r588, %r587, 402653184;
	setp.ne.s32 	%p211, %r588, %r583;
	and.pred  	%p212, %p210, %p211;
	selp.s32 	%r589, -1, 0, %p212;
	add.s32 	%r590, %r587, %r589;
	mad.lo.s32 	%r591, %r590, -402653184, %r583;
	mul.wide.s32 	%rd80, %r591, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r592, %r593, %r594, %r595}, [%rd81];
	or.b32  	%r596, %r551, 192;
	add.s32 	%r597, %r596, %r167;
	mad.lo.s32 	%r598, %r597, 12288, %r52;
	mul.hi.s32 	%r599, %r598, 715827883;
	shr.u32 	%r600, %r599, 31;
	shr.s32 	%r601, %r599, 26;
	add.s32 	%r602, %r601, %r600;
	setp.lt.s32 	%p213, %r598, 0;
	mul.lo.s32 	%r603, %r602, 402653184;
	setp.ne.s32 	%p214, %r603, %r598;
	and.pred  	%p215, %p213, %p214;
	selp.s32 	%r604, -1, 0, %p215;
	add.s32 	%r605, %r602, %r604;
	mad.lo.s32 	%r606, %r605, -402653184, %r598;
	mul.wide.s32 	%rd82, %r606, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r607, %r608, %r609, %r610}, [%rd83];
	selp.b32 	%r611, %r564, %r562, %p203;
	shfl.sync.bfly.b32	%r612, %r611, 8, 31, -1;
	selp.b32 	%r485, %r562, %r612, %p203;
	selp.b32 	%r486, %r612, %r564, %p203;
	selp.b32 	%r613, %r565, %r563, %p203;
	shfl.sync.bfly.b32	%r614, %r613, 8, 31, -1;
	selp.b32 	%r493, %r563, %r614, %p203;
	selp.b32 	%r494, %r614, %r565, %p203;
	selp.b32 	%r615, %r579, %r577, %p203;
	shfl.sync.bfly.b32	%r616, %r615, 8, 31, -1;
	selp.b32 	%r501, %r577, %r616, %p203;
	selp.b32 	%r502, %r616, %r579, %p203;
	selp.b32 	%r617, %r580, %r578, %p203;
	shfl.sync.bfly.b32	%r618, %r617, 8, 31, -1;
	selp.b32 	%r509, %r578, %r618, %p203;
	selp.b32 	%r510, %r618, %r580, %p203;
	selp.b32 	%r619, %r594, %r592, %p203;
	shfl.sync.bfly.b32	%r620, %r619, 8, 31, -1;
	selp.b32 	%r517, %r592, %r620, %p203;
	selp.b32 	%r518, %r620, %r594, %p203;
	selp.b32 	%r621, %r595, %r593, %p203;
	shfl.sync.bfly.b32	%r622, %r621, 8, 31, -1;
	selp.b32 	%r525, %r593, %r622, %p203;
	selp.b32 	%r526, %r622, %r595, %p203;
	selp.b32 	%r623, %r609, %r607, %p203;
	shfl.sync.bfly.b32	%r624, %r623, 8, 31, -1;
	selp.b32 	%r533, %r607, %r624, %p203;
	selp.b32 	%r534, %r624, %r609, %p203;
	selp.b32 	%r625, %r610, %r608, %p203;
	shfl.sync.bfly.b32	%r626, %r625, 8, 31, -1;
	selp.b32 	%r541, %r608, %r626, %p203;
	selp.b32 	%r542, %r626, %r610, %p203;
	mov.u32 	%r543, 21520;
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r543;
	// end inline asm
	mov.u32 	%r547, 30258;
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r517, %r518, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r517, %r518, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r525, %r526, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r525, %r526, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r533, %r534, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r533, %r534, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r541, %r542, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r541, %r542, %r547;
	// end inline asm
	st.shared.u32 	[%rd8], %r484;
	st.shared.u32 	[%rd9+128], %r488;
	st.shared.u32 	[%rd9+4], %r492;
	st.shared.u32 	[%rd9+132], %r496;
	st.shared.u32 	[%rd8+8324], %r500;
	st.shared.u32 	[%rd10], %r504;
	st.shared.u32 	[%rd11], %r508;
	st.shared.u32 	[%rd12], %r512;
	st.shared.u32 	[%rd8+16648], %r516;
	st.shared.u32 	[%rd13], %r520;
	st.shared.u32 	[%rd14], %r524;
	st.shared.u32 	[%rd15], %r528;
	st.shared.u32 	[%rd8+24972], %r532;
	st.shared.u32 	[%rd16], %r536;
	st.shared.u32 	[%rd17], %r540;
	st.shared.u32 	[%rd18], %r544;
	bar.sync 	0;
	or.b32  	%r627, %r73, %r191;
	or.b32  	%r628, %r627, %r55;
	or.b32  	%r74, %r628, %r117;
	shr.u32 	%r7992, %r74, 6;
	mov.u64 	%rd145, %rd22;
	mov.u64 	%rd146, %rd21;
	mov.u64 	%rd147, %rd20;
	mov.u64 	%rd148, %rd19;
	mov.u32 	%r8005, %r7971;
$L__BB0_84:                             // %L11716
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7813, %r74, %r8005;
	and.b32  	%r7814, %r7813, 1;
	neg.s32 	%r7815, %r7814;
	and.b32  	%r7816, %r7815, 1040;
	bfe.s32 	%r7817, %r7813, 1, 1;
	and.b32  	%r7818, %r7817, 520;
	bfe.s32 	%r7819, %r7813, 2, 1;
	and.b32  	%r7820, %r7819, 260;
	bfe.s32 	%r7821, %r7813, 4, 1;
	and.b32  	%r7822, %r7821, 65;
	bfe.s32 	%r7823, %r7813, 3, 1;
	and.b32  	%r7824, %r7823, 130;
	and.b32  	%r7825, %r7992, 3;
	mul.lo.s32 	%r7826, %r7825, 2081;
	or.b32  	%r7827, %r56, %r7816;
	or.b32  	%r7828, %r7827, %r7818;
	add.s32 	%r7829, %r7828, %r7820;
	add.s32 	%r7830, %r7829, %r7822;
	add.s32 	%r7831, %r7830, %r7824;
	add.s32 	%r7832, %r7831, %r7826;
	mul.wide.u32 	%rd84, %r7832, 4;
	add.s64 	%rd86, %rd46, %rd84;
	ld.shared.u32 	%r7833, [%rd86];
	or.b32  	%r7834, %r57, %r7816;
	add.s32 	%r7835, %r7834, %r7818;
	add.s32 	%r7836, %r7835, %r7820;
	add.s32 	%r7837, %r7836, %r7822;
	add.s32 	%r7838, %r7837, %r7824;
	add.s32 	%r7839, %r7838, %r7826;
	mul.wide.u32 	%rd87, %r7839, 4;
	add.s64 	%rd88, %rd46, %rd87;
	ld.shared.u32 	%r7840, [%rd88];
	add.s32 	%r7841, %r58, %r7816;
	or.b32  	%r7842, %r7841, %r7818;
	add.s32 	%r7843, %r7842, %r7820;
	add.s32 	%r7844, %r7843, %r7822;
	add.s32 	%r7845, %r7844, %r7824;
	add.s32 	%r7846, %r7845, %r7826;
	mul.wide.u32 	%rd89, %r7846, 4;
	add.s64 	%rd90, %rd46, %rd89;
	ld.shared.u32 	%r7847, [%rd90];
	add.s32 	%r7848, %r59, %r7816;
	add.s32 	%r7849, %r7848, %r7818;
	add.s32 	%r7850, %r7849, %r7820;
	add.s32 	%r7851, %r7850, %r7822;
	add.s32 	%r7852, %r7851, %r7824;
	add.s32 	%r7853, %r7852, %r7826;
	mul.wide.u32 	%rd91, %r7853, 4;
	add.s64 	%rd92, %rd46, %rd91;
	ld.shared.u32 	%r7854, [%rd92];
	// begin inline asm
	mov.b32 %r634, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r645, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r633, %r7833, -2004318072;
	mov.u32 	%r632, 983055;
	// begin inline asm
	lop3.b32 %r631, %r632, %r633, %r634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r635, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r636, %r634, %r635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r639, %r631, %r636;
	// end inline asm
	mov.u32 	%r643, 15728880;
	// begin inline asm
	lop3.b32 %r642, %r643, %r633, %r645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r646, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r647, %r645, %r646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r650, %r642, %r647;
	// end inline asm
	shr.u32 	%r655, %r633, 8;
	// begin inline asm
	lop3.b32 %r653, %r632, %r655, %r634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r657, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r658, %r634, %r657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r661, %r653, %r658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r664, %r643, %r655, %r645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r669, %r645, %r668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r672, %r664, %r669;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r679, %r7840, -2004318072;
	// begin inline asm
	lop3.b32 %r677, %r632, %r679, %r680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r682, %r680, %r681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r685, %r677, %r682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r688, %r643, %r679, %r691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r692, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r693, %r691, %r692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r696, %r688, %r693;
	// end inline asm
	shr.u32 	%r701, %r679, 8;
	// begin inline asm
	lop3.b32 %r699, %r632, %r701, %r680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r703, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r704, %r680, %r703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r707, %r699, %r704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r710, %r643, %r701, %r691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r714, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r715, %r691, %r714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r718, %r710, %r715;
	// end inline asm
	// begin inline asm
	mov.b32 %r726, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r737, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r725, %r7847, -2004318072;
	// begin inline asm
	lop3.b32 %r723, %r632, %r725, %r726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r727, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r728, %r726, %r727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r731, %r723, %r728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r734, %r643, %r725, %r737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r738, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r739, %r737, %r738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r742, %r734, %r739;
	// end inline asm
	shr.u32 	%r747, %r725, 8;
	// begin inline asm
	lop3.b32 %r745, %r632, %r747, %r726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r749, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r750, %r726, %r749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r753, %r745, %r750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r756, %r643, %r747, %r737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r760, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r761, %r737, %r760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r764, %r756, %r761;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r771, %r7854, -2004318072;
	// begin inline asm
	lop3.b32 %r769, %r632, %r771, %r772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r773, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r774, %r772, %r773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r777, %r769, %r774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r780, %r643, %r771, %r783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r784, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r785, %r783, %r784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r788, %r780, %r785;
	// end inline asm
	shr.u32 	%r793, %r771, 8;
	// begin inline asm
	lop3.b32 %r791, %r632, %r793, %r772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r795, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r796, %r772, %r795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r799, %r791, %r796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r802, %r643, %r793, %r783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r806, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r807, %r783, %r806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r810, %r802, %r807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r813, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r815, %r813, %r639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r818, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r820, %r818, %r650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r823, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r825, %r823, %r661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r828, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r830, %r828, %r672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r833, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r835, %r833, %r685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r838, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r840, %r838, %r696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r843, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r845, %r843, %r707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r848, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r850, %r848, %r718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r853, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r855, %r853, %r731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r858, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r860, %r858, %r742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r863, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r865, %r863, %r753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r868, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r870, %r868, %r764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r873, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r875, %r873, %r777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r878, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r880, %r878, %r788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r883, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r885, %r883, %r799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r888, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r890, %r888, %r810;
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r897, %r7993, -2004318072;
	// begin inline asm
	lop3.b32 %r895, %r632, %r897, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r898, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r906, %r643, %r897, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	shr.u32 	%r919, %r897, 8;
	// begin inline asm
	lop3.b32 %r917, %r632, %r919, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r898, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r928, %r643, %r919, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r909, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r943, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r941, %r632, %r943, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r944, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r952, %r643, %r943, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r955, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	shr.u32 	%r965, %r943, 8;
	// begin inline asm
	lop3.b32 %r963, %r632, %r965, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r944, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r974, %r643, %r965, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r955, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r989, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r987, %r632, %r989, %r990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r990, %r991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r995, %r987, %r992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r998, %r643, %r989, %r1001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r1001, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1006, %r998, %r1003;
	// end inline asm
	shr.u32 	%r1011, %r989, 8;
	// begin inline asm
	lop3.b32 %r1009, %r632, %r1011, %r990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r990, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1017, %r1009, %r1014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1020, %r643, %r1011, %r1001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1025, %r1001, %r1024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1028, %r1020, %r1025;
	// end inline asm
	// begin inline asm
	mov.b32 %r1036, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1047, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1035, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r1033, %r632, %r1035, %r1036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1038, %r1036, %r1037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1041, %r1033, %r1038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1044, %r643, %r1035, %r1047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1049, %r1047, %r1048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1052, %r1044, %r1049;
	// end inline asm
	shr.u32 	%r1057, %r1035, 8;
	// begin inline asm
	lop3.b32 %r1055, %r632, %r1057, %r1036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1060, %r1036, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1063, %r1055, %r1060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1066, %r643, %r1057, %r1047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1071, %r1047, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1074, %r1066, %r1071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1077, %r209, %r903, %r815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1081, %r209, %r914, %r820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1085, %r209, %r925, %r825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1089, %r209, %r936, %r830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1093, %r209, %r949, %r835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1097, %r209, %r960, %r840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1101, %r209, %r971, %r845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1105, %r209, %r982, %r850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1109, %r209, %r995, %r855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1113, %r209, %r1006, %r860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1117, %r209, %r1017, %r865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1121, %r209, %r1028, %r870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1125, %r209, %r1041, %r875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1129, %r209, %r1052, %r880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1133, %r209, %r1063, %r885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1137, %r209, %r1074, %r890;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1145, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r1143, %r632, %r1145, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1146, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1154, %r643, %r1145, %r1157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1159, %r1157, %r1158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1162, %r1154, %r1159;
	// end inline asm
	shr.u32 	%r1167, %r1145, 8;
	// begin inline asm
	lop3.b32 %r1165, %r632, %r1167, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1170, %r1146, %r1169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1173, %r1165, %r1170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1176, %r643, %r1167, %r1157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1181, %r1157, %r1180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1184, %r1176, %r1181;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1191, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r1189, %r632, %r1191, %r1192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1194, %r1192, %r1193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1197, %r1189, %r1194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1200, %r643, %r1191, %r1203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1205, %r1203, %r1204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1208, %r1200, %r1205;
	// end inline asm
	shr.u32 	%r1213, %r1191, 8;
	// begin inline asm
	lop3.b32 %r1211, %r632, %r1213, %r1192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1215, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1216, %r1192, %r1215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1219, %r1211, %r1216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1222, %r643, %r1213, %r1203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1227, %r1203, %r1226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1230, %r1222, %r1227;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1237, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r1235, %r632, %r1237, %r1238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1239, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1240, %r1238, %r1239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1243, %r1235, %r1240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1246, %r643, %r1237, %r1249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1250, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1251, %r1249, %r1250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1254, %r1246, %r1251;
	// end inline asm
	shr.u32 	%r1259, %r1237, 8;
	// begin inline asm
	lop3.b32 %r1257, %r632, %r1259, %r1238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1261, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1262, %r1238, %r1261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1265, %r1257, %r1262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1268, %r643, %r1259, %r1249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1272, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1273, %r1249, %r1272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1276, %r1268, %r1273;
	// end inline asm
	// begin inline asm
	mov.b32 %r1284, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1295, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1283, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r1281, %r632, %r1283, %r1284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1285, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1286, %r1284, %r1285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1289, %r1281, %r1286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1292, %r643, %r1283, %r1295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1296, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1297, %r1295, %r1296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1300, %r1292, %r1297;
	// end inline asm
	shr.u32 	%r1305, %r1283, 8;
	// begin inline asm
	lop3.b32 %r1303, %r632, %r1305, %r1284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1307, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1308, %r1284, %r1307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1311, %r1303, %r1308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1314, %r643, %r1305, %r1295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1318, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1319, %r1295, %r1318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1322, %r1314, %r1319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1327, %r1325, %r1151, %r1077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1333, %r1331, %r1162, %r1081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1339, %r1337, %r1173, %r1085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1343, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1345, %r1343, %r1184, %r1089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1351, %r1349, %r1197, %r1093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1357, %r1355, %r1208, %r1097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1363, %r1361, %r1219, %r1101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1369, %r1367, %r1230, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1373, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1375, %r1373, %r1243, %r1109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1379, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1381, %r1379, %r1254, %r1113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1387, %r1385, %r1265, %r1117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1391, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1393, %r1391, %r1276, %r1121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1397, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1399, %r1397, %r1289, %r1125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1403, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1405, %r1403, %r1300, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1409, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1411, %r1409, %r1311, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1415, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1417, %r1415, %r1322, %r1137;
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1425, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r1423, %r632, %r1425, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1428, %r1426, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1431, %r1423, %r1428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1434, %r643, %r1425, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1439, %r1437, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1442, %r1434, %r1439;
	// end inline asm
	shr.u32 	%r1447, %r1425, 8;
	// begin inline asm
	lop3.b32 %r1445, %r632, %r1447, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1426, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1456, %r643, %r1447, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1437, %r1460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1464, %r1456, %r1461;
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1471, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r1469, %r632, %r1471, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1474, %r1472, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1477, %r1469, %r1474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1480, %r643, %r1471, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1483, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1488, %r1480, %r1485;
	// end inline asm
	shr.u32 	%r1493, %r1471, 8;
	// begin inline asm
	lop3.b32 %r1491, %r632, %r1493, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1472, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1502, %r643, %r1493, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1483, %r1506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1510, %r1502, %r1507;
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1529, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1517, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r1515, %r632, %r1517, %r1518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1518, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1523, %r1515, %r1520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1526, %r643, %r1517, %r1529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1531, %r1529, %r1530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1534, %r1526, %r1531;
	// end inline asm
	shr.u32 	%r1539, %r1517, 8;
	// begin inline asm
	lop3.b32 %r1537, %r632, %r1539, %r1518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1518, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1548, %r643, %r1539, %r1529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1553, %r1529, %r1552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1556, %r1548, %r1553;
	// end inline asm
	// begin inline asm
	mov.b32 %r1564, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r1575, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r1563, %r8004, -2004318072;
	// begin inline asm
	lop3.b32 %r1561, %r632, %r1563, %r1564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1566, %r1564, %r1565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1569, %r1561, %r1566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1572, %r643, %r1563, %r1575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1577, %r1575, %r1576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1580, %r1572, %r1577;
	// end inline asm
	shr.u32 	%r1585, %r1563, 8;
	// begin inline asm
	lop3.b32 %r1583, %r632, %r1585, %r1564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1564, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1594, %r643, %r1585, %r1575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1599, %r1575, %r1598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1602, %r1594, %r1599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1676, %r245, %r1431, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1673, %r245, %r1442, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1685, %r245, %r1453, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1682, %r245, %r1464, %r1345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1694, %r245, %r1477, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1691, %r245, %r1488, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1703, %r245, %r1499, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r245, %r1510, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r245, %r1523, %r1375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1709, %r245, %r1534, %r1381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r245, %r1545, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1718, %r245, %r1556, %r1393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r245, %r1569, %r1399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r245, %r1580, %r1405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r245, %r1591, %r1411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r245, %r1602, %r1417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1669, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1671, %r1669, %r1673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1674, %r266, %r1676, %r1671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1678, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1680, %r1678, %r1682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1683, %r266, %r1685, %r1680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1687, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1689, %r1687, %r1691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r266, %r1694, %r1689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1696, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1698, %r1696, %r1700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1701, %r266, %r1703, %r1698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1705, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1707, %r1705, %r1709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r266, %r1712, %r1707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1714, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1716, %r1714, %r1718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r266, %r1721, %r1716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1723, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1725, %r1723, %r1727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r266, %r1730, %r1725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1732, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1734, %r1732, %r1736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r266, %r1739, %r1734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1741, %r269, %r1676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r266, %r1673, %r1741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1748, %r269, %r1685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r266, %r1682, %r1748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1755, %r269, %r1694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r266, %r1691, %r1755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1762, %r269, %r1703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1765, %r266, %r1700, %r1762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1769, %r269, %r1712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r266, %r1709, %r1769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1776, %r269, %r1721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r266, %r1718, %r1776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1783, %r269, %r1730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r266, %r1727, %r1783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1790, %r269, %r1739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r266, %r1736, %r1790;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1884, %r1881}, {%r325, %r331, %r328, %r334}, {%r1674, %r1744}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1893, %r1890}, {%r325, %r331, %r328, %r334}, {%r1683, %r1751}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1902, %r1899}, {%r325, %r331, %r328, %r334}, {%r1692, %r1758}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1911, %r1908}, {%r325, %r331, %r328, %r334}, {%r1701, %r1765}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1920, %r1917}, {%r325, %r331, %r328, %r334}, {%r1710, %r1772}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1929, %r1926}, {%r325, %r331, %r328, %r334}, {%r1719, %r1779}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1938, %r1935}, {%r325, %r331, %r328, %r334}, {%r1728, %r1786}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1947, %r1944}, {%r325, %r331, %r328, %r334}, {%r1737, %r1793}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1877, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1879, %r1877, %r1881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r369, %r1884, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1886, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1888, %r1886, %r1890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r369, %r1893, %r1888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1895, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1897, %r1895, %r1899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1900, %r369, %r1902, %r1897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1904, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1906, %r1904, %r1908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1909, %r369, %r1911, %r1906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1913, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1915, %r1913, %r1917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1918, %r369, %r1920, %r1915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1922, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1924, %r1922, %r1926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1927, %r369, %r1929, %r1924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1931, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1933, %r1931, %r1935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1936, %r369, %r1938, %r1933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1940, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1942, %r1940, %r1944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1945, %r369, %r1947, %r1942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1949, %r372, %r1884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1952, %r369, %r1881, %r1949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1956, %r372, %r1893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1959, %r369, %r1890, %r1956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1963, %r372, %r1902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1966, %r369, %r1899, %r1963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1970, %r372, %r1911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1973, %r369, %r1908, %r1970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1977, %r372, %r1920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1980, %r369, %r1917, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1984, %r372, %r1929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1987, %r369, %r1926, %r1984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1991, %r372, %r1938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1994, %r369, %r1935, %r1991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1998, %r372, %r1947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2001, %r369, %r1944, %r1998;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2005, %r2006}, {%r403, %r409, %r406, %r412}, {%r1882, %r1952}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2015, %r2016}, {%r403, %r409, %r406, %r412}, {%r1891, %r1959}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2025, %r2026}, {%r403, %r409, %r406, %r412}, {%r1900, %r1966}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2035, %r2036}, {%r403, %r409, %r406, %r412}, {%r1909, %r1973}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2045, %r2046}, {%r403, %r409, %r406, %r412}, {%r1918, %r1980}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2055, %r2056}, {%r403, %r409, %r406, %r412}, {%r1927, %r1987}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2065, %r2066}, {%r403, %r409, %r406, %r412}, {%r1936, %r1994}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2075, %r2076}, {%r403, %r409, %r406, %r412}, {%r1945, %r2001}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2085, %r112, %r2005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2088, %r112, %r2006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2091, %r112, %r2015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2094, %r112, %r2016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2097, %r112, %r2025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2100, %r112, %r2026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2103, %r112, %r2035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2106, %r112, %r2036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2109, %r112, %r2045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2112, %r112, %r2046;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2115, %r112, %r2055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2118, %r112, %r2056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2121, %r112, %r2065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2124, %r112, %r2066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2127, %r112, %r2075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2130, %r112, %r2076;
	// end inline asm
	mov.u16 	%rs205, -14592;
	// begin inline asm
	mov.b32 %r2133, {%rs205, %rs205};
	// end inline asm
	mov.u16 	%rs207, 18176;
	// begin inline asm
	mov.b32 %r2134, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2135, %r2085, %r2133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2138, %r2135, %r2134;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2143, %r2088, %r2141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2146, %r2143, %r2142;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2151, %r2091, %r2149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2154, %r2151, %r2150;
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2159, %r2094, %r2157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2162, %r2159, %r2158;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2167, %r2097, %r2165;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2170, %r2167, %r2166;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2175, %r2100, %r2173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2178, %r2175, %r2174;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2183, %r2103, %r2181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2186, %r2183, %r2182;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2191, %r2106, %r2189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2194, %r2191, %r2190;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2199, %r2109, %r2197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2202, %r2199, %r2198;
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2207, %r2112, %r2205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2210, %r2207, %r2206;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2215, %r2115, %r2213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2218, %r2215, %r2214;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2223, %r2118, %r2221;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2226, %r2223, %r2222;
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2231, %r2121, %r2229;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2234, %r2231, %r2230;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2239, %r2124, %r2237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2242, %r2239, %r2238;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2247, %r2127, %r2245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2250, %r2247, %r2246;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2255, %r2130, %r2253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2258, %r2255, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2263, %r2264, %r2262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2138, %r2263;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2264, %r2269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2273, %r2146, %r2270;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2264, %r2276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2154, %r2277;
	// end inline asm
	// begin inline asm
	mov.b32 %r2283, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2284, %r2264, %r2283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2287, %r2162, %r2284;
	// end inline asm
	mov.u32 	%r2293, 25152;
	// begin inline asm
	prmt.b32 %r2290, %r2266, %r2280, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2294, %r2273, %r2287, %r2293;
	// end inline asm
	shl.b32 	%r2301, %r2294, 4;
	mov.u32 	%r2299, 252645135;
	// begin inline asm
	lop3.b32 %r2298, %r2299, %r2290, %r2301, 202;
	// end inline asm
	xor.b32  	%r7855, %r2298, -2004318072;
	// begin inline asm
	mov.b32 %r2305, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2305, %r2303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2170, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2305, %r2310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2314, %r2178, %r2311;
	// end inline asm
	// begin inline asm
	mov.b32 %r2317, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2305, %r2317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2321, %r2186, %r2318;
	// end inline asm
	// begin inline asm
	mov.b32 %r2324, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2325, %r2305, %r2324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2328, %r2194, %r2325;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2331, %r2307, %r2321, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2335, %r2314, %r2328, %r2293;
	// end inline asm
	shl.b32 	%r2342, %r2335, 4;
	// begin inline asm
	lop3.b32 %r2339, %r2299, %r2331, %r2342, 202;
	// end inline asm
	xor.b32  	%r7856, %r2339, -2004318072;
	// begin inline asm
	mov.b32 %r2346, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2346, %r2344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2348, %r2202, %r2345;
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2346, %r2351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2355, %r2210, %r2352;
	// end inline asm
	// begin inline asm
	mov.b32 %r2358, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2359, %r2346, %r2358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2218, %r2359;
	// end inline asm
	// begin inline asm
	mov.b32 %r2365, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2366, %r2346, %r2365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2369, %r2226, %r2366;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2372, %r2348, %r2362, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2376, %r2355, %r2369, %r2293;
	// end inline asm
	shl.b32 	%r2383, %r2376, 4;
	// begin inline asm
	lop3.b32 %r2380, %r2299, %r2372, %r2383, 202;
	// end inline asm
	xor.b32  	%r7857, %r2380, -2004318072;
	// begin inline asm
	mov.b32 %r2387, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2387, %r2385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2389, %r2234, %r2386;
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2393, %r2387, %r2392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2396, %r2242, %r2393;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2387, %r2399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2403, %r2250, %r2400;
	// end inline asm
	// begin inline asm
	mov.b32 %r2406, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2407, %r2387, %r2406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2258, %r2407;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2413, %r2389, %r2403, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2417, %r2396, %r2410, %r2293;
	// end inline asm
	shl.b32 	%r2424, %r2417, 4;
	// begin inline asm
	lop3.b32 %r2421, %r2299, %r2413, %r2424, 202;
	// end inline asm
	xor.b32  	%r7858, %r2421, -2004318072;
	st.shared.u32 	[%rd145], %r7855;
	st.shared.u32 	[%rd146], %r7856;
	st.shared.u32 	[%rd147], %r7857;
	st.shared.u32 	[%rd148], %r7858;
	ld.shared.u32 	%r7993, [%rd86];
	ld.shared.u32 	%r7994, [%rd88];
	ld.shared.u32 	%r7995, [%rd90];
	ld.shared.u32 	%r7996, [%rd92];
	// begin inline asm
	mov.b32 %r2430, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2441, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2429, %r7993, -2004318072;
	// begin inline asm
	lop3.b32 %r2427, %r632, %r2429, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2430, %r2431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2435, %r2427, %r2432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2438, %r643, %r2429, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2443, %r2441, %r2442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2446, %r2438, %r2443;
	// end inline asm
	shr.u32 	%r2451, %r2429, 8;
	// begin inline asm
	lop3.b32 %r2449, %r632, %r2451, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2454, %r2430, %r2453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2457, %r2449, %r2454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2460, %r643, %r2451, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2465, %r2441, %r2464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2468, %r2460, %r2465;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2475, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r2473, %r632, %r2475, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2478, %r2476, %r2477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2481, %r2473, %r2478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2484, %r643, %r2475, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2489, %r2487, %r2488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2492, %r2484, %r2489;
	// end inline asm
	shr.u32 	%r2497, %r2475, 8;
	// begin inline asm
	lop3.b32 %r2495, %r632, %r2497, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2476, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2506, %r643, %r2497, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2511, %r2487, %r2510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2514, %r2506, %r2511;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2521, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r2519, %r632, %r2521, %r2522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2524, %r2522, %r2523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2527, %r2519, %r2524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2530, %r643, %r2521, %r2533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2535, %r2533, %r2534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2538, %r2530, %r2535;
	// end inline asm
	shr.u32 	%r2543, %r2521, 8;
	// begin inline asm
	lop3.b32 %r2541, %r632, %r2543, %r2522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2546, %r2522, %r2545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2549, %r2541, %r2546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2552, %r643, %r2543, %r2533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2557, %r2533, %r2556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2560, %r2552, %r2557;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r2567, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r2565, %r632, %r2567, %r2568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2569, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2570, %r2568, %r2569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2573, %r2565, %r2570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2576, %r643, %r2567, %r2579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2581, %r2579, %r2580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2584, %r2576, %r2581;
	// end inline asm
	shr.u32 	%r2589, %r2567, 8;
	// begin inline asm
	lop3.b32 %r2587, %r632, %r2589, %r2568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2592, %r2568, %r2591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2595, %r2587, %r2592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2598, %r643, %r2589, %r2579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2603, %r2579, %r2602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2606, %r2598, %r2603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2609, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2611, %r2609, %r2435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2614, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2616, %r2614, %r2446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2619, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2621, %r2619, %r2457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2624, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2626, %r2624, %r2468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2629, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2631, %r2629, %r2481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2634, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2636, %r2634, %r2492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2639, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2641, %r2639, %r2503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2644, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2646, %r2644, %r2514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2649, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2651, %r2649, %r2527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2654, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2656, %r2654, %r2538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2659, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2661, %r2659, %r2549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2664, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2666, %r2664, %r2560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2669, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2671, %r2669, %r2573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2674, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2676, %r2674, %r2584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2679, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2681, %r2679, %r2595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2684, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2686, %r2684, %r2606;
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2691, %r632, %r1145, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2696, %r2694, %r2695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2699, %r2691, %r2696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2702, %r643, %r1145, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2707, %r2705, %r2706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2710, %r2702, %r2707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2713, %r632, %r1167, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2718, %r2694, %r2717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2721, %r2713, %r2718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2724, %r643, %r1167, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2729, %r2705, %r2728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2732, %r2724, %r2729;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2737, %r632, %r1191, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2742, %r2740, %r2741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2745, %r2737, %r2742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2748, %r643, %r1191, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2753, %r2751, %r2752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2756, %r2748, %r2753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2759, %r632, %r1213, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2764, %r2740, %r2763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2767, %r2759, %r2764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2770, %r643, %r1213, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2775, %r2751, %r2774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2778, %r2770, %r2775;
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2783, %r632, %r1237, %r2786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2787, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2788, %r2786, %r2787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2791, %r2783, %r2788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2794, %r643, %r1237, %r2797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2798, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2799, %r2797, %r2798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2802, %r2794, %r2799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2805, %r632, %r1259, %r2786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2810, %r2786, %r2809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2813, %r2805, %r2810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2816, %r643, %r1259, %r2797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2820, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2821, %r2797, %r2820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2824, %r2816, %r2821;
	// end inline asm
	// begin inline asm
	mov.b32 %r2832, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2843, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2829, %r632, %r1283, %r2832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2833, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2834, %r2832, %r2833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2837, %r2829, %r2834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2840, %r643, %r1283, %r2843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2844, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2845, %r2843, %r2844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2848, %r2840, %r2845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2851, %r632, %r1305, %r2832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2855, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2856, %r2832, %r2855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2859, %r2851, %r2856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2862, %r643, %r1305, %r2843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2866, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2867, %r2843, %r2866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2870, %r2862, %r2867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2873, %r209, %r2699, %r2611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2877, %r209, %r2710, %r2616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2881, %r209, %r2721, %r2621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2885, %r209, %r2732, %r2626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2889, %r209, %r2745, %r2631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2893, %r209, %r2756, %r2636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2897, %r209, %r2767, %r2641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r209, %r2778, %r2646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2905, %r209, %r2791, %r2651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2909, %r209, %r2802, %r2656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2913, %r209, %r2813, %r2661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r209, %r2824, %r2666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2921, %r209, %r2837, %r2671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r209, %r2848, %r2676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r209, %r2859, %r2681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r209, %r2870, %r2686;
	// end inline asm
	// begin inline asm
	mov.b32 %r2942, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2953, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2939, %r632, %r1425, %r2942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2943, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2944, %r2942, %r2943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2947, %r2939, %r2944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2950, %r643, %r1425, %r2953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2954, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2955, %r2953, %r2954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2958, %r2950, %r2955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2961, %r632, %r1447, %r2942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2965, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2966, %r2942, %r2965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2969, %r2961, %r2966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2972, %r643, %r1447, %r2953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2976, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2977, %r2953, %r2976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2980, %r2972, %r2977;
	// end inline asm
	// begin inline asm
	mov.b32 %r2988, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r2999, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2985, %r632, %r1471, %r2988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2989, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2990, %r2988, %r2989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2993, %r2985, %r2990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2996, %r643, %r1471, %r2999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3000, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3001, %r2999, %r3000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3004, %r2996, %r3001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3007, %r632, %r1493, %r2988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3011, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3012, %r2988, %r3011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3015, %r3007, %r3012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3018, %r643, %r1493, %r2999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3022, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3023, %r2999, %r3022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3026, %r3018, %r3023;
	// end inline asm
	// begin inline asm
	mov.b32 %r3034, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3045, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3031, %r632, %r1517, %r3034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3035, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3036, %r3034, %r3035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3039, %r3031, %r3036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3042, %r643, %r1517, %r3045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3046, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3047, %r3045, %r3046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3050, %r3042, %r3047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3053, %r632, %r1539, %r3034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3057, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3058, %r3034, %r3057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3061, %r3053, %r3058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3064, %r643, %r1539, %r3045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3068, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3069, %r3045, %r3068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3072, %r3064, %r3069;
	// end inline asm
	// begin inline asm
	mov.b32 %r3080, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3091, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3077, %r632, %r1563, %r3080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3081, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3082, %r3080, %r3081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3085, %r3077, %r3082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3088, %r643, %r1563, %r3091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3092, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3093, %r3091, %r3092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3096, %r3088, %r3093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3099, %r632, %r1585, %r3080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3103, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3104, %r3080, %r3103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3107, %r3099, %r3104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3110, %r643, %r1585, %r3091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3114, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3115, %r3091, %r3114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3118, %r3110, %r3115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3121, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r3121, %r2947, %r2873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3127, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r3127, %r2958, %r2877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3133, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3135, %r3133, %r2969, %r2881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3139, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r3139, %r2980, %r2885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3145, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r3145, %r2993, %r2889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3151, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r3151, %r3004, %r2893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3157, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r3157, %r3015, %r2897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3163, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r3163, %r3026, %r2901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3169, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3171, %r3169, %r3039, %r2905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3175, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3177, %r3175, %r3050, %r2909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3181, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3183, %r3181, %r3061, %r2913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3187, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3189, %r3187, %r3072, %r2917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3193, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3195, %r3193, %r3085, %r2921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3199, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3201, %r3199, %r3096, %r2925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3205, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3207, %r3205, %r3107, %r2929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3211, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3213, %r3211, %r3118, %r2933;
	// end inline asm
	// begin inline asm
	mov.b32 %r3222, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3233, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3219, %r632, %r633, %r3222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3223, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3224, %r3222, %r3223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3227, %r3219, %r3224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3230, %r643, %r633, %r3233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3234, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3235, %r3233, %r3234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3238, %r3230, %r3235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3241, %r632, %r655, %r3222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3245, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3246, %r3222, %r3245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3249, %r3241, %r3246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3252, %r643, %r655, %r3233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3256, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3257, %r3233, %r3256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3260, %r3252, %r3257;
	// end inline asm
	// begin inline asm
	mov.b32 %r3268, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3279, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3265, %r632, %r679, %r3268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3269, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3270, %r3268, %r3269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3273, %r3265, %r3270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3276, %r643, %r679, %r3279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3280, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3281, %r3279, %r3280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3284, %r3276, %r3281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3287, %r632, %r701, %r3268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3291, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3292, %r3268, %r3291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3295, %r3287, %r3292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3298, %r643, %r701, %r3279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3302, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3303, %r3279, %r3302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3306, %r3298, %r3303;
	// end inline asm
	// begin inline asm
	mov.b32 %r3314, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3325, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3311, %r632, %r725, %r3314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3315, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3316, %r3314, %r3315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3319, %r3311, %r3316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3322, %r643, %r725, %r3325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3326, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3327, %r3325, %r3326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3330, %r3322, %r3327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3333, %r632, %r747, %r3314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3337, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3338, %r3314, %r3337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3341, %r3333, %r3338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3344, %r643, %r747, %r3325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3348, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3349, %r3325, %r3348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3352, %r3344, %r3349;
	// end inline asm
	// begin inline asm
	mov.b32 %r3360, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r3371, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3357, %r632, %r771, %r3360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3361, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3362, %r3360, %r3361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3365, %r3357, %r3362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3368, %r643, %r771, %r3371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3372, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3373, %r3371, %r3372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3376, %r3368, %r3373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3379, %r632, %r793, %r3360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3383, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3384, %r3360, %r3383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3387, %r3379, %r3384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3390, %r643, %r793, %r3371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3394, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3395, %r3371, %r3394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3398, %r3390, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r245, %r3227, %r3123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r245, %r3238, %r3129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r245, %r3249, %r3135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r245, %r3260, %r3141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r245, %r3273, %r3147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r245, %r3284, %r3153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r245, %r3295, %r3159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r245, %r3306, %r3165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r245, %r3319, %r3171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r245, %r3330, %r3177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r245, %r3341, %r3183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r245, %r3352, %r3189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r245, %r3365, %r3195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3523, %r245, %r3376, %r3201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r245, %r3387, %r3207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r245, %r3398, %r3213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3465, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r3465, %r3469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r266, %r3472, %r3467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3474, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r3474, %r3478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r266, %r3481, %r3476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3483, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3485, %r3483, %r3487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r266, %r3490, %r3485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3492, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r3492, %r3496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r266, %r3499, %r3494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3501, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3503, %r3501, %r3505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r266, %r3508, %r3503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3510, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r3510, %r3514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r266, %r3517, %r3512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3519, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3521, %r3519, %r3523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r266, %r3526, %r3521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3528, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3530, %r3528, %r3532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r266, %r3535, %r3530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3537, %r269, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r266, %r3469, %r3537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r269, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r266, %r3478, %r3544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3551, %r269, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r266, %r3487, %r3551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3558, %r269, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3561, %r266, %r3496, %r3558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3565, %r269, %r3508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3568, %r266, %r3505, %r3565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3572, %r269, %r3517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3575, %r266, %r3514, %r3572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3579, %r269, %r3526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3582, %r266, %r3523, %r3579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r269, %r3535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r266, %r3532, %r3586;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3680, %r3677}, {%r325, %r331, %r328, %r334}, {%r3470, %r3540}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3689, %r3686}, {%r325, %r331, %r328, %r334}, {%r3479, %r3547}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3698, %r3695}, {%r325, %r331, %r328, %r334}, {%r3488, %r3554}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3707, %r3704}, {%r325, %r331, %r328, %r334}, {%r3497, %r3561}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3716, %r3713}, {%r325, %r331, %r328, %r334}, {%r3506, %r3568}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3725, %r3722}, {%r325, %r331, %r328, %r334}, {%r3515, %r3575}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3734, %r3731}, {%r325, %r331, %r328, %r334}, {%r3524, %r3582}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3743, %r3740}, {%r325, %r331, %r328, %r334}, {%r3533, %r3589}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3673, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3675, %r3673, %r3677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3678, %r369, %r3680, %r3675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3682, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3684, %r3682, %r3686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3687, %r369, %r3689, %r3684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3691, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3693, %r3691, %r3695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3696, %r369, %r3698, %r3693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3700, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3702, %r3700, %r3704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3705, %r369, %r3707, %r3702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3709, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3711, %r3709, %r3713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3714, %r369, %r3716, %r3711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3718, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3720, %r3718, %r3722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3723, %r369, %r3725, %r3720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3727, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3729, %r3727, %r3731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3732, %r369, %r3734, %r3729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3736, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3738, %r3736, %r3740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3741, %r369, %r3743, %r3738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3745, %r372, %r3680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3748, %r369, %r3677, %r3745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3752, %r372, %r3689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3755, %r369, %r3686, %r3752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3759, %r372, %r3698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3762, %r369, %r3695, %r3759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3766, %r372, %r3707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3769, %r369, %r3704, %r3766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3773, %r372, %r3716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3776, %r369, %r3713, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3780, %r372, %r3725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3783, %r369, %r3722, %r3780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3787, %r372, %r3734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3790, %r369, %r3731, %r3787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3794, %r372, %r3743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3797, %r369, %r3740, %r3794;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3801, %r3802}, {%r403, %r409, %r406, %r412}, {%r3678, %r3748}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3811, %r3812}, {%r403, %r409, %r406, %r412}, {%r3687, %r3755}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3821, %r3822}, {%r403, %r409, %r406, %r412}, {%r3696, %r3762}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3831, %r3832}, {%r403, %r409, %r406, %r412}, {%r3705, %r3769}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3841, %r3842}, {%r403, %r409, %r406, %r412}, {%r3714, %r3776}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3851, %r3852}, {%r403, %r409, %r406, %r412}, {%r3723, %r3783}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3862}, {%r403, %r409, %r406, %r412}, {%r3732, %r3790}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3871, %r3872}, {%r403, %r409, %r406, %r412}, {%r3741, %r3797}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3881, %r112, %r3801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3884, %r112, %r3802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3887, %r112, %r3811;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3890, %r112, %r3812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3893, %r112, %r3821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3896, %r112, %r3822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3899, %r112, %r3831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3902, %r112, %r3832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3905, %r112, %r3841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3908, %r112, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3911, %r112, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3914, %r112, %r3852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3917, %r112, %r3861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3920, %r112, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3923, %r112, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3926, %r112, %r3872;
	// end inline asm
	// begin inline asm
	mov.b32 %r3929, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3931, %r3881, %r3929;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3934, %r3931, %r3930;
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3939, %r3884, %r3937;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3942, %r3939, %r3938;
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3947, %r3887, %r3945;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3950, %r3947, %r3946;
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3955, %r3890, %r3953;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3958, %r3955, %r3954;
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3963, %r3893, %r3961;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3966, %r3963, %r3962;
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3971, %r3896, %r3969;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3974, %r3971, %r3970;
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3979, %r3899, %r3977;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3982, %r3979, %r3978;
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3987, %r3902, %r3985;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3990, %r3987, %r3986;
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3995, %r3905, %r3993;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3998, %r3995, %r3994;
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4003, %r3908, %r4001;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4006, %r4003, %r4002;
	// end inline asm
	// begin inline asm
	mov.b32 %r4009, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4011, %r3911, %r4009;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4014, %r4011, %r4010;
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4019, %r3914, %r4017;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4022, %r4019, %r4018;
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4027, %r3917, %r4025;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4030, %r4027, %r4026;
	// end inline asm
	// begin inline asm
	mov.b32 %r4033, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4035, %r3920, %r4033;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4038, %r4035, %r4034;
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4043, %r3923, %r4041;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4046, %r4043, %r4042;
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4051, %r3926, %r4049;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4054, %r4051, %r4050;
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4059, %r4060, %r4058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4062, %r3934, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4066, %r4060, %r4065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4069, %r3942, %r4066;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4073, %r4060, %r4072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4076, %r3950, %r4073;
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4080, %r4060, %r4079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4083, %r3958, %r4080;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4086, %r4062, %r4076, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4090, %r4069, %r4083, %r2293;
	// end inline asm
	shl.b32 	%r4097, %r4090, 4;
	// begin inline asm
	lop3.b32 %r4094, %r2299, %r4086, %r4097, 202;
	// end inline asm
	xor.b32  	%r7859, %r4094, -2004318072;
	// begin inline asm
	mov.b32 %r4101, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r4101, %r4099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4103, %r3966, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r4101, %r4106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4110, %r3974, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4114, %r4101, %r4113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4117, %r3982, %r4114;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4121, %r4101, %r4120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4124, %r3990, %r4121;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4127, %r4103, %r4117, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4131, %r4110, %r4124, %r2293;
	// end inline asm
	shl.b32 	%r4138, %r4131, 4;
	// begin inline asm
	lop3.b32 %r4135, %r2299, %r4127, %r4138, 202;
	// end inline asm
	xor.b32  	%r7860, %r4135, -2004318072;
	// begin inline asm
	mov.b32 %r4142, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4141, %r4142, %r4140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4144, %r3998, %r4141;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4148, %r4142, %r4147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4151, %r4006, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4155, %r4142, %r4154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4158, %r4014, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4162, %r4142, %r4161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4165, %r4022, %r4162;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4168, %r4144, %r4158, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4172, %r4151, %r4165, %r2293;
	// end inline asm
	shl.b32 	%r4179, %r4172, 4;
	// begin inline asm
	lop3.b32 %r4176, %r2299, %r4168, %r4179, 202;
	// end inline asm
	xor.b32  	%r7861, %r4176, -2004318072;
	// begin inline asm
	mov.b32 %r4183, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4182, %r4183, %r4181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4185, %r4030, %r4182;
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4189, %r4183, %r4188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4192, %r4038, %r4189;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4196, %r4183, %r4195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4199, %r4046, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4203, %r4183, %r4202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4206, %r4054, %r4203;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4209, %r4185, %r4199, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4213, %r4192, %r4206, %r2293;
	// end inline asm
	shl.b32 	%r4220, %r4213, 4;
	// begin inline asm
	lop3.b32 %r4217, %r2299, %r4209, %r4220, 202;
	// end inline asm
	xor.b32  	%r7862, %r4217, -2004318072;
	st.shared.u32 	[%rd145], %r7859;
	st.shared.u32 	[%rd146], %r7860;
	st.shared.u32 	[%rd147], %r7861;
	st.shared.u32 	[%rd148], %r7862;
	ld.shared.u32 	%r7997, [%rd86];
	ld.shared.u32 	%r7998, [%rd88];
	ld.shared.u32 	%r7999, [%rd90];
	ld.shared.u32 	%r8000, [%rd92];
	// begin inline asm
	mov.b32 %r4226, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4225, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r4223, %r632, %r4225, %r4226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4228, %r4226, %r4227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4231, %r4223, %r4228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4234, %r643, %r4225, %r4237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4239, %r4237, %r4238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4242, %r4234, %r4239;
	// end inline asm
	shr.u32 	%r4247, %r4225, 8;
	// begin inline asm
	lop3.b32 %r4245, %r632, %r4247, %r4226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4250, %r4226, %r4249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4253, %r4245, %r4250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4256, %r643, %r4247, %r4237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4261, %r4237, %r4260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4264, %r4256, %r4261;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4271, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r4269, %r632, %r4271, %r4272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4274, %r4272, %r4273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4277, %r4269, %r4274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4280, %r643, %r4271, %r4283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4285, %r4283, %r4284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4288, %r4280, %r4285;
	// end inline asm
	shr.u32 	%r4293, %r4271, 8;
	// begin inline asm
	lop3.b32 %r4291, %r632, %r4293, %r4272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4296, %r4272, %r4295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4299, %r4291, %r4296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4302, %r643, %r4293, %r4283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4307, %r4283, %r4306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4310, %r4302, %r4307;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4317, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r4315, %r632, %r4317, %r4318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4320, %r4318, %r4319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4323, %r4315, %r4320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4326, %r643, %r4317, %r4329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4331, %r4329, %r4330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4334, %r4326, %r4331;
	// end inline asm
	shr.u32 	%r4339, %r4317, 8;
	// begin inline asm
	lop3.b32 %r4337, %r632, %r4339, %r4318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4342, %r4318, %r4341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4345, %r4337, %r4342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4348, %r643, %r4339, %r4329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4353, %r4329, %r4352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4356, %r4348, %r4353;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r4363, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r4361, %r632, %r4363, %r4364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4365, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4366, %r4364, %r4365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4369, %r4361, %r4366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4372, %r643, %r4363, %r4375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4375, %r4376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4380, %r4372, %r4377;
	// end inline asm
	shr.u32 	%r4385, %r4363, 8;
	// begin inline asm
	lop3.b32 %r4383, %r632, %r4385, %r4364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4364, %r4387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4391, %r4383, %r4388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4394, %r643, %r4385, %r4375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4375, %r4398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4402, %r4394, %r4399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4405, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4407, %r4405, %r4231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4410, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4412, %r4410, %r4242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4415, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4417, %r4415, %r4253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4420, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4422, %r4420, %r4264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4425, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4427, %r4425, %r4277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4430, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4432, %r4430, %r4288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4435, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4437, %r4435, %r4299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4440, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4442, %r4440, %r4310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4445, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4447, %r4445, %r4323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4450, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4452, %r4450, %r4334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4455, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4457, %r4455, %r4345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4460, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4462, %r4460, %r4356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4465, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4467, %r4465, %r4369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4470, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4472, %r4470, %r4380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4475, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4477, %r4475, %r4391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4480, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4482, %r4480, %r4402;
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4487, %r632, %r1425, %r4490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4490, %r4491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4495, %r4487, %r4492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4498, %r643, %r1425, %r4501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4501, %r4502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4506, %r4498, %r4503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4509, %r632, %r1447, %r4490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4490, %r4513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4517, %r4509, %r4514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4520, %r643, %r1447, %r4501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4501, %r4524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4528, %r4520, %r4525;
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4533, %r632, %r1471, %r4536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4536, %r4537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4541, %r4533, %r4538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4544, %r643, %r1471, %r4547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4549, %r4547, %r4548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4552, %r4544, %r4549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4555, %r632, %r1493, %r4536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4559, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4536, %r4559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4563, %r4555, %r4560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4566, %r643, %r1493, %r4547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4547, %r4570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4574, %r4566, %r4571;
	// end inline asm
	// begin inline asm
	mov.b32 %r4582, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4593, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4579, %r632, %r1517, %r4582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4583, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4582, %r4583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4587, %r4579, %r4584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4590, %r643, %r1517, %r4593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4594, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4593, %r4594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4598, %r4590, %r4595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4601, %r632, %r1539, %r4582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4605, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4606, %r4582, %r4605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4609, %r4601, %r4606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4612, %r643, %r1539, %r4593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4616, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4617, %r4593, %r4616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4620, %r4612, %r4617;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4625, %r632, %r1563, %r4628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4629, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4628, %r4629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4633, %r4625, %r4630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4636, %r643, %r1563, %r4639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4639, %r4640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4644, %r4636, %r4641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4647, %r632, %r1585, %r4628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4628, %r4651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4655, %r4647, %r4652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4658, %r643, %r1585, %r4639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4639, %r4662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4666, %r4658, %r4663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4669, %r209, %r4495, %r4407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4673, %r209, %r4506, %r4412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4677, %r209, %r4517, %r4417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4681, %r209, %r4528, %r4422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4685, %r209, %r4541, %r4427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4689, %r209, %r4552, %r4432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4693, %r209, %r4563, %r4437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4697, %r209, %r4574, %r4442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4701, %r209, %r4587, %r4447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4705, %r209, %r4598, %r4452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4709, %r209, %r4609, %r4457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4713, %r209, %r4620, %r4462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4717, %r209, %r4633, %r4467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4721, %r209, %r4644, %r4472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4725, %r209, %r4655, %r4477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4729, %r209, %r4666, %r4482;
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4735, %r632, %r633, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4740, %r4738, %r4739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4743, %r4735, %r4740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4746, %r643, %r633, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4751, %r4749, %r4750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4754, %r4746, %r4751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4757, %r632, %r655, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4738, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4768, %r643, %r655, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4749, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4781, %r632, %r679, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4786, %r4784, %r4785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4789, %r4781, %r4786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4792, %r643, %r679, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4797, %r4795, %r4796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4800, %r4792, %r4797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4803, %r632, %r701, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4784, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4814, %r643, %r701, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4795, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4827, %r632, %r725, %r4830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4831, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4832, %r4830, %r4831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4835, %r4827, %r4832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4838, %r643, %r725, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4843, %r4841, %r4842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4846, %r4838, %r4843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4849, %r632, %r747, %r4830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4854, %r4830, %r4853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4857, %r4849, %r4854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4860, %r643, %r747, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4865, %r4841, %r4864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4868, %r4860, %r4865;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4873, %r632, %r771, %r4876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4877, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4878, %r4876, %r4877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4881, %r4873, %r4878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4884, %r643, %r771, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4889, %r4887, %r4888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4892, %r4884, %r4889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4895, %r632, %r793, %r4876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4900, %r4876, %r4899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4903, %r4895, %r4900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4906, %r643, %r793, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4911, %r4887, %r4910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4914, %r4906, %r4911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4917, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4919, %r4917, %r4743, %r4669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4923, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4925, %r4923, %r4754, %r4673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4929, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4931, %r4929, %r4765, %r4677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4935, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4937, %r4935, %r4776, %r4681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4941, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4943, %r4941, %r4789, %r4685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4947, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4949, %r4947, %r4800, %r4689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4953, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4955, %r4953, %r4811, %r4693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4959, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4961, %r4959, %r4822, %r4697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4965, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4967, %r4965, %r4835, %r4701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4971, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4973, %r4971, %r4846, %r4705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4977, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4979, %r4977, %r4857, %r4709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4983, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4985, %r4983, %r4868, %r4713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4989, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4991, %r4989, %r4881, %r4717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4995, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4997, %r4995, %r4892, %r4721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5001, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5003, %r5001, %r4903, %r4725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5007, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5009, %r5007, %r4914, %r4729;
	// end inline asm
	// begin inline asm
	mov.b32 %r5018, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5015, %r632, %r2429, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5020, %r5018, %r5019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5023, %r5015, %r5020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5026, %r643, %r2429, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5031, %r5029, %r5030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5034, %r5026, %r5031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5037, %r632, %r2451, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5042, %r5018, %r5041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5045, %r5037, %r5042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5048, %r643, %r2451, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5053, %r5029, %r5052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5056, %r5048, %r5053;
	// end inline asm
	// begin inline asm
	mov.b32 %r5064, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5061, %r632, %r2475, %r5064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5065, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5066, %r5064, %r5065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5069, %r5061, %r5066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5072, %r643, %r2475, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5077, %r5075, %r5076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5080, %r5072, %r5077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5083, %r632, %r2497, %r5064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5087, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5088, %r5064, %r5087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5091, %r5083, %r5088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5094, %r643, %r2497, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5098, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5099, %r5075, %r5098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5102, %r5094, %r5099;
	// end inline asm
	// begin inline asm
	mov.b32 %r5110, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5121, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5107, %r632, %r2521, %r5110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5111, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5112, %r5110, %r5111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5115, %r5107, %r5112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5118, %r643, %r2521, %r5121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5122, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5123, %r5121, %r5122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5126, %r5118, %r5123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5129, %r632, %r2543, %r5110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5133, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5134, %r5110, %r5133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5137, %r5129, %r5134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5140, %r643, %r2543, %r5121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5144, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5145, %r5121, %r5144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5148, %r5140, %r5145;
	// end inline asm
	// begin inline asm
	mov.b32 %r5156, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5167, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5153, %r632, %r2567, %r5156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5157, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5158, %r5156, %r5157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5161, %r5153, %r5158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5164, %r643, %r2567, %r5167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5168, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5169, %r5167, %r5168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5172, %r5164, %r5169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5175, %r632, %r2589, %r5156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5179, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5180, %r5156, %r5179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5183, %r5175, %r5180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5186, %r643, %r2589, %r5167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5190, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5191, %r5167, %r5190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5194, %r5186, %r5191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5268, %r245, %r5023, %r4919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5265, %r245, %r5034, %r4925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5277, %r245, %r5045, %r4931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5274, %r245, %r5056, %r4937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5286, %r245, %r5069, %r4943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5283, %r245, %r5080, %r4949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5295, %r245, %r5091, %r4955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5292, %r245, %r5102, %r4961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5304, %r245, %r5115, %r4967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5301, %r245, %r5126, %r4973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5313, %r245, %r5137, %r4979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5310, %r245, %r5148, %r4985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5322, %r245, %r5161, %r4991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5319, %r245, %r5172, %r4997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5331, %r245, %r5183, %r5003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5328, %r245, %r5194, %r5009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5261, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5263, %r5261, %r5265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5266, %r266, %r5268, %r5263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5270, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5272, %r5270, %r5274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5275, %r266, %r5277, %r5272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5279, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5281, %r5279, %r5283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5284, %r266, %r5286, %r5281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5288, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5290, %r5288, %r5292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5293, %r266, %r5295, %r5290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5297, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5299, %r5297, %r5301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5302, %r266, %r5304, %r5299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5306, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5308, %r5306, %r5310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5311, %r266, %r5313, %r5308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5315, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5317, %r5315, %r5319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5320, %r266, %r5322, %r5317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5324, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5326, %r5324, %r5328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5329, %r266, %r5331, %r5326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5333, %r269, %r5268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5336, %r266, %r5265, %r5333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5340, %r269, %r5277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5343, %r266, %r5274, %r5340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5347, %r269, %r5286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5350, %r266, %r5283, %r5347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5354, %r269, %r5295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5357, %r266, %r5292, %r5354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5361, %r269, %r5304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5364, %r266, %r5301, %r5361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5368, %r269, %r5313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5371, %r266, %r5310, %r5368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5375, %r269, %r5322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5378, %r266, %r5319, %r5375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5382, %r269, %r5331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5385, %r266, %r5328, %r5382;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5476, %r5473}, {%r325, %r331, %r328, %r334}, {%r5266, %r5336}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5485, %r5482}, {%r325, %r331, %r328, %r334}, {%r5275, %r5343}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5494, %r5491}, {%r325, %r331, %r328, %r334}, {%r5284, %r5350}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5503, %r5500}, {%r325, %r331, %r328, %r334}, {%r5293, %r5357}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5512, %r5509}, {%r325, %r331, %r328, %r334}, {%r5302, %r5364}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5521, %r5518}, {%r325, %r331, %r328, %r334}, {%r5311, %r5371}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5530, %r5527}, {%r325, %r331, %r328, %r334}, {%r5320, %r5378}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5539, %r5536}, {%r325, %r331, %r328, %r334}, {%r5329, %r5385}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5469, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5471, %r5469, %r5473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5474, %r369, %r5476, %r5471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5478, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5480, %r5478, %r5482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5483, %r369, %r5485, %r5480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5487, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5489, %r5487, %r5491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5492, %r369, %r5494, %r5489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5496, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5498, %r5496, %r5500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5501, %r369, %r5503, %r5498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5505, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5507, %r5505, %r5509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5510, %r369, %r5512, %r5507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5514, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5516, %r5514, %r5518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5519, %r369, %r5521, %r5516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5523, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5525, %r5523, %r5527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5528, %r369, %r5530, %r5525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5532, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5534, %r5532, %r5536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5537, %r369, %r5539, %r5534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5541, %r372, %r5476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r369, %r5473, %r5541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5548, %r372, %r5485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r369, %r5482, %r5548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5555, %r372, %r5494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5558, %r369, %r5491, %r5555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5562, %r372, %r5503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5565, %r369, %r5500, %r5562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5569, %r372, %r5512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r369, %r5509, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5576, %r372, %r5521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r369, %r5518, %r5576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5583, %r372, %r5530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r369, %r5527, %r5583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5590, %r372, %r5539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5593, %r369, %r5536, %r5590;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5597, %r5598}, {%r403, %r409, %r406, %r412}, {%r5474, %r5544}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5607, %r5608}, {%r403, %r409, %r406, %r412}, {%r5483, %r5551}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5617, %r5618}, {%r403, %r409, %r406, %r412}, {%r5492, %r5558}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5627, %r5628}, {%r403, %r409, %r406, %r412}, {%r5501, %r5565}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5637, %r5638}, {%r403, %r409, %r406, %r412}, {%r5510, %r5572}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5647, %r5648}, {%r403, %r409, %r406, %r412}, {%r5519, %r5579}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5657, %r5658}, {%r403, %r409, %r406, %r412}, {%r5528, %r5586}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5667, %r5668}, {%r403, %r409, %r406, %r412}, {%r5537, %r5593}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5677, %r112, %r5597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5680, %r112, %r5598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5683, %r112, %r5607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5686, %r112, %r5608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5689, %r112, %r5617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5692, %r112, %r5618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5695, %r112, %r5627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5698, %r112, %r5628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5701, %r112, %r5637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5704, %r112, %r5638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5707, %r112, %r5647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5710, %r112, %r5648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5713, %r112, %r5657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5716, %r112, %r5658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5719, %r112, %r5667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5722, %r112, %r5668;
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5727, %r5677, %r5725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5730, %r5727, %r5726;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5735, %r5680, %r5733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5738, %r5735, %r5734;
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5743, %r5683, %r5741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5746, %r5743, %r5742;
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5751, %r5686, %r5749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5754, %r5751, %r5750;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5759, %r5689, %r5757;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5762, %r5759, %r5758;
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5767, %r5692, %r5765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5770, %r5767, %r5766;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5775, %r5695, %r5773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5778, %r5775, %r5774;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5783, %r5698, %r5781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5786, %r5783, %r5782;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5791, %r5701, %r5789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5794, %r5791, %r5790;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5799, %r5704, %r5797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5802, %r5799, %r5798;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5807, %r5707, %r5805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5810, %r5807, %r5806;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5815, %r5710, %r5813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5818, %r5815, %r5814;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5823, %r5713, %r5821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5826, %r5823, %r5822;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5831, %r5716, %r5829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5834, %r5831, %r5830;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5839, %r5719, %r5837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5842, %r5839, %r5838;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5847, %r5722, %r5845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5850, %r5847, %r5846;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5856, %r5854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5730, %r5855;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5856, %r5861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5738, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5856, %r5868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5746, %r5869;
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5876, %r5856, %r5875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5754, %r5876;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5882, %r5858, %r5872, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5886, %r5865, %r5879, %r2293;
	// end inline asm
	shl.b32 	%r5893, %r5886, 4;
	// begin inline asm
	lop3.b32 %r5890, %r2299, %r5882, %r5893, 202;
	// end inline asm
	xor.b32  	%r7863, %r5890, -2004318072;
	// begin inline asm
	mov.b32 %r5897, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5897, %r5895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5762, %r5896;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5897, %r5902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5770, %r5903;
	// end inline asm
	// begin inline asm
	mov.b32 %r5909, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5897, %r5909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5778, %r5910;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5897, %r5916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5786, %r5917;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5923, %r5899, %r5913, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5927, %r5906, %r5920, %r2293;
	// end inline asm
	shl.b32 	%r5934, %r5927, 4;
	// begin inline asm
	lop3.b32 %r5931, %r2299, %r5923, %r5934, 202;
	// end inline asm
	xor.b32  	%r7864, %r5931, -2004318072;
	// begin inline asm
	mov.b32 %r5938, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5938, %r5936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5794, %r5937;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5938, %r5943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5802, %r5944;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5938, %r5950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5810, %r5951;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5938, %r5957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5961, %r5818, %r5958;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5964, %r5940, %r5954, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5968, %r5947, %r5961, %r2293;
	// end inline asm
	shl.b32 	%r5975, %r5968, 4;
	// begin inline asm
	lop3.b32 %r5972, %r2299, %r5964, %r5975, 202;
	// end inline asm
	xor.b32  	%r7865, %r5972, -2004318072;
	// begin inline asm
	mov.b32 %r5979, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5979, %r5977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5826, %r5978;
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5985, %r5979, %r5984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5834, %r5985;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5979, %r5991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5842, %r5992;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5979, %r5998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6002, %r5850, %r5999;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6005, %r5981, %r5995, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6009, %r5988, %r6002, %r2293;
	// end inline asm
	shl.b32 	%r6016, %r6009, 4;
	// begin inline asm
	lop3.b32 %r6013, %r2299, %r6005, %r6016, 202;
	// end inline asm
	xor.b32  	%r7866, %r6013, -2004318072;
	st.shared.u32 	[%rd145], %r7863;
	st.shared.u32 	[%rd146], %r7864;
	st.shared.u32 	[%rd147], %r7865;
	st.shared.u32 	[%rd148], %r7866;
	ld.shared.u32 	%r8001, [%rd86];
	ld.shared.u32 	%r8002, [%rd88];
	ld.shared.u32 	%r8003, [%rd90];
	ld.shared.u32 	%r8004, [%rd92];
	// begin inline asm
	mov.b32 %r6022, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6021, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r6019, %r632, %r6021, %r6022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6024, %r6022, %r6023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6027, %r6019, %r6024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6030, %r643, %r6021, %r6033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6035, %r6033, %r6034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6038, %r6030, %r6035;
	// end inline asm
	shr.u32 	%r6043, %r6021, 8;
	// begin inline asm
	lop3.b32 %r6041, %r632, %r6043, %r6022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6045, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6046, %r6022, %r6045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6049, %r6041, %r6046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6052, %r643, %r6043, %r6033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6056, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6057, %r6033, %r6056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6060, %r6052, %r6057;
	// end inline asm
	// begin inline asm
	mov.b32 %r6068, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6079, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6067, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r6065, %r632, %r6067, %r6068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6070, %r6068, %r6069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6073, %r6065, %r6070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6076, %r643, %r6067, %r6079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6081, %r6079, %r6080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6084, %r6076, %r6081;
	// end inline asm
	shr.u32 	%r6089, %r6067, 8;
	// begin inline asm
	lop3.b32 %r6087, %r632, %r6089, %r6068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6091, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6092, %r6068, %r6091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6095, %r6087, %r6092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6098, %r643, %r6089, %r6079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6102, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6103, %r6079, %r6102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6106, %r6098, %r6103;
	// end inline asm
	// begin inline asm
	mov.b32 %r6114, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6125, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6113, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r6111, %r632, %r6113, %r6114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6115, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6116, %r6114, %r6115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6119, %r6111, %r6116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6122, %r643, %r6113, %r6125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6126, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6127, %r6125, %r6126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6130, %r6122, %r6127;
	// end inline asm
	shr.u32 	%r6135, %r6113, 8;
	// begin inline asm
	lop3.b32 %r6133, %r632, %r6135, %r6114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6137, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6138, %r6114, %r6137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6141, %r6133, %r6138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6144, %r643, %r6135, %r6125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6148, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6149, %r6125, %r6148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6152, %r6144, %r6149;
	// end inline asm
	// begin inline asm
	mov.b32 %r6160, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6171, {%rs1084, %rs1084};
	// end inline asm
	xor.b32  	%r6159, %r8004, -2004318072;
	// begin inline asm
	lop3.b32 %r6157, %r632, %r6159, %r6160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6161, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6162, %r6160, %r6161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6165, %r6157, %r6162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6168, %r643, %r6159, %r6171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6172, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6173, %r6171, %r6172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6176, %r6168, %r6173;
	// end inline asm
	shr.u32 	%r6181, %r6159, 8;
	// begin inline asm
	lop3.b32 %r6179, %r632, %r6181, %r6160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6183, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6184, %r6160, %r6183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6187, %r6179, %r6184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6190, %r643, %r6181, %r6171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6194, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6195, %r6171, %r6194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6198, %r6190, %r6195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6201, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6203, %r6201, %r6027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6208, %r6206, %r6038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6211, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6213, %r6211, %r6049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6216, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6218, %r6216, %r6060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6221, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6223, %r6221, %r6073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6226, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6228, %r6226, %r6084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6231, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6233, %r6231, %r6095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6236, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6238, %r6236, %r6106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6241, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6243, %r6241, %r6119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6246, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6248, %r6246, %r6130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6251, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6253, %r6251, %r6141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6256, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6258, %r6256, %r6152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6261, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6263, %r6261, %r6165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6266, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6268, %r6266, %r6176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6271, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6273, %r6271, %r6187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6276, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6278, %r6276, %r6198;
	// end inline asm
	// begin inline asm
	mov.b32 %r6286, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6283, %r632, %r633, %r6286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6288, %r6286, %r6287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6291, %r6283, %r6288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6294, %r643, %r633, %r6297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6299, %r6297, %r6298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6302, %r6294, %r6299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6305, %r632, %r655, %r6286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6309, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6310, %r6286, %r6309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6313, %r6305, %r6310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6316, %r643, %r655, %r6297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6321, %r6297, %r6320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6324, %r6316, %r6321;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6329, %r632, %r679, %r6332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6334, %r6332, %r6333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6337, %r6329, %r6334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6340, %r643, %r679, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6345, %r6343, %r6344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6348, %r6340, %r6345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6351, %r632, %r701, %r6332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6356, %r6332, %r6355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6359, %r6351, %r6356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6362, %r643, %r701, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6367, %r6343, %r6366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6370, %r6362, %r6367;
	// end inline asm
	// begin inline asm
	mov.b32 %r6378, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6375, %r632, %r725, %r6378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6380, %r6378, %r6379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6383, %r6375, %r6380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6386, %r643, %r725, %r6389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6390, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6391, %r6389, %r6390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6394, %r6386, %r6391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6397, %r632, %r747, %r6378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6401, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6402, %r6378, %r6401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6405, %r6397, %r6402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6408, %r643, %r747, %r6389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6412, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6413, %r6389, %r6412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6416, %r6408, %r6413;
	// end inline asm
	// begin inline asm
	mov.b32 %r6424, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6421, %r632, %r771, %r6424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6426, %r6424, %r6425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6429, %r6421, %r6426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6432, %r643, %r771, %r6435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6437, %r6435, %r6436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6440, %r6432, %r6437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6443, %r632, %r793, %r6424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6448, %r6424, %r6447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6451, %r6443, %r6448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6454, %r643, %r793, %r6435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6459, %r6435, %r6458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6462, %r6454, %r6459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6465, %r209, %r6291, %r6203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6469, %r209, %r6302, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6473, %r209, %r6313, %r6213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6477, %r209, %r6324, %r6218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6481, %r209, %r6337, %r6223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6485, %r209, %r6348, %r6228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6489, %r209, %r6359, %r6233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6493, %r209, %r6370, %r6238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6497, %r209, %r6383, %r6243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6501, %r209, %r6394, %r6248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6505, %r209, %r6405, %r6253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6509, %r209, %r6416, %r6258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6513, %r209, %r6429, %r6263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6517, %r209, %r6440, %r6268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6521, %r209, %r6451, %r6273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6525, %r209, %r6462, %r6278;
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6531, %r632, %r2429, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6536, %r6534, %r6535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6539, %r6531, %r6536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6542, %r643, %r2429, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6547, %r6545, %r6546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6550, %r6542, %r6547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r632, %r2451, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6534, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r643, %r2451, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6545, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	mov.b32 %r6580, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6577, %r632, %r2475, %r6580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6582, %r6580, %r6581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6585, %r6577, %r6582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6588, %r643, %r2475, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6593, %r6591, %r6592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6596, %r6588, %r6593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6599, %r632, %r2497, %r6580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6604, %r6580, %r6603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6607, %r6599, %r6604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r643, %r2497, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6591, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	mov.b32 %r6626, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6637, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6623, %r632, %r2521, %r6626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6627, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6628, %r6626, %r6627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6631, %r6623, %r6628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6634, %r643, %r2521, %r6637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6638, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6639, %r6637, %r6638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6642, %r6634, %r6639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6645, %r632, %r2543, %r6626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6649, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6650, %r6626, %r6649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6653, %r6645, %r6650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6656, %r643, %r2543, %r6637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6660, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6661, %r6637, %r6660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6664, %r6656, %r6661;
	// end inline asm
	// begin inline asm
	mov.b32 %r6672, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6683, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6669, %r632, %r2567, %r6672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6673, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6674, %r6672, %r6673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6677, %r6669, %r6674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6680, %r643, %r2567, %r6683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6684, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6685, %r6683, %r6684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6688, %r6680, %r6685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6691, %r632, %r2589, %r6672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6695, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6696, %r6672, %r6695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6699, %r6691, %r6696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6702, %r643, %r2589, %r6683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6706, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6707, %r6683, %r6706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6710, %r6702, %r6707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6713, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6715, %r6713, %r6539, %r6465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6719, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6721, %r6719, %r6550, %r6469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6725, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r6725, %r6561, %r6473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6731, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r6731, %r6572, %r6477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r6737, %r6585, %r6481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6743, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r6743, %r6596, %r6485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6749, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r6749, %r6607, %r6489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r6755, %r6618, %r6493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6761, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r6761, %r6631, %r6497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6767, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r6767, %r6642, %r6501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r6773, %r6653, %r6505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6779, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r6779, %r6664, %r6509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6785, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r6785, %r6677, %r6513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r6791, %r6688, %r6517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6797, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r6797, %r6699, %r6521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6803, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r6803, %r6710, %r6525;
	// end inline asm
	// begin inline asm
	mov.b32 %r6814, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6825, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6811, %r632, %r4225, %r6814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6815, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6816, %r6814, %r6815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6819, %r6811, %r6816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6822, %r643, %r4225, %r6825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6826, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6827, %r6825, %r6826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6830, %r6822, %r6827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6833, %r632, %r4247, %r6814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6837, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6838, %r6814, %r6837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6841, %r6833, %r6838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6844, %r643, %r4247, %r6825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6848, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6849, %r6825, %r6848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6852, %r6844, %r6849;
	// end inline asm
	// begin inline asm
	mov.b32 %r6860, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6871, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6857, %r632, %r4271, %r6860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6861, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6862, %r6860, %r6861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6865, %r6857, %r6862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6868, %r643, %r4271, %r6871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6872, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6873, %r6871, %r6872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6876, %r6868, %r6873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6879, %r632, %r4293, %r6860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6883, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6884, %r6860, %r6883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6887, %r6879, %r6884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6890, %r643, %r4293, %r6871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6894, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6895, %r6871, %r6894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6898, %r6890, %r6895;
	// end inline asm
	// begin inline asm
	mov.b32 %r6906, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6917, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6903, %r632, %r4317, %r6906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6907, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6908, %r6906, %r6907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6911, %r6903, %r6908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6914, %r643, %r4317, %r6917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6918, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6919, %r6917, %r6918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6922, %r6914, %r6919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6925, %r632, %r4339, %r6906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6929, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6930, %r6906, %r6929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6933, %r6925, %r6930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6936, %r643, %r4339, %r6917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6940, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6941, %r6917, %r6940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6944, %r6936, %r6941;
	// end inline asm
	// begin inline asm
	mov.b32 %r6952, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r6963, {%rs1084, %rs1084};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6949, %r632, %r4363, %r6952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6953, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6954, %r6952, %r6953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6957, %r6949, %r6954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6960, %r643, %r4363, %r6963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6964, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6965, %r6963, %r6964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6968, %r6960, %r6965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6971, %r632, %r4385, %r6952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6975, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6976, %r6952, %r6975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6979, %r6971, %r6976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6982, %r643, %r4385, %r6963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6986, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6987, %r6963, %r6986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6990, %r6982, %r6987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7064, %r245, %r6819, %r6715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7061, %r245, %r6830, %r6721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7073, %r245, %r6841, %r6727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7070, %r245, %r6852, %r6733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7082, %r245, %r6865, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7079, %r245, %r6876, %r6745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7091, %r245, %r6887, %r6751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7088, %r245, %r6898, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7100, %r245, %r6911, %r6763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7097, %r245, %r6922, %r6769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7109, %r245, %r6933, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7106, %r245, %r6944, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7118, %r245, %r6957, %r6787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7115, %r245, %r6968, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7127, %r245, %r6979, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7124, %r245, %r6990, %r6805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7057, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7059, %r7057, %r7061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7062, %r266, %r7064, %r7059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7066, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7068, %r7066, %r7070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7071, %r266, %r7073, %r7068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7075, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7077, %r7075, %r7079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7080, %r266, %r7082, %r7077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7084, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7086, %r7084, %r7088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7089, %r266, %r7091, %r7086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7093, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7095, %r7093, %r7097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7098, %r266, %r7100, %r7095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7102, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7104, %r7102, %r7106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7107, %r266, %r7109, %r7104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7111, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7113, %r7111, %r7115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7116, %r266, %r7118, %r7113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7120, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7122, %r7120, %r7124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7125, %r266, %r7127, %r7122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7129, %r269, %r7064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7132, %r266, %r7061, %r7129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7136, %r269, %r7073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7139, %r266, %r7070, %r7136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7143, %r269, %r7082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7146, %r266, %r7079, %r7143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7150, %r269, %r7091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7153, %r266, %r7088, %r7150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7157, %r269, %r7100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7160, %r266, %r7097, %r7157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7164, %r269, %r7109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r266, %r7106, %r7164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7171, %r269, %r7118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7174, %r266, %r7115, %r7171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7178, %r269, %r7127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7181, %r266, %r7124, %r7178;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r325, %r331, %r328, %r334}, {%r7062, %r7132}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r325, %r331, %r328, %r334}, {%r7071, %r7139}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r325, %r331, %r328, %r334}, {%r7080, %r7146}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7296}, {%r325, %r331, %r328, %r334}, {%r7089, %r7153}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7305}, {%r325, %r331, %r328, %r334}, {%r7098, %r7160}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7317, %r7314}, {%r325, %r331, %r328, %r334}, {%r7107, %r7167}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7323}, {%r325, %r331, %r328, %r334}, {%r7116, %r7174}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7335, %r7332}, {%r325, %r331, %r328, %r334}, {%r7125, %r7181}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r369, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r369, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r369, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7292, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r7292, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r369, %r7299, %r7294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7301, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r7301, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r369, %r7308, %r7303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7310, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r7310, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r369, %r7317, %r7312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7319, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r7319, %r7323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r369, %r7326, %r7321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7328, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r7328, %r7332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r369, %r7335, %r7330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7337, %r372, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7340, %r369, %r7269, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7344, %r372, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7347, %r369, %r7278, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7351, %r372, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7354, %r369, %r7287, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7358, %r372, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7361, %r369, %r7296, %r7358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7365, %r372, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7368, %r369, %r7305, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7372, %r372, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7375, %r369, %r7314, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7379, %r372, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7382, %r369, %r7323, %r7379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r372, %r7335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7389, %r369, %r7332, %r7386;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7393, %r7394}, {%r403, %r409, %r406, %r412}, {%r7270, %r7340}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7403, %r7404}, {%r403, %r409, %r406, %r412}, {%r7279, %r7347}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7413, %r7414}, {%r403, %r409, %r406, %r412}, {%r7288, %r7354}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7423, %r7424}, {%r403, %r409, %r406, %r412}, {%r7297, %r7361}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7433, %r7434}, {%r403, %r409, %r406, %r412}, {%r7306, %r7368}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7443, %r7444}, {%r403, %r409, %r406, %r412}, {%r7315, %r7375}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7453, %r7454}, {%r403, %r409, %r406, %r412}, {%r7324, %r7382}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7463, %r7464}, {%r403, %r409, %r406, %r412}, {%r7333, %r7389}, {%r7971, %r7971};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7473, %r112, %r7393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7476, %r112, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7479, %r112, %r7403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7482, %r112, %r7404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7485, %r112, %r7413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7488, %r112, %r7414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7491, %r112, %r7423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7494, %r112, %r7424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7497, %r112, %r7433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7500, %r112, %r7434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7503, %r112, %r7443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7506, %r112, %r7444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7509, %r112, %r7453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7512, %r112, %r7454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7515, %r112, %r7463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7518, %r112, %r7464;
	// end inline asm
	// begin inline asm
	mov.b32 %r7521, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7523, %r7473, %r7521;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7526, %r7523, %r7522;
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7531, %r7476, %r7529;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7534, %r7531, %r7530;
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7539, %r7479, %r7537;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7542, %r7539, %r7538;
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7547, %r7482, %r7545;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7550, %r7547, %r7546;
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7555, %r7485, %r7553;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7558, %r7555, %r7554;
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7563, %r7488, %r7561;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7566, %r7563, %r7562;
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7571, %r7491, %r7569;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7574, %r7571, %r7570;
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7579, %r7494, %r7577;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7582, %r7579, %r7578;
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7587, %r7497, %r7585;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7590, %r7587, %r7586;
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7595, %r7500, %r7593;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7598, %r7595, %r7594;
	// end inline asm
	// begin inline asm
	mov.b32 %r7601, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7603, %r7503, %r7601;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7606, %r7603, %r7602;
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7611, %r7506, %r7609;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7614, %r7611, %r7610;
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7619, %r7509, %r7617;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7622, %r7619, %r7618;
	// end inline asm
	// begin inline asm
	mov.b32 %r7625, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7626, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7627, %r7512, %r7625;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7630, %r7627, %r7626;
	// end inline asm
	// begin inline asm
	mov.b32 %r7633, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7635, %r7515, %r7633;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7638, %r7635, %r7634;
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs205, %rs205};
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7643, %r7518, %r7641;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7646, %r7643, %r7642;
	// end inline asm
	// begin inline asm
	mov.b32 %r7652, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7652, %r7650;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7526, %r7651;
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7652, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7534, %r7658;
	// end inline asm
	// begin inline asm
	mov.b32 %r7664, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7665, %r7652, %r7664;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7542, %r7665;
	// end inline asm
	// begin inline asm
	mov.b32 %r7671, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7672, %r7652, %r7671;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7550, %r7672;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7678, %r7654, %r7668, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7682, %r7661, %r7675, %r2293;
	// end inline asm
	shl.b32 	%r7689, %r7682, 4;
	// begin inline asm
	lop3.b32 %r7686, %r2299, %r7678, %r7689, 202;
	// end inline asm
	xor.b32  	%r7867, %r7686, -2004318072;
	// begin inline asm
	mov.b32 %r7693, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7691, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7693, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7558, %r7692;
	// end inline asm
	// begin inline asm
	mov.b32 %r7698, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7693, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7566, %r7699;
	// end inline asm
	// begin inline asm
	mov.b32 %r7705, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7693, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7574, %r7706;
	// end inline asm
	// begin inline asm
	mov.b32 %r7712, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7693, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7582, %r7713;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7719, %r7695, %r7709, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7723, %r7702, %r7716, %r2293;
	// end inline asm
	shl.b32 	%r7730, %r7723, 4;
	// begin inline asm
	lop3.b32 %r7727, %r2299, %r7719, %r7730, 202;
	// end inline asm
	xor.b32  	%r7868, %r7727, -2004318072;
	// begin inline asm
	mov.b32 %r7734, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7732, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7734, %r7732;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7736, %r7590, %r7733;
	// end inline asm
	// begin inline asm
	mov.b32 %r7739, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7734, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7598, %r7740;
	// end inline asm
	// begin inline asm
	mov.b32 %r7746, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7734, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7606, %r7747;
	// end inline asm
	// begin inline asm
	mov.b32 %r7753, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7754, %r7734, %r7753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7757, %r7614, %r7754;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7760, %r7736, %r7750, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7764, %r7743, %r7757, %r2293;
	// end inline asm
	shl.b32 	%r7771, %r7764, 4;
	// begin inline asm
	lop3.b32 %r7768, %r2299, %r7760, %r7771, 202;
	// end inline asm
	xor.b32  	%r7869, %r7768, -2004318072;
	// begin inline asm
	mov.b32 %r7775, {%rs1188, %rs1188};
	// end inline asm
	// begin inline asm
	mov.b32 %r7773, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7774, %r7775, %r7773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7777, %r7622, %r7774;
	// end inline asm
	// begin inline asm
	mov.b32 %r7780, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7781, %r7775, %r7780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7784, %r7630, %r7781;
	// end inline asm
	// begin inline asm
	mov.b32 %r7787, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7775, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7638, %r7788;
	// end inline asm
	// begin inline asm
	mov.b32 %r7794, {%rs1196, %rs1196};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7795, %r7775, %r7794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7798, %r7646, %r7795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7801, %r7777, %r7791, %r2293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7805, %r7784, %r7798, %r2293;
	// end inline asm
	shl.b32 	%r7812, %r7805, 4;
	// begin inline asm
	lop3.b32 %r7809, %r2299, %r7801, %r7812, 202;
	// end inline asm
	xor.b32  	%r7870, %r7809, -2004318072;
	st.shared.u32 	[%rd145], %r7867;
	st.shared.u32 	[%rd146], %r7868;
	st.shared.u32 	[%rd147], %r7869;
	st.shared.u32 	[%rd148], %r7870;
	add.s32 	%r8005, %r8005, 64;
	add.s64 	%rd148, %rd148, 8324;
	add.s64 	%rd147, %rd147, 8324;
	add.s64 	%rd146, %rd146, 8324;
	add.s64 	%rd145, %rd145, 8324;
	add.s32 	%r7992, %r7992, 1;
	setp.eq.s32 	%p216, %r8005, 256;
	@%p216 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit17429
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7876, [%rd5];
	ld.shared.u32 	%r7877, [%rd6+128];
	ld.shared.u32 	%r7884, [%rd6+4];
	ld.shared.u32 	%r7885, [%rd6+132];
	ld.shared.u32 	%r7892, [%rd5+8324];
	ld.shared.u32 	%r7893, [%rd6+8452];
	ld.shared.u32 	%r7900, [%rd6+8328];
	ld.shared.u32 	%r7901, [%rd6+8456];
	ld.shared.u32 	%r7908, [%rd5+16648];
	ld.shared.u32 	%r7909, [%rd6+16776];
	ld.shared.u32 	%r7916, [%rd6+16652];
	ld.shared.u32 	%r7917, [%rd6+16780];
	ld.shared.u32 	%r7924, [%rd5+24972];
	ld.shared.u32 	%r7925, [%rd6+25100];
	ld.shared.u32 	%r7932, [%rd6+24976];
	ld.shared.u32 	%r7933, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7871, %r7876, %r7877, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7875, %r7876, %r7877, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7879, %r7884, %r7885, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7883, %r7884, %r7885, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7887, %r7892, %r7893, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7891, %r7892, %r7893, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7895, %r7900, %r7901, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7899, %r7900, %r7901, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7903, %r7908, %r7909, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7907, %r7908, %r7909, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7911, %r7916, %r7917, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7915, %r7916, %r7917, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7919, %r7924, %r7925, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7923, %r7924, %r7925, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7927, %r7932, %r7933, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7931, %r7932, %r7933, %r547;
	// end inline asm
	selp.b32 	%r7935, %r7875, %r7871, %p203;
	shfl.sync.bfly.b32	%r152, %r7935, 8, 31, -1;
	selp.b32 	%r7936, %r7883, %r7879, %p203;
	shfl.sync.bfly.b32	%r153, %r7936, 8, 31, -1;
	selp.b32 	%r7937, %r7891, %r7887, %p203;
	shfl.sync.bfly.b32	%r7938, %r7937, 8, 31, -1;
	selp.b32 	%r7939, %r7899, %r7895, %p203;
	shfl.sync.bfly.b32	%r7940, %r7939, 8, 31, -1;
	selp.b32 	%r7941, %r7907, %r7903, %p203;
	shfl.sync.bfly.b32	%r7942, %r7941, 8, 31, -1;
	selp.b32 	%r7943, %r7915, %r7911, %p203;
	shfl.sync.bfly.b32	%r7944, %r7943, 8, 31, -1;
	selp.b32 	%r7945, %r7923, %r7919, %p203;
	shfl.sync.bfly.b32	%r7946, %r7945, 8, 31, -1;
	selp.b32 	%r7947, %r7931, %r7927, %p203;
	shfl.sync.bfly.b32	%r7948, %r7947, 8, 31, -1;
	and.b32  	%r7949, %r73, 32512;
	setp.eq.s32 	%p218, %r7949, 0;
	shl.b32 	%r7972, %r73, 10;
	@%p218 bra 	$L__BB0_87;
// %bb.86:                              // %pass16544
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r7950, %r153, %r7883, %p203;
	selp.b32 	%r7951, %r7879, %r153, %p203;
	selp.b32 	%r7952, %r152, %r7875, %p203;
	selp.b32 	%r7953, %r7871, %r152, %p203;
	or.b32  	%r7955, %r7972, %r51;
	or.b32  	%r7956, %r60, %r7955;
	cvt.u64.u32 	%rd93, %r7956;
	add.s64 	%rd94, %rd93, %rd7;
	shr.u64 	%rd95, %rd94, 39;
	add.s64 	%rd96, %rd94, %rd95;
	shr.s64 	%rd97, %rd96, 25;
	setp.lt.s64 	%p220, %rd94, 0;
	and.b64  	%rd98, %rd96, -33554432;
	setp.ne.s64 	%p221, %rd98, %rd94;
	and.pred  	%p222, %p220, %p221;
	selp.u64 	%rd99, 1, 0, %p222;
	sub.s64 	%rd100, %rd99, %rd97;
	shl.b64 	%rd101, %rd100, 25;
	add.s64 	%rd102, %rd101, %rd94;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd104, %rd3, %rd103;
	st.global.v4.u32 	[%rd104], {%r7953, %r7951, %r7952, %r7950};
$L__BB0_87:                             // %pass16628
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r146, %r73, 64;
	setp.lt.u32 	%p223, %r146, 192;
	@%p223 bra 	$L__BB0_89;
// %bb.88:                              // %pass16651
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r154, %r7887, %r7938, %p203;
	selp.b32 	%r155, %r7938, %r7891, %p203;
	selp.b32 	%r156, %r7895, %r7940, %p203;
	selp.b32 	%r157, %r7940, %r7899, %p203;
	shl.b32 	%r7957, %r146, 10;
	or.b32  	%r7958, %r7957, %r51;
	or.b32  	%r7959, %r60, %r7958;
	cvt.u64.u32 	%rd105, %r7959;
	add.s64 	%rd106, %rd105, %rd7;
	shr.u64 	%rd107, %rd106, 39;
	add.s64 	%rd108, %rd106, %rd107;
	shr.s64 	%rd109, %rd108, 25;
	setp.lt.s64 	%p224, %rd106, 0;
	and.b64  	%rd110, %rd108, -33554432;
	setp.ne.s64 	%p225, %rd110, %rd106;
	and.pred  	%p226, %p224, %p225;
	selp.u64 	%rd111, 1, 0, %p226;
	sub.s64 	%rd112, %rd111, %rd109;
	shl.b64 	%rd113, %rd112, 25;
	add.s64 	%rd114, %rd113, %rd106;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd116, %rd3, %rd115;
	st.global.v4.u32 	[%rd116], {%r154, %r156, %r155, %r157};
$L__BB0_89:                             // %pass16735
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r147, %r73, 128;
	selp.b32 	%r162, %r7919, %r7946, %p203;
	selp.b32 	%r163, %r7946, %r7923, %p203;
	selp.b32 	%r164, %r7927, %r7948, %p203;
	selp.b32 	%r165, %r7948, %r7931, %p203;
	setp.lt.u32 	%p227, %r147, 192;
	@%p227 bra 	$L__BB0_91;
// %bb.90:                              // %pass16758
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r158, %r7903, %r7942, %p203;
	selp.b32 	%r159, %r7942, %r7907, %p203;
	selp.b32 	%r160, %r7911, %r7944, %p203;
	selp.b32 	%r161, %r7944, %r7915, %p203;
	shl.b32 	%r7960, %r147, 10;
	or.b32  	%r7961, %r7960, %r51;
	or.b32  	%r7962, %r60, %r7961;
	cvt.u64.u32 	%rd117, %r7962;
	add.s64 	%rd118, %rd117, %rd7;
	shr.u64 	%rd119, %rd118, 39;
	add.s64 	%rd120, %rd118, %rd119;
	shr.s64 	%rd121, %rd120, 25;
	setp.lt.s64 	%p228, %rd118, 0;
	and.b64  	%rd122, %rd120, -33554432;
	setp.ne.s64 	%p229, %rd122, %rd118;
	and.pred  	%p230, %p228, %p229;
	selp.u64 	%rd123, 1, 0, %p230;
	sub.s64 	%rd124, %rd123, %rd121;
	shl.b64 	%rd125, %rd124, 25;
	add.s64 	%rd126, %rd125, %rd118;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd128, %rd3, %rd127;
	st.global.v4.u32 	[%rd128], {%r158, %r160, %r159, %r161};
	bra.uni 	$L__BB0_91;
$L__BB0_92:                             // %L40455
	st.global.u32 	[%rd4], %r7971;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r7970, 2;
	st.global.u32 	[%rd4], %r7970;
	mov.u64 	%rd143, exception3413;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7969, 3;
	st.global.u32 	[%rd4], %r7969;
	mov.u64 	%rd141, exception3413;
	cvta.global.u64 	%rd142, %rd141;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd142;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd40, exception1;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
