// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_13807
(
	.param .align 8 .b8 julia_power_by_squaring_13807_param_0[16],
	.param .b64 julia_power_by_squaring_13807_param_1,
	.param .b64 julia_power_by_squaring_13807_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3390[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<259>;
	.reg .b16 	%rs<1185>;
	.reg .f32 	%f<914>;
	.reg .b32 	%r<8042>;
	.reg .b64 	%rd<176>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r182, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd34, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r183, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r183, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r184, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r185, %r184, %r2;
	or.b32  	%r186, %r185, %r4;
	mul.wide.u32 	%rd57, %r186, 4;
	add.s64 	%rd4, %rd51, %rd57;
	mov.u32 	%r187, 1;
	st.global.u32 	[%rd4], %r187;
	ld.global.u32 	%r5, [%rd35];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L231
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd39];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L241
	ld.param.u64 	%rd43, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd43];
	sub.s32 	%r188, %r6, %r5;
	and.b32  	%r189, %r188, 255;
	setp.ne.s32 	%p6, %r189, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L247
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd47];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L257
	not.b32 	%r190, %r7;
	add.s32 	%r191, %r190, %r8;
	and.b32  	%r192, %r191, 3;
	setp.eq.s32 	%p12, %r192, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L379
	bfe.u32 	%r19, %r4, 1, 1;
	and.b32  	%r20, %r4, 1;
	bfe.u32 	%r21, %r4, 2, 1;
	shr.u32 	%r22, %r4, 4;
	shl.b32 	%r200, %r22, 1;
	shl.b32 	%r201, %r21, 2;
	shl.b32 	%r202, %r20, 3;
	shl.b32 	%r203, %r19, 4;
	or.b32  	%r204, %r202, %r203;
	or.b32  	%r205, %r201, %r204;
	or.b32  	%r206, %r200, %r205;
	bfe.u32 	%r24, %r4, 3, 1;
	or.b32  	%r25, %r24, %r206;
	or.b32  	%r26, %r25, 32;
	mov.f32 	%f181, 0f40000000;
	mov.f32 	%f182, 0f437F0000;
	div.approx.f32 	%f1, %f182, %f181;
	cvt.rn.f32.s32 	%f183, %r25;
	sub.f32 	%f184, %f183, %f1;
	mov.f32 	%f213, 0f42800000;
	div.approx.f32 	%f3, %f184, %f213;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f881, 0f3F800000;
	mov.f32 	%f874, %f881;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L640
	sin.approx.f32 	%f214, %f3;
	div.approx.f32 	%f874, %f214, %f3;
LBB0_10:                                // %L643
	cvt.rn.f32.s32 	%f217, %r26;
	sub.f32 	%f218, %f217, %f1;
	div.approx.f32 	%f8, %f218, %f213;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f875, %f881;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L660
	sin.approx.f32 	%f248, %f8;
	div.approx.f32 	%f875, %f248, %f8;
LBB0_12:                                // %L663
	or.b32  	%r224, %r25, 64;
	or.b32  	%r28, %r25, 96;
	cvt.rn.f32.s32 	%f252, %r224;
	sub.f32 	%f253, %f252, %f1;
	div.approx.f32 	%f12, %f253, %f213;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f876, %f881;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L749
	sin.approx.f32 	%f283, %f12;
	div.approx.f32 	%f876, %f283, %f12;
LBB0_14:                                // %L752
	shl.b32 	%r9, %r4, 2;
	cvt.rn.f32.s32 	%f286, %r28;
	sub.f32 	%f287, %f286, %f1;
	div.approx.f32 	%f17, %f287, %f213;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f877, %f881;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L769
	sin.approx.f32 	%f317, %f17;
	div.approx.f32 	%f877, %f317, %f17;
LBB0_16:                                // %L772
	and.b32  	%r193, %r9, 36;
	and.b32  	%r12, %r4, 16;
	or.b32  	%r242, %r25, 128;
	or.b32  	%r30, %r25, 160;
	cvt.rn.f32.s32 	%f321, %r242;
	sub.f32 	%f322, %f321, %f1;
	div.approx.f32 	%f21, %f322, %f213;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f878, %f881;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L858
	sin.approx.f32 	%f352, %f21;
	div.approx.f32 	%f878, %f352, %f21;
LBB0_18:                                // %L861
	or.b32  	%r194, %r193, %r12;
	and.b32  	%r13, %r4, 2;
	shl.b32 	%r14, %r4, 1;
	cvt.rn.f32.s32 	%f355, %r30;
	sub.f32 	%f356, %f355, %f1;
	div.approx.f32 	%f26, %f356, %f213;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f879, %f881;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L878
	sin.approx.f32 	%f386, %f26;
	div.approx.f32 	%f879, %f386, %f26;
LBB0_20:                                // %L881
	or.b32  	%r195, %r194, %r13;
	and.b32  	%r15, %r14, 8;
	shl.b32 	%r197, %r3, 3;
	or.b32  	%r260, %r25, 192;
	or.b32  	%r32, %r25, 224;
	cvt.rn.f32.s32 	%f390, %r260;
	sub.f32 	%f391, %f390, %f1;
	div.approx.f32 	%f30, %f391, %f213;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f880, %f881;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L967
	sin.approx.f32 	%f421, %f30;
	div.approx.f32 	%f880, %f421, %f30;
LBB0_22:                                // %L970
	or.b32  	%r196, %r195, %r15;
	and.b32  	%r16, %r197, 960;
	cvt.rn.f32.s32 	%f424, %r32;
	sub.f32 	%f425, %f424, %f1;
	div.approx.f32 	%f35, %f425, %f213;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L987
	sin.approx.f32 	%f455, %f35;
	div.approx.f32 	%f881, %f455, %f35;
LBB0_24:                                // %L990
	or.b32  	%r198, %r196, %r16;
	mul.lo.s32 	%r34, %r25, 63;
	cvt.rn.f32.s32 	%f458, %r34;
	div.approx.f32 	%f38, %f458, %f213;
	abs.f32 	%f884, %f38;
	setp.lt.f32 	%p61, %f884, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f884, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r36, %f884;
	and.b32  	%r278, %r36, 8388607;
	or.b32  	%r8000, %r278, 1065353216;
	mov.b32 	%f883, %r8000;
	add.s32 	%r279, %r36, -1073741824;
	and.b32  	%r8001, %r279, -8388608;
	setp.eq.s32 	%p68, %r8001, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %.lr.ph2386.preheader
	mov.f32 	%f469, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f468,%f469;
	// end inline asm
LBB0_34:                                // %.lr.ph2386
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r280, %r8001, 192937984;
	add.s32 	%r281, %r280, %r8000;
	mov.b32 	%f470, %r281;
	mul.f32 	%f471, %f468, %f470;
	sub.f32 	%f472, %f470, %f471;
	fma.rn.f32 	%f473, %f472, %f468, %f471;
	sub.f32 	%f474, %f470, %f473;
	fma.rz.f32 	%f475, %f474, %f468, %f473;
	cvt.rzi.f32.f32 	%f476, %f475;
	sub.f32 	%f883, %f470, %f476;
	sub.s32 	%r8001, %r8001, %r280;
	mov.b32 	%r8000, %f883;
	setp.ne.s32 	%p69, %r8001, 0;
	setp.ne.s32 	%p70, %r8000, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r36, 2139095039;
	selp.f32 	%f477, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f478, %f883, 0f34000000;
	mul.f32 	%f884, %f477, %f478;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f461, %f884, %f181;
	cvt.rzi.f32.f32 	%f40, %f461;
	fma.rn.f32 	%f41, %f40, 0fC0000000, %f884;
	mov.b32 	%r35, %f41;
	setp.lt.u32 	%p63, %r35, 1073741824;
	mov.f32 	%f882, %f40;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r35, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f466, %f40, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	selp.f32 	%f467, %f466, %f40, %p67;
	add.f32 	%f882, %f467, 0fBF800000;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f882, %f40, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f463, %f181, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f463, 0f00000000;
	selp.f32 	%f464, %f882, %f40, %p66;
	add.f32 	%f465, %f464, 0f3F800000;
	add.f32 	%f882, %f465, 0f3F800000;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f884, %f882, 0fC0000000, %f884;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r199, %r198, 1;
	abs.f32 	%f479, %f884;
	setp.gtu.f32 	%p73, %f479, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r282, %f38;
	and.b32  	%r283, %r282, -2147483648;
	mov.b32 	%r284, %f884;
	or.b32  	%r285, %r283, %r284;
	mov.b32 	%f884, %r285;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd58, %r199, 4;
	add.s32 	%r294, %r34, 2016;
	cvt.rn.f32.s32 	%f510, %r294;
	div.approx.f32 	%f57, %f510, %f213;
	abs.f32 	%f888, %f57;
	setp.lt.f32 	%p81, %f888, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f888, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r44, %f888;
	and.b32  	%r295, %r44, 8388607;
	or.b32  	%r8002, %r295, 1065353216;
	mov.b32 	%f887, %r8002;
	add.s32 	%r296, %r44, -1073741824;
	and.b32  	%r8003, %r296, -8388608;
	setp.eq.s32 	%p88, %r8003, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %.lr.ph2381.preheader
	mov.f32 	%f521, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f520,%f521;
	// end inline asm
LBB0_48:                                // %.lr.ph2381
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r297, %r8003, 192937984;
	add.s32 	%r298, %r297, %r8002;
	mov.b32 	%f522, %r298;
	mul.f32 	%f523, %f520, %f522;
	sub.f32 	%f524, %f522, %f523;
	fma.rn.f32 	%f525, %f524, %f520, %f523;
	sub.f32 	%f526, %f522, %f525;
	fma.rz.f32 	%f527, %f526, %f520, %f525;
	cvt.rzi.f32.f32 	%f528, %f527;
	sub.f32 	%f887, %f522, %f528;
	sub.s32 	%r8003, %r8003, %r297;
	mov.b32 	%r8002, %f887;
	setp.ne.s32 	%p89, %r8003, 0;
	setp.ne.s32 	%p90, %r8002, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1377
	setp.gt.u32 	%p92, %r44, 2139095039;
	selp.f32 	%f529, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f530, %f887, 0f34000000;
	mul.f32 	%f888, %f529, %f530;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1343
	div.approx.f32 	%f513, %f888, %f181;
	cvt.rzi.f32.f32 	%f59, %f513;
	fma.rn.f32 	%f60, %f59, 0fC0000000, %f888;
	mov.b32 	%r43, %f60;
	setp.lt.u32 	%p83, %r43, 1073741824;
	mov.f32 	%f886, %f59;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r43, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f518, %f59, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	selp.f32 	%f519, %f518, %f59, %p87;
	add.f32 	%f886, %f519, 0fBF800000;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f886, %f59, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1348
	fma.rn.f32 	%f515, %f181, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f515, 0f00000000;
	selp.f32 	%f516, %f886, %f59, %p86;
	add.f32 	%f517, %f516, 0f3F800000;
	add.f32 	%f886, %f517, 0f3F800000;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1351
	fma.rn.f32 	%f888, %f886, 0fC0000000, %f888;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1380
	add.s64 	%rd59, %rd1, %rd58;
	abs.f32 	%f531, %f888;
	setp.gtu.f32 	%p93, %f531, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r299, %f57;
	and.b32  	%r300, %r299, -2147483648;
	mov.b32 	%r301, %f888;
	or.b32  	%r302, %r300, %r301;
	mov.b32 	%f888, %r302;
LBB0_52:                                // %__nv_fmodf.exit1383
	ld.global.u32 	%r17, [%rd59];
	mov.u64 	%rd60, 2;
	mov.u64 	%rd61, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13807, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd62, 64;
	@%p101 bra 	LBB0_128;
// %bb.53:                              // %L1096
	shr.u32 	%r18, %r4, 1;
	shr.u32 	%r23, %r4, 3;
	and.b32  	%r317, %r4, 3;
	and.b32  	%r318, %r23, 2;
	or.b32  	%r319, %r21, %r318;
	and.b32  	%r320, %r18, 4;
	or.b32  	%r53, %r319, %r320;
	mul.lo.s32 	%r321, %r317, %r53;
	shl.b32 	%r322, %r321, 1;
	neg.s32 	%r323, %r322;
	cvt.rn.f32.s32 	%f74, %r323;
	mov.f32 	%f564, 0f41000000;
	div.approx.f32 	%f75, %f74, %f564;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	mov.f32 	%f892, %f900;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r55, %f900;
	and.b32  	%r324, %r55, 8388607;
	or.b32  	%r8004, %r324, 1065353216;
	mov.b32 	%f891, %r8004;
	add.s32 	%r325, %r55, -1073741824;
	and.b32  	%r8005, %r325, -8388608;
	setp.eq.s32 	%p109, %r8005, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %.lr.ph2371.preheader
	mov.f32 	%f574, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f573,%f574;
	// end inline asm
LBB0_63:                                // %.lr.ph2371
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r326, %r8005, 192937984;
	add.s32 	%r327, %r326, %r8004;
	mov.b32 	%f575, %r327;
	mul.f32 	%f576, %f573, %f575;
	sub.f32 	%f577, %f575, %f576;
	fma.rn.f32 	%f578, %f577, %f573, %f576;
	sub.f32 	%f579, %f575, %f578;
	fma.rz.f32 	%f580, %f579, %f573, %f578;
	cvt.rzi.f32.f32 	%f581, %f580;
	sub.f32 	%f891, %f575, %f581;
	sub.s32 	%r8005, %r8005, %r326;
	mov.b32 	%r8004, %f891;
	setp.ne.s32 	%p110, %r8005, 0;
	setp.ne.s32 	%p111, %r8004, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1430
	setp.gt.u32 	%p113, %r55, 2139095039;
	selp.f32 	%f582, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f583, %f891, 0f34000000;
	mul.f32 	%f892, %f582, %f583;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1396
	div.approx.f32 	%f566, %f900, %f181;
	cvt.rzi.f32.f32 	%f77, %f566;
	fma.rn.f32 	%f78, %f77, 0fC0000000, %f900;
	mov.b32 	%r54, %f78;
	setp.lt.u32 	%p104, %r54, 1073741824;
	mov.f32 	%f890, %f77;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r54, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f571, %f77, 0fBF800000;
	setp.lt.f32 	%p108, %f78, 0fC0000000;
	selp.f32 	%f572, %f571, %f77, %p108;
	add.f32 	%f890, %f572, 0fBF800000;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f890, %f77, 0f3F800000;
	setp.ltu.f32 	%p106, %f78, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1401
	fma.rn.f32 	%f568, %f181, 0fC0400000, %f78;
	setp.ge.f32 	%p107, %f568, 0f00000000;
	selp.f32 	%f569, %f890, %f77, %p107;
	add.f32 	%f570, %f569, 0f3F800000;
	add.f32 	%f890, %f570, 0f3F800000;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1404
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1433
	abs.f32 	%f584, %f892;
	setp.gtu.f32 	%p114, %f584, 0f7F800000;
	mov.b32 	%r328, %f75;
	and.b32  	%r62, %r328, -2147483648;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r329, %f892;
	or.b32  	%r330, %r62, %r329;
	mov.b32 	%f892, %r330;
LBB0_67:                                // %__nv_fmodf.exit1436
	and.b32  	%r339, %r14, 6;
	mov.u32 	%r340, -8;
	sub.s32 	%r341, %r340, %r339;
	mul.lo.s32 	%r342, %r53, %r341;
	cvt.rn.f32.s32 	%f94, %r342;
	div.approx.f32 	%f95, %f94, %f564;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	mov.f32 	%f896, %f904;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r64, %f904;
	and.b32  	%r343, %r64, 8388607;
	or.b32  	%r8006, %r343, 1065353216;
	mov.b32 	%f895, %r8006;
	add.s32 	%r344, %r64, -1073741824;
	and.b32  	%r8007, %r344, -8388608;
	setp.eq.s32 	%p129, %r8007, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %.lr.ph2361.preheader
	mov.f32 	%f625, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f624,%f625;
	// end inline asm
LBB0_77:                                // %.lr.ph2361
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r345, %r8007, 192937984;
	add.s32 	%r346, %r345, %r8006;
	mov.b32 	%f626, %r346;
	mul.f32 	%f627, %f624, %f626;
	sub.f32 	%f628, %f626, %f627;
	fma.rn.f32 	%f629, %f628, %f624, %f627;
	sub.f32 	%f630, %f626, %f629;
	fma.rz.f32 	%f631, %f630, %f624, %f629;
	cvt.rzi.f32.f32 	%f632, %f631;
	sub.f32 	%f895, %f626, %f632;
	sub.s32 	%r8007, %r8007, %r345;
	mov.b32 	%r8006, %f895;
	setp.ne.s32 	%p130, %r8007, 0;
	setp.ne.s32 	%p131, %r8006, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1483
	setp.gt.u32 	%p133, %r64, 2139095039;
	selp.f32 	%f633, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f634, %f895, 0f34000000;
	mul.f32 	%f896, %f633, %f634;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1449
	div.approx.f32 	%f617, %f904, %f181;
	cvt.rzi.f32.f32 	%f97, %f617;
	fma.rn.f32 	%f98, %f97, 0fC0000000, %f904;
	mov.b32 	%r63, %f98;
	setp.lt.u32 	%p124, %r63, 1073741824;
	mov.f32 	%f894, %f97;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r63, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f622, %f97, 0fBF800000;
	setp.lt.f32 	%p128, %f98, 0fC0000000;
	selp.f32 	%f623, %f622, %f97, %p128;
	add.f32 	%f894, %f623, 0fBF800000;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f894, %f97, 0f3F800000;
	setp.ltu.f32 	%p126, %f98, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1454
	fma.rn.f32 	%f619, %f181, 0fC0400000, %f98;
	setp.ge.f32 	%p127, %f619, 0f00000000;
	selp.f32 	%f620, %f894, %f97, %p127;
	add.f32 	%f621, %f620, 0f3F800000;
	add.f32 	%f894, %f621, 0f3F800000;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1457
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1486
	abs.f32 	%f635, %f896;
	setp.gtu.f32 	%p134, %f635, 0f7F800000;
	mov.b32 	%r347, %f95;
	and.b32  	%r71, %r347, -2147483648;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r348, %f896;
	or.b32  	%r349, %r71, %r348;
	mov.b32 	%f896, %r349;
LBB0_81:                                // %__nv_fmodf.exit1489
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13807, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd68, [retval0+0];
	} // callseq 5
	setp.ne.s64 	%p142, %rd68, 64;
	@%p142 bra 	LBB0_127;
// %bb.82:                              // %L1262
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13807, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd74, [retval0+0];
	} // callseq 8
	cvt.rn.f32.s64 	%f668, %rd74;
	div.approx.f32 	%f112, %f74, %f668;
	abs.f32 	%f908, %f112;
	setp.lt.f32 	%p143, %f908, 0f40000000;
	@%p143 bra 	LBB0_136;
// %bb.83:
	setp.gtu.f32 	%p144, %f908, 0f4B800000;
	@%p144 bra 	LBB0_132;
	bra.uni 	LBB0_84;
LBB0_132:
	mov.b32 	%r144, %f908;
	and.b32  	%r370, %r144, 8388607;
	or.b32  	%r8038, %r370, 1065353216;
	mov.b32 	%f907, %r8038;
	add.s32 	%r371, %r144, -1073741824;
	and.b32  	%r8039, %r371, -8388608;
	setp.eq.s32 	%p150, %r8039, 0;
	@%p150 bra 	LBB0_135;
// %bb.133:                             // %.lr.ph2356.preheader
	mov.f32 	%f678, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f677,%f678;
	// end inline asm
LBB0_134:                               // %.lr.ph2356
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r372, %r8039, 192937984;
	add.s32 	%r373, %r372, %r8038;
	mov.b32 	%f679, %r373;
	mul.f32 	%f680, %f677, %f679;
	sub.f32 	%f681, %f679, %f680;
	fma.rn.f32 	%f682, %f681, %f677, %f680;
	sub.f32 	%f683, %f679, %f682;
	fma.rz.f32 	%f684, %f683, %f677, %f682;
	cvt.rzi.f32.f32 	%f685, %f684;
	sub.f32 	%f907, %f679, %f685;
	sub.s32 	%r8039, %r8039, %r372;
	mov.b32 	%r8038, %f907;
	setp.ne.s32 	%p151, %r8039, 0;
	setp.ne.s32 	%p152, %r8038, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i1642
	setp.gt.u32 	%p154, %r144, 2139095039;
	selp.f32 	%f686, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f687, %f907, 0f34000000;
	mul.f32 	%f908, %f686, %f687;
	bra.uni 	LBB0_136;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1608
	div.approx.f32 	%f670, %f908, %f181;
	cvt.rzi.f32.f32 	%f146, %f670;
	fma.rn.f32 	%f147, %f146, 0fC0000000, %f908;
	mov.b32 	%r143, %f147;
	setp.lt.u32 	%p145, %r143, 1073741824;
	mov.f32 	%f906, %f146;
	@%p145 bra 	LBB0_131;
// %bb.85:
	setp.lt.u32 	%p146, %r143, -2147483647;
	@%p146 bra 	LBB0_129;
// %bb.86:
	add.f32 	%f675, %f146, 0fBF800000;
	setp.lt.f32 	%p149, %f147, 0fC0000000;
	selp.f32 	%f676, %f675, %f146, %p149;
	add.f32 	%f906, %f676, 0fBF800000;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f906, %f146, 0f3F800000;
	setp.ltu.f32 	%p147, %f147, 0f40800000;
	@%p147 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1613
	fma.rn.f32 	%f672, %f181, 0fC0400000, %f147;
	setp.ge.f32 	%p148, %f672, 0f00000000;
	selp.f32 	%f673, %f906, %f146, %p148;
	add.f32 	%f674, %f673, 0f3F800000;
	add.f32 	%f906, %f674, 0f3F800000;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i1616
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i1645
	abs.f32 	%f688, %f908;
	setp.gtu.f32 	%p155, %f688, 0f7F800000;
	@%p155 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r374, %f112;
	and.b32  	%r375, %r374, -2147483648;
	mov.b32 	%r376, %f908;
	or.b32  	%r377, %r375, %r376;
	mov.b32 	%f908, %r377;
LBB0_138:                               // %__nv_fmodf.exit1648
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13807, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd78, [retval0+0];
	} // callseq 9
	cvt.rn.f32.s64 	%f719, %rd78;
	div.approx.f32 	%f163, %f94, %f719;
	abs.f32 	%f912, %f163;
	setp.lt.f32 	%p163, %f912, 0f40000000;
	@%p163 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p164, %f912, 0f4B800000;
	@%p164 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r152, %f912;
	and.b32  	%r386, %r152, 8388607;
	or.b32  	%r8040, %r386, 1065353216;
	mov.b32 	%f911, %r8040;
	add.s32 	%r387, %r152, -1073741824;
	and.b32  	%r8041, %r387, -8388608;
	setp.eq.s32 	%p170, %r8041, 0;
	@%p170 bra 	LBB0_149;
// %bb.147:                             // %.lr.ph2351.preheader
	mov.f32 	%f729, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f728,%f729;
	// end inline asm
LBB0_148:                               // %.lr.ph2351
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r388, %r8041, 192937984;
	add.s32 	%r389, %r388, %r8040;
	mov.b32 	%f730, %r389;
	mul.f32 	%f731, %f728, %f730;
	sub.f32 	%f732, %f730, %f731;
	fma.rn.f32 	%f733, %f732, %f728, %f731;
	sub.f32 	%f734, %f730, %f733;
	fma.rz.f32 	%f735, %f734, %f728, %f733;
	cvt.rzi.f32.f32 	%f736, %f735;
	sub.f32 	%f911, %f730, %f736;
	sub.s32 	%r8041, %r8041, %r388;
	mov.b32 	%r8040, %f911;
	setp.ne.s32 	%p171, %r8041, 0;
	setp.ne.s32 	%p172, %r8040, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i1695
	setp.gt.u32 	%p174, %r152, 2139095039;
	selp.f32 	%f737, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f738, %f911, 0f34000000;
	mul.f32 	%f912, %f737, %f738;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i1661
	div.approx.f32 	%f721, %f912, %f181;
	cvt.rzi.f32.f32 	%f165, %f721;
	fma.rn.f32 	%f166, %f165, 0fC0000000, %f912;
	mov.b32 	%r151, %f166;
	setp.lt.u32 	%p165, %r151, 1073741824;
	mov.f32 	%f910, %f165;
	@%p165 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p166, %r151, -2147483647;
	@%p166 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f726, %f165, 0fBF800000;
	setp.lt.f32 	%p169, %f166, 0fC0000000;
	selp.f32 	%f727, %f726, %f165, %p169;
	add.f32 	%f910, %f727, 0fBF800000;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f910, %f165, 0f3F800000;
	setp.ltu.f32 	%p167, %f166, 0f40800000;
	@%p167 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1666
	fma.rn.f32 	%f723, %f181, 0fC0400000, %f166;
	setp.ge.f32 	%p168, %f723, 0f00000000;
	selp.f32 	%f724, %f910, %f165, %p168;
	add.f32 	%f725, %f724, 0f3F800000;
	add.f32 	%f910, %f725, 0f3F800000;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i1669
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i1698
	abs.f32 	%f739, %f912;
	setp.gtu.f32 	%p175, %f739, 0f7F800000;
	@%p175 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r390, %f163;
	and.b32  	%r391, %r390, -2147483648;
	mov.b32 	%r392, %f912;
	or.b32  	%r393, %r391, %r392;
	mov.b32 	%f912, %r393;
LBB0_152:                               // %__nv_fmodf.exit1701
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13807, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd82, [retval0+0];
	} // callseq 10
	setp.eq.s64 	%p183, %rd82, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_153;
LBB0_87:                                // %L1441
	@%p102 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f900, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r77, %f900;
	and.b32  	%r408, %r77, 8388607;
	or.b32  	%r8008, %r408, 1065353216;
	mov.b32 	%f899, %r8008;
	add.s32 	%r409, %r77, -1073741824;
	and.b32  	%r8009, %r409, -8388608;
	setp.eq.s32 	%p191, %r8009, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %.lr.ph2341.preheader
	mov.f32 	%f781, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f780,%f781;
	// end inline asm
LBB0_97:                                // %.lr.ph2341
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r410, %r8009, 192937984;
	add.s32 	%r411, %r410, %r8008;
	mov.b32 	%f782, %r411;
	mul.f32 	%f783, %f780, %f782;
	sub.f32 	%f784, %f782, %f783;
	fma.rn.f32 	%f785, %f784, %f780, %f783;
	sub.f32 	%f786, %f782, %f785;
	fma.rz.f32 	%f787, %f786, %f780, %f785;
	cvt.rzi.f32.f32 	%f788, %f787;
	sub.f32 	%f899, %f782, %f788;
	sub.s32 	%r8009, %r8009, %r410;
	mov.b32 	%r8008, %f899;
	setp.ne.s32 	%p192, %r8009, 0;
	setp.ne.s32 	%p193, %r8008, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1536
	setp.gt.u32 	%p195, %r77, 2139095039;
	selp.f32 	%f789, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f790, %f899, 0f34000000;
	mul.f32 	%f900, %f789, %f790;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1502
	div.approx.f32 	%f773, %f900, %f181;
	cvt.rzi.f32.f32 	%f114, %f773;
	fma.rn.f32 	%f115, %f114, 0fC0000000, %f900;
	mov.b32 	%r76, %f115;
	setp.lt.u32 	%p186, %r76, 1073741824;
	mov.f32 	%f898, %f114;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r76, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f778, %f114, 0fBF800000;
	setp.lt.f32 	%p190, %f115, 0fC0000000;
	selp.f32 	%f779, %f778, %f114, %p190;
	add.f32 	%f898, %f779, 0fBF800000;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f898, %f114, 0f3F800000;
	setp.ltu.f32 	%p188, %f115, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1507
	fma.rn.f32 	%f775, %f181, 0fC0400000, %f115;
	setp.ge.f32 	%p189, %f775, 0f00000000;
	selp.f32 	%f776, %f898, %f114, %p189;
	add.f32 	%f777, %f776, 0f3F800000;
	add.f32 	%f898, %f777, 0f3F800000;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1510
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1539
	abs.f32 	%f791, %f900;
	setp.gtu.f32 	%p196, %f791, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r412, %f900;
	or.b32  	%r413, %r62, %r412;
	mov.b32 	%f900, %r413;
LBB0_101:                               // %__nv_fmodf.exit1542
	@%p122 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f904, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r85, %f904;
	and.b32  	%r422, %r85, 8388607;
	or.b32  	%r8010, %r422, 1065353216;
	mov.b32 	%f903, %r8010;
	add.s32 	%r423, %r85, -1073741824;
	and.b32  	%r8011, %r423, -8388608;
	setp.eq.s32 	%p211, %r8011, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %.lr.ph.preheader
	mov.f32 	%f831, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f830,%f831;
	// end inline asm
LBB0_111:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r424, %r8011, 192937984;
	add.s32 	%r425, %r424, %r8010;
	mov.b32 	%f832, %r425;
	mul.f32 	%f833, %f830, %f832;
	sub.f32 	%f834, %f832, %f833;
	fma.rn.f32 	%f835, %f834, %f830, %f833;
	sub.f32 	%f836, %f832, %f835;
	fma.rz.f32 	%f837, %f836, %f830, %f835;
	cvt.rzi.f32.f32 	%f838, %f837;
	sub.f32 	%f903, %f832, %f838;
	sub.s32 	%r8011, %r8011, %r424;
	mov.b32 	%r8010, %f903;
	setp.ne.s32 	%p212, %r8011, 0;
	setp.ne.s32 	%p213, %r8010, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1589
	setp.gt.u32 	%p215, %r85, 2139095039;
	selp.f32 	%f839, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f840, %f903, 0f34000000;
	mul.f32 	%f904, %f839, %f840;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1555
	div.approx.f32 	%f823, %f904, %f181;
	cvt.rzi.f32.f32 	%f131, %f823;
	fma.rn.f32 	%f132, %f131, 0fC0000000, %f904;
	mov.b32 	%r84, %f132;
	setp.lt.u32 	%p206, %r84, 1073741824;
	mov.f32 	%f902, %f131;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r84, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f828, %f131, 0fBF800000;
	setp.lt.f32 	%p210, %f132, 0fC0000000;
	selp.f32 	%f829, %f828, %f131, %p210;
	add.f32 	%f902, %f829, 0fBF800000;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f902, %f131, 0f3F800000;
	setp.ltu.f32 	%p208, %f132, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1560
	fma.rn.f32 	%f825, %f181, 0fC0400000, %f132;
	setp.ge.f32 	%p209, %f825, 0f00000000;
	selp.f32 	%f826, %f902, %f131, %p209;
	add.f32 	%f827, %f826, 0f3F800000;
	add.f32 	%f902, %f827, 0f3F800000;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1563
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1592
	abs.f32 	%f841, %f904;
	setp.gtu.f32 	%p216, %f841, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r426, %f904;
	or.b32  	%r427, %r71, %r426;
	mov.b32 	%f904, %r427;
LBB0_115:                               // %__nv_fmodf.exit1595
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7997, 0;
	@%p224 bra 	LBB0_126;
// %bb.116:                             // %L1541.lr.ph
	mov.f32 	%f185, 0f43808000;
	div.approx.f32 	%f186, %f184, %f185;
	div.approx.f32 	%f220, %f218, %f185;
	div.approx.f32 	%f255, %f253, %f185;
	div.approx.f32 	%f289, %f287, %f185;
	div.approx.f32 	%f324, %f322, %f185;
	div.approx.f32 	%f358, %f356, %f185;
	div.approx.f32 	%f393, %f391, %f185;
	div.approx.f32 	%f427, %f425, %f185;
	abs.f32 	%f187, %f186;
	abs.f32 	%f221, %f220;
	abs.f32 	%f256, %f255;
	abs.f32 	%f290, %f289;
	abs.f32 	%f325, %f324;
	abs.f32 	%f359, %f358;
	abs.f32 	%f394, %f393;
	abs.f32 	%f428, %f427;
	setp.gt.f32 	%p13, %f187, 0f4B800000;
	mul.f32 	%f188, %f186, 0f00000000;
	setp.gt.f32 	%p19, %f221, 0f4B800000;
	mul.f32 	%f222, %f220, 0f00000000;
	setp.gt.f32 	%p25, %f256, 0f4B800000;
	mul.f32 	%f257, %f255, 0f00000000;
	setp.gt.f32 	%p31, %f290, 0f4B800000;
	mul.f32 	%f291, %f289, 0f00000000;
	setp.gt.f32 	%p37, %f325, 0f4B800000;
	mul.f32 	%f326, %f324, 0f00000000;
	setp.gt.f32 	%p43, %f359, 0f4B800000;
	mul.f32 	%f360, %f358, 0f00000000;
	setp.gt.f32 	%p49, %f394, 0f4B800000;
	mul.f32 	%f395, %f393, 0f00000000;
	setp.gt.f32 	%p55, %f428, 0f4B800000;
	mul.f32 	%f429, %f427, 0f00000000;
	selp.f32 	%f189, %f188, %f186, %p13;
	selp.f32 	%f223, %f222, %f220, %p19;
	selp.f32 	%f258, %f257, %f255, %p25;
	selp.f32 	%f292, %f291, %f289, %p31;
	selp.f32 	%f327, %f326, %f324, %p37;
	selp.f32 	%f361, %f360, %f358, %p43;
	selp.f32 	%f396, %f395, %f393, %p49;
	selp.f32 	%f430, %f429, %f427, %p55;
	add.f32 	%f585, %f892, %f892;
	add.f32 	%f636, %f896, %f896;
	add.f32 	%f190, %f189, %f189;
	add.f32 	%f224, %f223, %f223;
	add.f32 	%f259, %f258, %f258;
	add.f32 	%f293, %f292, %f292;
	add.f32 	%f328, %f327, %f327;
	add.f32 	%f362, %f361, %f361;
	add.f32 	%f397, %f396, %f396;
	add.f32 	%f431, %f430, %f430;
	add.f32 	%f480, %f884, %f884;
	add.f32 	%f532, %f888, %f888;
	mov.b32 	%r331, %f585;
	mov.b32 	%r362, %f636;
	add.f32 	%f689, %f908, %f908;
	add.f32 	%f740, %f912, %f912;
	mov.b32 	%r207, %f190;
	mov.b32 	%r214, %f224;
	mov.b32 	%r225, %f259;
	mov.b32 	%r232, %f293;
	mov.b32 	%r243, %f328;
	mov.b32 	%r250, %f362;
	mov.b32 	%r261, %f397;
	mov.b32 	%r268, %f431;
	mov.b32 	%r286, %f480;
	mov.b32 	%r309, %f532;
	and.b32  	%r332, %r331, -2147483648;
	and.b32  	%r363, %r362, -2147483648;
	mov.b32 	%r378, %f689;
	mov.b32 	%r400, %f740;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r215, %r214, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r233, %r232, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	and.b32  	%r251, %r250, -2147483648;
	and.b32  	%r262, %r261, -2147483648;
	and.b32  	%r269, %r268, -2147483648;
	and.b32  	%r287, %r286, -2147483648;
	and.b32  	%r310, %r309, -2147483648;
	or.b32  	%r333, %r332, 1056964608;
	or.b32  	%r364, %r363, 1056964608;
	and.b32  	%r379, %r378, -2147483648;
	and.b32  	%r401, %r400, -2147483648;
	add.f32 	%f792, %f900, %f900;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r216, %r215, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r234, %r233, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	or.b32  	%r252, %r251, 1056964608;
	or.b32  	%r263, %r262, 1056964608;
	or.b32  	%r270, %r269, 1056964608;
	or.b32  	%r288, %r287, 1056964608;
	or.b32  	%r311, %r310, 1056964608;
	mov.b32 	%f586, %r333;
	mov.b32 	%f637, %r364;
	or.b32  	%r380, %r379, 1056964608;
	or.b32  	%r402, %r401, 1056964608;
	mov.b32 	%r414, %f792;
	mov.b32 	%f191, %r209;
	mov.b32 	%f225, %r216;
	mov.b32 	%f260, %r227;
	mov.b32 	%f294, %r234;
	mov.b32 	%f329, %r245;
	mov.b32 	%f363, %r252;
	mov.b32 	%f398, %r263;
	mov.b32 	%f432, %r270;
	mov.b32 	%f481, %r288;
	mov.b32 	%f533, %r311;
	add.f32 	%f587, %f585, %f586;
	abs.f32 	%f589, %f585;
	add.f32 	%f638, %f636, %f637;
	abs.f32 	%f640, %f636;
	mov.b32 	%f690, %r380;
	mov.b32 	%f741, %r402;
	and.b32  	%r415, %r414, -2147483648;
	add.f32 	%f192, %f190, %f191;
	abs.f32 	%f194, %f190;
	add.f32 	%f226, %f224, %f225;
	abs.f32 	%f228, %f224;
	add.f32 	%f261, %f259, %f260;
	abs.f32 	%f263, %f259;
	add.f32 	%f295, %f293, %f294;
	abs.f32 	%f297, %f293;
	add.f32 	%f330, %f328, %f329;
	abs.f32 	%f332, %f328;
	add.f32 	%f364, %f362, %f363;
	abs.f32 	%f366, %f362;
	add.f32 	%f399, %f397, %f398;
	abs.f32 	%f401, %f397;
	add.f32 	%f433, %f431, %f432;
	abs.f32 	%f435, %f431;
	add.f32 	%f482, %f480, %f481;
	abs.f32 	%f484, %f480;
	add.f32 	%f534, %f532, %f533;
	abs.f32 	%f536, %f532;
	cvt.rzi.f32.f32 	%f588, %f587;
	setp.gt.f32 	%p115, %f589, 0f4B000000;
	cvt.rzi.f32.f32 	%f639, %f638;
	setp.gt.f32 	%p135, %f640, 0f4B000000;
	add.f32 	%f691, %f689, %f690;
	abs.f32 	%f693, %f689;
	add.f32 	%f742, %f740, %f741;
	abs.f32 	%f744, %f740;
	or.b32  	%r416, %r415, 1056964608;
	cvt.rzi.f32.f32 	%f193, %f192;
	setp.gt.f32 	%p14, %f194, 0f4B000000;
	cvt.rzi.f32.f32 	%f227, %f226;
	setp.gt.f32 	%p20, %f228, 0f4B000000;
	cvt.rzi.f32.f32 	%f262, %f261;
	setp.gt.f32 	%p26, %f263, 0f4B000000;
	cvt.rzi.f32.f32 	%f296, %f295;
	setp.gt.f32 	%p32, %f297, 0f4B000000;
	cvt.rzi.f32.f32 	%f331, %f330;
	setp.gt.f32 	%p38, %f332, 0f4B000000;
	cvt.rzi.f32.f32 	%f365, %f364;
	setp.gt.f32 	%p44, %f366, 0f4B000000;
	cvt.rzi.f32.f32 	%f400, %f399;
	setp.gt.f32 	%p50, %f401, 0f4B000000;
	cvt.rzi.f32.f32 	%f434, %f433;
	setp.gt.f32 	%p56, %f435, 0f4B000000;
	cvt.rzi.f32.f32 	%f483, %f482;
	setp.gt.f32 	%p74, %f484, 0f4B000000;
	cvt.rzi.f32.f32 	%f535, %f534;
	setp.gt.f32 	%p94, %f536, 0f4B000000;
	selp.f32 	%f590, %f585, %f588, %p115;
	cvt.rzi.f32.f32 	%f591, %f585;
	setp.lt.f32 	%p116, %f589, 0f3F000000;
	selp.f32 	%f641, %f636, %f639, %p135;
	cvt.rzi.f32.f32 	%f642, %f636;
	setp.lt.f32 	%p136, %f640, 0f3F000000;
	cvt.rzi.f32.f32 	%f692, %f691;
	setp.gt.f32 	%p156, %f693, 0f4B000000;
	cvt.rzi.f32.f32 	%f743, %f742;
	setp.gt.f32 	%p176, %f744, 0f4B000000;
	mov.b32 	%f793, %r416;
	selp.f32 	%f195, %f190, %f193, %p14;
	cvt.rzi.f32.f32 	%f196, %f190;
	setp.lt.f32 	%p15, %f194, 0f3F000000;
	selp.f32 	%f229, %f224, %f227, %p20;
	cvt.rzi.f32.f32 	%f230, %f224;
	setp.lt.f32 	%p21, %f228, 0f3F000000;
	selp.f32 	%f264, %f259, %f262, %p26;
	cvt.rzi.f32.f32 	%f265, %f259;
	setp.lt.f32 	%p27, %f263, 0f3F000000;
	selp.f32 	%f298, %f293, %f296, %p32;
	cvt.rzi.f32.f32 	%f299, %f293;
	setp.lt.f32 	%p33, %f297, 0f3F000000;
	selp.f32 	%f333, %f328, %f331, %p38;
	cvt.rzi.f32.f32 	%f334, %f328;
	setp.lt.f32 	%p39, %f332, 0f3F000000;
	selp.f32 	%f367, %f362, %f365, %p44;
	cvt.rzi.f32.f32 	%f368, %f362;
	setp.lt.f32 	%p45, %f366, 0f3F000000;
	selp.f32 	%f402, %f397, %f400, %p50;
	cvt.rzi.f32.f32 	%f403, %f397;
	setp.lt.f32 	%p51, %f401, 0f3F000000;
	selp.f32 	%f436, %f431, %f434, %p56;
	cvt.rzi.f32.f32 	%f437, %f431;
	setp.lt.f32 	%p57, %f435, 0f3F000000;
	selp.f32 	%f485, %f480, %f483, %p74;
	cvt.rzi.f32.f32 	%f486, %f480;
	setp.lt.f32 	%p75, %f484, 0f3F000000;
	selp.f32 	%f537, %f532, %f535, %p94;
	cvt.rzi.f32.f32 	%f538, %f532;
	setp.lt.f32 	%p95, %f536, 0f3F000000;
	selp.f32 	%f592, %f591, %f590, %p116;
	selp.f32 	%f643, %f642, %f641, %p136;
	selp.f32 	%f694, %f689, %f692, %p156;
	cvt.rzi.f32.f32 	%f695, %f689;
	setp.lt.f32 	%p157, %f693, 0f3F000000;
	selp.f32 	%f745, %f740, %f743, %p176;
	cvt.rzi.f32.f32 	%f746, %f740;
	setp.lt.f32 	%p177, %f744, 0f3F000000;
	add.f32 	%f794, %f792, %f793;
	abs.f32 	%f796, %f792;
	selp.f32 	%f197, %f196, %f195, %p15;
	selp.f32 	%f231, %f230, %f229, %p21;
	selp.f32 	%f266, %f265, %f264, %p27;
	selp.f32 	%f300, %f299, %f298, %p33;
	selp.f32 	%f335, %f334, %f333, %p39;
	selp.f32 	%f369, %f368, %f367, %p45;
	selp.f32 	%f404, %f403, %f402, %p51;
	selp.f32 	%f438, %f437, %f436, %p57;
	selp.f32 	%f487, %f486, %f485, %p75;
	selp.f32 	%f539, %f538, %f537, %p95;
	fma.rn.f32 	%f593, %f592, 0fBF000000, %f892;
	fma.rn.f32 	%f644, %f643, 0fBF000000, %f896;
	selp.f32 	%f696, %f695, %f694, %p157;
	selp.f32 	%f747, %f746, %f745, %p177;
	cvt.rzi.f32.f32 	%f795, %f794;
	setp.gt.f32 	%p198, %f796, 0f4B000000;
	fma.rn.f32 	%f198, %f197, 0fBF000000, %f189;
	fma.rn.f32 	%f232, %f231, 0fBF000000, %f223;
	fma.rn.f32 	%f267, %f266, 0fBF000000, %f258;
	fma.rn.f32 	%f301, %f300, 0fBF000000, %f292;
	fma.rn.f32 	%f336, %f335, 0fBF000000, %f327;
	fma.rn.f32 	%f370, %f369, 0fBF000000, %f361;
	fma.rn.f32 	%f405, %f404, 0fBF000000, %f396;
	fma.rn.f32 	%f439, %f438, 0fBF000000, %f430;
	fma.rn.f32 	%f488, %f487, 0fBF000000, %f884;
	fma.rn.f32 	%f540, %f539, 0fBF000000, %f888;
	mul.f32 	%f594, %f593, %f593;
	mul.f32 	%f645, %f644, %f644;
	fma.rn.f32 	%f697, %f696, 0fBF000000, %f908;
	fma.rn.f32 	%f748, %f747, 0fBF000000, %f912;
	selp.f32 	%f797, %f792, %f795, %p198;
	cvt.rzi.f32.f32 	%f798, %f792;
	setp.lt.f32 	%p199, %f796, 0f3F000000;
	mul.f32 	%f199, %f198, %f198;
	mul.f32 	%f233, %f232, %f232;
	mul.f32 	%f268, %f267, %f267;
	mul.f32 	%f302, %f301, %f301;
	mul.f32 	%f337, %f336, %f336;
	mul.f32 	%f371, %f370, %f370;
	mul.f32 	%f406, %f405, %f405;
	mul.f32 	%f440, %f439, %f439;
	mul.f32 	%f489, %f488, %f488;
	mul.f32 	%f541, %f540, %f540;
	fma.rn.f32 	%f595, %f594, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f596, %f594, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f646, %f645, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f647, %f645, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f698, %f697, %f697;
	mul.f32 	%f749, %f748, %f748;
	selp.f32 	%f799, %f798, %f797, %p199;
	cvt.rzi.s32.f32 	%r210, %f197;
	fma.rn.f32 	%f200, %f199, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f201, %f199, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r217, %f231;
	fma.rn.f32 	%f234, %f233, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f235, %f233, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f266;
	fma.rn.f32 	%f269, %f268, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f270, %f268, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r235, %f300;
	fma.rn.f32 	%f303, %f302, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f304, %f302, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r246, %f335;
	fma.rn.f32 	%f338, %f337, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f339, %f337, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r253, %f369;
	fma.rn.f32 	%f372, %f371, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f373, %f371, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r264, %f404;
	fma.rn.f32 	%f407, %f406, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f408, %f406, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r271, %f438;
	fma.rn.f32 	%f441, %f440, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f442, %f440, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f490, %f489, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f491, %f489, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f542, %f541, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f543, %f541, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r334, %f592;
	fma.rn.f32 	%f597, %f595, %f594, 0fC0A55DF6;
	fma.rn.f32 	%f598, %f596, %f594, 0f4081E0CF;
	fma.rn.f32 	%f599, %f594, %f593, 0f00000000;
	cvt.rzi.s32.f32 	%r365, %f643;
	fma.rn.f32 	%f648, %f646, %f645, 0fC0A55DF6;
	fma.rn.f32 	%f649, %f647, %f645, 0f4081E0CF;
	fma.rn.f32 	%f650, %f645, %f644, 0f00000000;
	fma.rn.f32 	%f699, %f698, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f700, %f698, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f750, %f749, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f751, %f749, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f800, %f799, 0fBF000000, %f900;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f202, %f200, %f199, 0fC0A55DF6;
	fma.rn.f32 	%f203, %f201, %f199, 0f4081E0CF;
	fma.rn.f32 	%f204, %f199, %f198, 0f00000000;
	add.s32 	%r218, %r217, 1;
	fma.rn.f32 	%f236, %f234, %f233, 0fC0A55DF6;
	fma.rn.f32 	%f237, %f235, %f233, 0f4081E0CF;
	fma.rn.f32 	%f238, %f233, %f232, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f271, %f269, %f268, 0fC0A55DF6;
	fma.rn.f32 	%f272, %f270, %f268, 0f4081E0CF;
	fma.rn.f32 	%f273, %f268, %f267, 0f00000000;
	add.s32 	%r236, %r235, 1;
	fma.rn.f32 	%f305, %f303, %f302, 0fC0A55DF6;
	fma.rn.f32 	%f306, %f304, %f302, 0f4081E0CF;
	fma.rn.f32 	%f307, %f302, %f301, 0f00000000;
	add.s32 	%r247, %r246, 1;
	fma.rn.f32 	%f340, %f338, %f337, 0fC0A55DF6;
	fma.rn.f32 	%f341, %f339, %f337, 0f4081E0CF;
	fma.rn.f32 	%f342, %f337, %f336, 0f00000000;
	add.s32 	%r254, %r253, 1;
	fma.rn.f32 	%f374, %f372, %f371, 0fC0A55DF6;
	fma.rn.f32 	%f375, %f373, %f371, 0f4081E0CF;
	fma.rn.f32 	%f376, %f371, %f370, 0f00000000;
	add.s32 	%r265, %r264, 1;
	fma.rn.f32 	%f409, %f407, %f406, 0fC0A55DF6;
	fma.rn.f32 	%f410, %f408, %f406, 0f4081E0CF;
	fma.rn.f32 	%f411, %f406, %f405, 0f00000000;
	add.s32 	%r272, %r271, 1;
	fma.rn.f32 	%f443, %f441, %f440, 0fC0A55DF6;
	fma.rn.f32 	%f444, %f442, %f440, 0f4081E0CF;
	fma.rn.f32 	%f445, %f440, %f439, 0f00000000;
	cvt.rzi.s32.f32 	%r289, %f487;
	fma.rn.f32 	%f492, %f490, %f489, 0fC0A55DF6;
	fma.rn.f32 	%f493, %f491, %f489, 0f4081E0CF;
	fma.rn.f32 	%f494, %f489, %f488, 0f00000000;
	cvt.rzi.s32.f32 	%r312, %f539;
	fma.rn.f32 	%f544, %f542, %f541, 0fC0A55DF6;
	fma.rn.f32 	%f545, %f543, %f541, 0f4081E0CF;
	fma.rn.f32 	%f546, %f541, %f540, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f594, 0fC09DE9E6;
	fma.rn.f32 	%f601, %f597, %f599, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f651, %f649, %f645, 0fC09DE9E6;
	fma.rn.f32 	%f652, %f648, %f650, 0f00000000;
	and.b32  	%r366, %r365, 1;
	cvt.rzi.s32.f32 	%r381, %f696;
	fma.rn.f32 	%f701, %f699, %f698, 0fC0A55DF6;
	fma.rn.f32 	%f702, %f700, %f698, 0f4081E0CF;
	fma.rn.f32 	%f703, %f698, %f697, 0f00000000;
	cvt.rzi.s32.f32 	%r403, %f747;
	fma.rn.f32 	%f752, %f750, %f749, 0fC0A55DF6;
	fma.rn.f32 	%f753, %f751, %f749, 0f4081E0CF;
	fma.rn.f32 	%f754, %f749, %f748, 0f00000000;
	mul.f32 	%f801, %f800, %f800;
	fma.rn.f32 	%f205, %f203, %f199, 0fC09DE9E6;
	fma.rn.f32 	%f206, %f202, %f204, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f239, %f237, %f233, 0fC09DE9E6;
	fma.rn.f32 	%f240, %f236, %f238, 0f00000000;
	and.b32  	%r219, %r218, 1;
	fma.rn.f32 	%f274, %f272, %f268, 0fC09DE9E6;
	fma.rn.f32 	%f275, %f271, %f273, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f308, %f306, %f302, 0fC09DE9E6;
	fma.rn.f32 	%f309, %f305, %f307, 0f00000000;
	and.b32  	%r237, %r236, 1;
	fma.rn.f32 	%f343, %f341, %f337, 0fC09DE9E6;
	fma.rn.f32 	%f344, %f340, %f342, 0f00000000;
	and.b32  	%r248, %r247, 1;
	fma.rn.f32 	%f377, %f375, %f371, 0fC09DE9E6;
	fma.rn.f32 	%f378, %f374, %f376, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f412, %f410, %f406, 0fC09DE9E6;
	fma.rn.f32 	%f413, %f409, %f411, 0f00000000;
	and.b32  	%r266, %r265, 1;
	fma.rn.f32 	%f446, %f444, %f440, 0fC09DE9E6;
	fma.rn.f32 	%f447, %f443, %f445, 0f00000000;
	and.b32  	%r273, %r272, 1;
	fma.rn.f32 	%f495, %f493, %f489, 0fC09DE9E6;
	fma.rn.f32 	%f496, %f492, %f494, 0f00000000;
	and.b32  	%r290, %r289, 1;
	fma.rn.f32 	%f547, %f545, %f541, 0fC09DE9E6;
	fma.rn.f32 	%f548, %f544, %f546, 0f00000000;
	and.b32  	%r313, %r312, 1;
	fma.rn.f32 	%f602, %f600, %f594, 0f3F800000;
	fma.rn.f32 	%f603, %f593, 0f40490FDB, %f601;
	setp.eq.b32 	%p117, %r335, 1;
	fma.rn.f32 	%f653, %f651, %f645, 0f3F800000;
	fma.rn.f32 	%f654, %f644, 0f40490FDB, %f652;
	setp.eq.b32 	%p137, %r366, 1;
	fma.rn.f32 	%f704, %f702, %f698, 0fC09DE9E6;
	fma.rn.f32 	%f705, %f701, %f703, 0f00000000;
	and.b32  	%r382, %r381, 1;
	fma.rn.f32 	%f755, %f753, %f749, 0fC09DE9E6;
	fma.rn.f32 	%f756, %f752, %f754, 0f00000000;
	and.b32  	%r404, %r403, 1;
	fma.rn.f32 	%f802, %f801, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f803, %f801, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f207, %f205, %f199, 0f3F800000;
	fma.rn.f32 	%f208, %f198, 0f40490FDB, %f206;
	setp.eq.b32 	%p16, %r212, 1;
	fma.rn.f32 	%f241, %f239, %f233, 0f3F800000;
	fma.rn.f32 	%f242, %f232, 0f40490FDB, %f240;
	setp.eq.b32 	%p22, %r219, 1;
	fma.rn.f32 	%f276, %f274, %f268, 0f3F800000;
	fma.rn.f32 	%f277, %f267, 0f40490FDB, %f275;
	setp.eq.b32 	%p28, %r230, 1;
	fma.rn.f32 	%f310, %f308, %f302, 0f3F800000;
	fma.rn.f32 	%f311, %f301, 0f40490FDB, %f309;
	setp.eq.b32 	%p34, %r237, 1;
	fma.rn.f32 	%f345, %f343, %f337, 0f3F800000;
	fma.rn.f32 	%f346, %f336, 0f40490FDB, %f344;
	setp.eq.b32 	%p40, %r248, 1;
	fma.rn.f32 	%f379, %f377, %f371, 0f3F800000;
	fma.rn.f32 	%f380, %f370, 0f40490FDB, %f378;
	setp.eq.b32 	%p46, %r255, 1;
	fma.rn.f32 	%f414, %f412, %f406, 0f3F800000;
	fma.rn.f32 	%f415, %f405, 0f40490FDB, %f413;
	setp.eq.b32 	%p52, %r266, 1;
	fma.rn.f32 	%f448, %f446, %f440, 0f3F800000;
	fma.rn.f32 	%f449, %f439, 0f40490FDB, %f447;
	setp.eq.b32 	%p58, %r273, 1;
	fma.rn.f32 	%f497, %f495, %f489, 0f3F800000;
	fma.rn.f32 	%f498, %f488, 0f40490FDB, %f496;
	setp.eq.b32 	%p76, %r290, 1;
	fma.rn.f32 	%f549, %f547, %f541, 0f3F800000;
	fma.rn.f32 	%f550, %f540, 0f40490FDB, %f548;
	setp.eq.b32 	%p96, %r313, 1;
	selp.f32 	%f604, %f602, %f603, %p117;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f655, %f653, %f654, %p137;
	and.b32  	%r367, %r365, 2;
	fma.rn.f32 	%f706, %f704, %f698, 0f3F800000;
	fma.rn.f32 	%f707, %f697, 0f40490FDB, %f705;
	setp.eq.b32 	%p158, %r382, 1;
	fma.rn.f32 	%f757, %f755, %f749, 0f3F800000;
	fma.rn.f32 	%f758, %f748, 0f40490FDB, %f756;
	setp.eq.b32 	%p178, %r404, 1;
	cvt.rzi.s32.f32 	%r417, %f799;
	fma.rn.f32 	%f804, %f802, %f801, 0fC0A55DF6;
	fma.rn.f32 	%f805, %f803, %f801, 0f4081E0CF;
	fma.rn.f32 	%f806, %f801, %f800, 0f00000000;
	selp.f32 	%f209, %f207, %f208, %p16;
	and.b32  	%r213, %r211, 2;
	mov.f32 	%f210, 0f00000000;
	selp.f32 	%f243, %f241, %f242, %p22;
	and.b32  	%r220, %r218, 2;
	selp.f32 	%f278, %f276, %f277, %p28;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f312, %f310, %f311, %p34;
	and.b32  	%r238, %r236, 2;
	selp.f32 	%f347, %f345, %f346, %p40;
	and.b32  	%r249, %r247, 2;
	selp.f32 	%f381, %f379, %f380, %p46;
	and.b32  	%r256, %r254, 2;
	selp.f32 	%f416, %f414, %f415, %p52;
	and.b32  	%r267, %r265, 2;
	selp.f32 	%f450, %f448, %f449, %p58;
	and.b32  	%r274, %r272, 2;
	selp.f32 	%f499, %f497, %f498, %p76;
	and.b32  	%r291, %r289, 2;
	selp.f32 	%f551, %f549, %f550, %p96;
	and.b32  	%r314, %r312, 2;
	setp.eq.s32 	%p118, %r336, 0;
	neg.f32 	%f606, %f604;
	add.s32 	%r337, %r334, 1;
	cvt.rzi.f32.f32 	%f611, %f892;
	setp.eq.s32 	%p138, %r367, 0;
	neg.f32 	%f657, %f655;
	add.s32 	%r368, %r365, 1;
	cvt.rzi.f32.f32 	%f662, %f896;
	selp.f32 	%f708, %f706, %f707, %p158;
	and.b32  	%r383, %r381, 2;
	selp.f32 	%f759, %f757, %f758, %p178;
	and.b32  	%r405, %r403, 2;
	fma.rn.f32 	%f807, %f805, %f801, 0fC09DE9E6;
	fma.rn.f32 	%f808, %f804, %f806, 0f00000000;
	and.b32  	%r418, %r417, 1;
	setp.eq.s32 	%p17, %r213, 0;
	sub.f32 	%f211, %f210, %f209;
	setp.eq.s32 	%p23, %r220, 0;
	sub.f32 	%f245, %f210, %f243;
	setp.eq.s32 	%p29, %r231, 0;
	sub.f32 	%f280, %f210, %f278;
	setp.eq.s32 	%p35, %r238, 0;
	sub.f32 	%f314, %f210, %f312;
	setp.eq.s32 	%p41, %r249, 0;
	sub.f32 	%f349, %f210, %f347;
	setp.eq.s32 	%p47, %r256, 0;
	sub.f32 	%f383, %f210, %f381;
	setp.eq.s32 	%p53, %r267, 0;
	sub.f32 	%f418, %f210, %f416;
	setp.eq.s32 	%p59, %r274, 0;
	sub.f32 	%f452, %f210, %f450;
	setp.eq.s32 	%p77, %r291, 0;
	neg.f32 	%f501, %f499;
	add.s32 	%r292, %r289, 1;
	cvt.rzi.f32.f32 	%f506, %f884;
	setp.eq.s32 	%p97, %r314, 0;
	neg.f32 	%f553, %f551;
	add.s32 	%r315, %r312, 1;
	cvt.rzi.f32.f32 	%f558, %f888;
	selp.f32 	%f605, %f603, %f602, %p117;
	selp.f32 	%f607, %f604, %f606, %p118;
	and.b32  	%r338, %r337, 2;
	setp.eq.f32 	%p120, %f611, %f892;
	mul.f32 	%f612, %f892, 0f00000000;
	selp.f32 	%f656, %f654, %f653, %p137;
	selp.f32 	%f658, %f655, %f657, %p138;
	and.b32  	%r369, %r368, 2;
	setp.eq.f32 	%p140, %f662, %f896;
	mul.f32 	%f663, %f896, 0f00000000;
	setp.eq.s32 	%p159, %r383, 0;
	neg.f32 	%f710, %f708;
	add.s32 	%r384, %r381, 1;
	cvt.rzi.f32.f32 	%f715, %f908;
	setp.eq.s32 	%p179, %r405, 0;
	neg.f32 	%f761, %f759;
	add.s32 	%r406, %r403, 1;
	cvt.rzi.f32.f32 	%f766, %f912;
	fma.rn.f32 	%f809, %f807, %f801, 0f3F800000;
	fma.rn.f32 	%f810, %f800, 0f40490FDB, %f808;
	setp.eq.b32 	%p200, %r418, 1;
	selp.f32 	%f212, %f209, %f211, %p17;
	selp.f32 	%f246, %f243, %f245, %p23;
	selp.f32 	%f281, %f278, %f280, %p29;
	selp.f32 	%f315, %f312, %f314, %p35;
	selp.f32 	%f350, %f347, %f349, %p41;
	selp.f32 	%f384, %f381, %f383, %p47;
	selp.f32 	%f419, %f416, %f418, %p53;
	selp.f32 	%f453, %f450, %f452, %p59;
	selp.f32 	%f500, %f498, %f497, %p76;
	selp.f32 	%f502, %f499, %f501, %p77;
	and.b32  	%r293, %r292, 2;
	setp.eq.f32 	%p79, %f506, %f884;
	mul.f32 	%f507, %f884, 0f00000000;
	selp.f32 	%f552, %f550, %f549, %p96;
	selp.f32 	%f554, %f551, %f553, %p97;
	and.b32  	%r316, %r315, 2;
	setp.eq.f32 	%p99, %f558, %f888;
	mul.f32 	%f559, %f888, 0f00000000;
	setp.eq.s32 	%p119, %r338, 0;
	sub.f32 	%f609, %f210, %f605;
	selp.f32 	%f92, %f612, %f607, %p120;
	abs.f32 	%f613, %f892;
	setp.eq.s32 	%p139, %r369, 0;
	sub.f32 	%f660, %f210, %f656;
	selp.f32 	%f664, %f663, %f658, %p140;
	abs.f32 	%f665, %f896;
	selp.f32 	%f709, %f707, %f706, %p158;
	selp.f32 	%f711, %f708, %f710, %p159;
	and.b32  	%r385, %r384, 2;
	setp.eq.f32 	%p161, %f715, %f908;
	mul.f32 	%f716, %f908, 0f00000000;
	selp.f32 	%f760, %f758, %f757, %p178;
	selp.f32 	%f762, %f759, %f761, %p179;
	and.b32  	%r407, %r406, 2;
	setp.eq.f32 	%p181, %f766, %f912;
	mul.f32 	%f767, %f912, 0f00000000;
	selp.f32 	%f811, %f809, %f810, %p200;
	and.b32  	%r419, %r417, 2;
	mul.f32 	%f2, %f212, %f212;
	mul.f32 	%f7, %f246, %f246;
	mul.f32 	%f11, %f281, %f281;
	mul.f32 	%f16, %f315, %f315;
	mul.f32 	%f20, %f350, %f350;
	mul.f32 	%f25, %f384, %f384;
	mul.f32 	%f29, %f419, %f419;
	mul.f32 	%f34, %f453, %f453;
	setp.eq.s32 	%p78, %r293, 0;
	sub.f32 	%f504, %f210, %f500;
	selp.f32 	%f55, %f507, %f502, %p79;
	abs.f32 	%f508, %f884;
	setp.eq.s32 	%p98, %r316, 0;
	sub.f32 	%f556, %f210, %f552;
	selp.f32 	%f560, %f559, %f554, %p99;
	abs.f32 	%f561, %f888;
	selp.f32 	%f610, %f605, %f609, %p119;
	setp.gt.f32 	%p121, %f613, 0f4B800000;
	add.f32 	%f614, %f92, 0f3F800000;
	selp.f32 	%f661, %f656, %f660, %p139;
	setp.gt.f32 	%p141, %f665, 0f4B800000;
	add.f32 	%f666, %f664, 0f3F800000;
	setp.eq.s32 	%p160, %r385, 0;
	sub.f32 	%f713, %f210, %f709;
	selp.f32 	%f161, %f716, %f711, %p161;
	abs.f32 	%f717, %f908;
	setp.eq.s32 	%p180, %r407, 0;
	sub.f32 	%f764, %f210, %f760;
	selp.f32 	%f768, %f767, %f762, %p181;
	abs.f32 	%f769, %f912;
	setp.eq.s32 	%p201, %r419, 0;
	neg.f32 	%f813, %f811;
	add.s32 	%r420, %r417, 1;
	cvt.rzi.f32.f32 	%f818, %f900;
	mul.f32 	%f216, %f2, 0f3C0AF64E;
	mul.f32 	%f250, %f7, 0f3C0AF64E;
	mul.f32 	%f285, %f11, 0f3C0AF64E;
	mul.f32 	%f319, %f16, 0f3C0AF64E;
	mul.f32 	%f354, %f20, 0f3C0AF64E;
	mul.f32 	%f388, %f25, 0f3C0AF64E;
	mul.f32 	%f423, %f29, 0f3C0AF64E;
	mul.f32 	%f456, %f34, 0f3C0AF64E;
	selp.f32 	%f505, %f500, %f504, %p78;
	setp.gt.f32 	%p80, %f508, 0f4B800000;
	add.f32 	%f509, %f55, 0f3F800000;
	selp.f32 	%f557, %f552, %f556, %p98;
	setp.gt.f32 	%p100, %f561, 0f4B800000;
	add.f32 	%f562, %f560, 0f3F800000;
	selp.f32 	%f93, %f614, %f610, %p121;
	selp.f32 	%f667, %f666, %f661, %p141;
	selp.f32 	%f714, %f709, %f713, %p160;
	setp.gt.f32 	%p162, %f717, 0f4B800000;
	add.f32 	%f718, %f161, 0f3F800000;
	selp.f32 	%f765, %f760, %f764, %p180;
	setp.gt.f32 	%p182, %f769, 0f4B800000;
	add.f32 	%f770, %f768, 0f3F800000;
	selp.f32 	%f812, %f810, %f809, %p200;
	selp.f32 	%f814, %f811, %f813, %p201;
	and.b32  	%r421, %r420, 2;
	setp.eq.f32 	%p203, %f818, %f900;
	mul.f32 	%f819, %f900, 0f00000000;
	mul.f32 	%f6, %f216, %f874;
	mul.f32 	%f251, %f250, %f875;
	mul.f32 	%f15, %f285, %f876;
	mul.f32 	%f320, %f319, %f877;
	mul.f32 	%f24, %f354, %f878;
	mul.f32 	%f389, %f388, %f879;
	mul.f32 	%f33, %f423, %f880;
	mul.f32 	%f457, %f456, %f881;
	selp.f32 	%f56, %f509, %f505, %p80;
	selp.f32 	%f563, %f562, %f557, %p100;
	mov.b32 	%r352, %f667;
	mov.b32 	%r351, %f93;
	mov.b32 	%r358, %f664;
	mov.b32 	%r357, %f92;
	selp.f32 	%f162, %f718, %f714, %p162;
	selp.f32 	%f771, %f770, %f765, %p182;
	setp.eq.s32 	%p202, %r421, 0;
	sub.f32 	%f816, %f210, %f812;
	selp.f32 	%f129, %f819, %f814, %p203;
	abs.f32 	%f820, %f900;
	mov.b32 	%r223, %f251;
	mov.b32 	%r222, %f6;
	mov.b32 	%r241, %f320;
	mov.b32 	%r240, %f15;
	mov.b32 	%r259, %f389;
	mov.b32 	%r258, %f24;
	mov.b32 	%r277, %f457;
	mov.b32 	%r276, %f33;
	mov.b32 	%r305, %f563;
	mov.b32 	%r304, %f56;
	mov.b32 	%r308, %f560;
	mov.b32 	%r307, %f55;
	xor.b32  	%r355, %r358, -2147483648;
	xor.b32  	%r354, %r357, -2147483648;
	mov.b32 	%r396, %f771;
	mov.b32 	%r395, %f162;
	mov.b32 	%r399, %f768;
	mov.b32 	%r398, %f161;
	selp.f32 	%f817, %f812, %f816, %p202;
	setp.gt.f32 	%p204, %f820, 0f4B800000;
	add.f32 	%f821, %f129, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r10, %r9, 4;
	and.b32  	%r11, %r9, 32;
	// begin inline asm
	cvt.rn.f16x2.f32 %r221, %r223, %r222;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r239, %r241, %r240;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r257, %r259, %r258;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r275, %r277, %r276;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r306, %r308, %r307;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r350, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r353, %r355, %r354;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r356, %r358, %r357;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r359, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	selp.f32 	%f130, %f821, %f817, %p204;
	add.f32 	%f842, %f904, %f904;
	mov.b32 	%r440, %f842;
	and.b32  	%r441, %r440, -2147483648;
	or.b32  	%r442, %r441, 1056964608;
	mov.b32 	%f843, %r442;
	add.f32 	%f844, %f842, %f843;
	cvt.rzi.f32.f32 	%f845, %f844;
	abs.f32 	%f846, %f842;
	setp.gt.f32 	%p217, %f846, 0f4B000000;
	selp.f32 	%f847, %f842, %f845, %p217;
	cvt.rzi.f32.f32 	%f848, %f842;
	setp.lt.f32 	%p218, %f846, 0f3F000000;
	selp.f32 	%f849, %f848, %f847, %p218;
	cvt.rzi.s32.f32 	%r443, %f849;
	fma.rn.f32 	%f850, %f849, 0fBF000000, %f904;
	mul.f32 	%f851, %f850, %f850;
	fma.rn.f32 	%f852, %f851, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f853, %f851, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f854, %f852, %f851, 0fC0A55DF6;
	fma.rn.f32 	%f855, %f853, %f851, 0f4081E0CF;
	fma.rn.f32 	%f856, %f851, %f850, 0f00000000;
	fma.rn.f32 	%f857, %f855, %f851, 0fC09DE9E6;
	fma.rn.f32 	%f858, %f854, %f856, 0f00000000;
	fma.rn.f32 	%f859, %f857, %f851, 0f3F800000;
	fma.rn.f32 	%f860, %f850, 0f40490FDB, %f858;
	and.b32  	%r444, %r443, 1;
	setp.eq.b32 	%p219, %r444, 1;
	selp.f32 	%f861, %f859, %f860, %p219;
	selp.f32 	%f862, %f860, %f859, %p219;
	and.b32  	%r445, %r443, 2;
	setp.eq.s32 	%p220, %r445, 0;
	neg.f32 	%f863, %f861;
	selp.f32 	%f864, %f861, %f863, %p220;
	add.s32 	%r446, %r443, 1;
	and.b32  	%r447, %r446, 2;
	setp.eq.s32 	%p221, %r447, 0;
	sub.f32 	%f866, %f210, %f862;
	selp.f32 	%f867, %f862, %f866, %p221;
	cvt.rzi.f32.f32 	%f868, %f904;
	setp.eq.f32 	%p222, %f868, %f904;
	mul.f32 	%f869, %f904, 0f00000000;
	selp.f32 	%f870, %f869, %f864, %p222;
	abs.f32 	%f871, %f904;
	setp.gt.f32 	%p223, %f871, 0f4B800000;
	add.f32 	%f872, %f870, 0f3F800000;
	selp.f32 	%f873, %f872, %f867, %p223;
	mov.b32 	%r430, %f873;
	mov.b32 	%r429, %f130;
	// begin inline asm
	cvt.rn.f16x2.f32 %r428, %r430, %r429;
	// end inline asm
	mov.b32 	%r436, %f870;
	xor.b32  	%r433, %r436, -2147483648;
	mov.b32 	%r435, %f129;
	xor.b32  	%r432, %r435, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r434, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r437, %r430, %r429;
	// end inline asm
	shl.b32 	%r96, %r5, 12;
	shl.b32 	%r449, %r3, 5;
	and.b32  	%r97, %r9, 28;
	and.b32  	%r98, %r449, 96;
	and.b32  	%r99, %r449, 128;
	or.b32  	%r450, %r98, %r96;
	or.b32  	%r451, %r450, %r97;
	or.b32  	%r100, %r451, %r99;
	or.b32  	%r452, %r98, %r97;
	or.b32  	%r101, %r452, %r99;
	and.b32  	%r102, %r4, 8;
	and.b32  	%r453, %r1, 1;
	mul.lo.s32 	%r454, %r453, 1040;
	bfe.u32 	%r455, %r1, 2, 1;
	shr.u32 	%r456, %r1, 3;
	shl.b32 	%r457, %r4, 4;
	or.b32  	%r458, %r457, %r102;
	shr.u32 	%r459, %r458, 2;
	and.b32  	%r460, %r459, 30;
	shr.u32 	%r461, %r1, 1;
	bfe.u32 	%r462, %r1, 1, 1;
	mad.lo.s32 	%r463, %r455, 260, %r454;
	mad.lo.s32 	%r464, %r22, 65, %r463;
	mad.lo.s32 	%r465, %r456, 130, %r464;
	add.s32 	%r466, %r465, %r460;
	mad.lo.s32 	%r467, %r462, 520, %r466;
	mul.wide.u32 	%rd86, %r467, 4;
	mov.u64 	%rd87, shmem;
	add.s64 	%rd5, %rd87, %rd86;
	add.s32 	%r468, %r467, 32;
	mul.wide.u32 	%rd88, %r468, 4;
	add.s64 	%rd6, %rd87, %rd88;
	add.s32 	%r469, %r467, 1;
	mul.wide.u32 	%rd89, %r469, 4;
	add.s64 	%rd7, %rd87, %rd89;
	add.s32 	%r470, %r467, 33;
	mul.wide.u32 	%rd90, %r470, 4;
	add.s64 	%rd8, %rd87, %rd90;
	add.s32 	%r471, %r467, 2081;
	mul.wide.u32 	%rd91, %r471, 4;
	add.s64 	%rd9, %rd87, %rd91;
	add.s32 	%r472, %r467, 2113;
	mul.wide.u32 	%rd92, %r472, 4;
	add.s64 	%rd10, %rd87, %rd92;
	add.s32 	%r473, %r467, 2082;
	mul.wide.u32 	%rd93, %r473, 4;
	add.s64 	%rd11, %rd87, %rd93;
	add.s32 	%r474, %r467, 2114;
	mul.wide.u32 	%rd94, %r474, 4;
	add.s64 	%rd12, %rd87, %rd94;
	add.s32 	%r475, %r467, 4162;
	mul.wide.u32 	%rd95, %r475, 4;
	add.s64 	%rd13, %rd87, %rd95;
	add.s32 	%r476, %r467, 4194;
	mul.wide.u32 	%rd96, %r476, 4;
	add.s64 	%rd14, %rd87, %rd96;
	add.s32 	%r477, %r467, 4163;
	mul.wide.u32 	%rd97, %r477, 4;
	add.s64 	%rd15, %rd87, %rd97;
	add.s32 	%r478, %r467, 4195;
	mul.wide.u32 	%rd98, %r478, 4;
	add.s64 	%rd16, %rd87, %rd98;
	add.s32 	%r479, %r467, 6243;
	mul.wide.u32 	%rd99, %r479, 4;
	add.s64 	%rd17, %rd87, %rd99;
	add.s32 	%r480, %r467, 6275;
	mul.wide.u32 	%rd100, %r480, 4;
	add.s64 	%rd18, %rd87, %rd100;
	add.s32 	%r481, %r467, 6244;
	mul.wide.u32 	%rd101, %r481, 4;
	add.s64 	%rd19, %rd87, %rd101;
	add.s32 	%r482, %r467, 6276;
	mul.wide.u32 	%rd102, %r482, 4;
	add.s64 	%rd20, %rd87, %rd102;
	mul.lo.s32 	%r483, %r24, 1040;
	mul.lo.s32 	%r484, %r21, 260;
	mul.lo.s32 	%r485, %r19, 65;
	mul.lo.s32 	%r486, %r20, 130;
	mul.lo.s32 	%r487, %r22, 520;
	and.b32  	%r488, %r2, 32;
	or.b32  	%r489, %r461, 8;
	or.b32  	%r490, %r461, 16;
	or.b32  	%r491, %r461, 24;
	or.b32  	%r492, %r16, %r13;
	or.b32  	%r493, %r492, %r10;
	or.b32  	%r494, %r493, %r12;
	or.b32  	%r495, %r494, %r11;
	or.b32  	%r496, %r495, %r15;
	bfe.u32 	%r497, %r496, 1, 5;
	mul.lo.s32 	%r498, %r497, 65;
	shl.b32 	%r499, %r1, 1;
	or.b32  	%r500, %r499, %r22;
	mul.lo.s32 	%r501, %r500, 65;
	add.s32 	%r502, %r460, %r501;
	mul.wide.u32 	%rd103, %r502, 4;
	add.s64 	%rd21, %rd87, %rd103;
	cvt.u64.u32 	%rd104, %r460;
	cvt.u64.u32 	%rd105, %r501;
	add.s64 	%rd106, %rd105, %rd104;
	shl.b64 	%rd107, %rd106, 2;
	add.s64 	%rd22, %rd87, %rd107;
	shl.b32 	%r503, %r7, 18;
	add.s32 	%r504, %r503, -786432;
	shl.b32 	%r505, %r1, 2;
	or.b32  	%r506, %r505, %r16;
	or.b32  	%r507, %r506, %r23;
	shl.b32 	%r103, %r507, 8;
	cvt.s64.s32 	%rd23, %r504;
	add.s32 	%r508, %r491, %r498;
	add.s32 	%r509, %r508, %r488;
	mul.wide.u32 	%rd24, %r509, 4;
	add.s32 	%r510, %r490, %r498;
	add.s32 	%r511, %r510, %r488;
	mul.wide.u32 	%rd25, %r511, 4;
	add.s32 	%r512, %r489, %r498;
	add.s32 	%r513, %r512, %r488;
	mul.wide.u32 	%rd26, %r513, 4;
	add.s32 	%r514, %r461, %r498;
	add.s32 	%r515, %r514, %r488;
	mul.wide.u32 	%rd27, %r515, 4;
	add.s32 	%r516, %r491, %r483;
	add.s32 	%r517, %r516, %r487;
	add.s32 	%r518, %r517, %r484;
	add.s32 	%r519, %r518, %r486;
	add.s32 	%r520, %r519, %r485;
	add.s32 	%r521, %r520, %r488;
	mul.wide.u32 	%rd28, %r521, 4;
	add.s32 	%r522, %r490, %r483;
	add.s32 	%r523, %r522, %r487;
	add.s32 	%r524, %r523, %r484;
	add.s32 	%r525, %r524, %r486;
	add.s32 	%r526, %r525, %r485;
	add.s32 	%r527, %r526, %r488;
	mul.wide.u32 	%rd29, %r527, 4;
	add.s32 	%r528, %r489, %r483;
	add.s32 	%r529, %r528, %r487;
	add.s32 	%r530, %r529, %r484;
	add.s32 	%r531, %r530, %r486;
	add.s32 	%r532, %r531, %r485;
	add.s32 	%r533, %r532, %r488;
	mul.wide.u32 	%rd30, %r533, 4;
	add.s32 	%r534, %r461, %r483;
	add.s32 	%r535, %r534, %r487;
	add.s32 	%r536, %r535, %r484;
	add.s32 	%r537, %r536, %r486;
	add.s32 	%r538, %r537, %r485;
	add.s32 	%r539, %r538, %r488;
	mul.wide.u32 	%rd31, %r539, 4;
	setp.eq.s32 	%p225, %r102, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r104, %r7997;
	mov.u32 	%r8037, %r7997;
	mov.u32 	%r8036, %r7997;
	mov.u32 	%r8035, %r7997;
	mov.u32 	%r8034, %r7997;
	mov.u32 	%r8033, %r7997;
	mov.u32 	%r8032, %r7997;
	mov.u32 	%r8031, %r7997;
	mov.u32 	%r8030, %r7997;
	mov.u32 	%r8029, %r7997;
	mov.u32 	%r8028, %r7997;
	mov.u32 	%r8027, %r7997;
	mov.u32 	%r8026, %r7997;
	bra.uni 	LBB0_117;
LBB0_125:                               // %pass14979
                                        //   in Loop: Header=BB0_117 Depth=1
	or.b32  	%r7990, %r7999, %r97;
	or.b32  	%r7991, %r7990, %r99;
	or.b32  	%r7992, %r7991, %r103;
	or.b32  	%r7993, %r7992, 786432;
	cvt.u64.u32 	%rd161, %r7993;
	add.s64 	%rd162, %rd161, %rd23;
	shr.u64 	%rd163, %rd162, 35;
	add.s64 	%rd164, %rd162, %rd163;
	shr.s64 	%rd165, %rd164, 29;
	and.b64  	%rd166, %rd164, -536870912;
	setp.ne.s64 	%p253, %rd166, %rd162;
	setp.lt.s64 	%p254, %rd162, 0;
	and.pred  	%p255, %p254, %p253;
	selp.u64 	%rd167, 1, 0, %p255;
	sub.s64 	%rd168, %rd167, %rd165;
	shl.b64 	%rd169, %rd168, 29;
	add.s64 	%rd170, %rd169, %rd162;
	shl.b64 	%rd171, %rd170, 2;
	add.s64 	%rd172, %rd3, %rd171;
	st.global.v4.u32 	[%rd172], {%r177, %r179, %r178, %r180};
	setp.ne.s32 	%p256, %r104, 130816;
	add.s32 	%r104, %r104, 256;
	add.s32 	%r7994, %r104, %r5;
	setp.gt.s32 	%p257, %r6, %r7994;
	and.pred  	%p258, %p256, %p257;
	@%p258 bra 	LBB0_117;
	bra.uni 	LBB0_126;
LBB0_117:                               // %L1541
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r605, %r1, %r104;
	or.b32  	%r606, %r605, %r12;
	or.b32  	%r607, %r606, %r11;
	shl.b32 	%r608, %r607, 12;
	add.s32 	%r609, %r100, %r608;
	shr.s32 	%r610, %r609, 31;
	shr.u32 	%r611, %r610, 3;
	add.s32 	%r612, %r609, %r611;
	shr.s32 	%r613, %r612, 29;
	and.b32  	%r614, %r612, -536870912;
	setp.ne.s32 	%p226, %r614, %r609;
	setp.lt.s32 	%p227, %r609, 0;
	and.pred  	%p228, %p227, %p226;
	selp.u32 	%r615, 1, 0, %p228;
	sub.s32 	%r616, %r615, %r613;
	shl.b32 	%r617, %r616, 29;
	add.s32 	%r618, %r617, %r609;
	mul.wide.s32 	%rd109, %r618, 4;
	add.s64 	%rd110, %rd2, %rd109;
	ld.global.v4.u32 	{%r619, %r620, %r621, %r622}, [%rd110];
	or.b32  	%r623, %r101, %r608;
	or.b32  	%r624, %r623, 262144;
	add.s32 	%r625, %r624, %r96;
	shr.s32 	%r626, %r625, 31;
	shr.u32 	%r627, %r626, 3;
	add.s32 	%r628, %r625, %r627;
	shr.s32 	%r629, %r628, 29;
	and.b32  	%r630, %r628, -536870912;
	setp.ne.s32 	%p229, %r630, %r625;
	setp.lt.s32 	%p230, %r625, 0;
	and.pred  	%p231, %p230, %p229;
	selp.u32 	%r631, 1, 0, %p231;
	sub.s32 	%r632, %r631, %r629;
	shl.b32 	%r633, %r632, 29;
	add.s32 	%r634, %r633, %r625;
	mul.wide.s32 	%rd111, %r634, 4;
	add.s64 	%rd112, %rd2, %rd111;
	ld.global.v4.u32 	{%r635, %r636, %r637, %r638}, [%rd112];
	or.b32  	%r639, %r623, 524288;
	add.s32 	%r640, %r639, %r96;
	shr.s32 	%r641, %r640, 31;
	shr.u32 	%r642, %r641, 3;
	add.s32 	%r643, %r640, %r642;
	shr.s32 	%r644, %r643, 29;
	and.b32  	%r645, %r643, -536870912;
	setp.ne.s32 	%p232, %r645, %r640;
	setp.lt.s32 	%p233, %r640, 0;
	and.pred  	%p234, %p233, %p232;
	selp.u32 	%r646, 1, 0, %p234;
	sub.s32 	%r647, %r646, %r644;
	shl.b32 	%r648, %r647, 29;
	add.s32 	%r649, %r648, %r640;
	mul.wide.s32 	%rd113, %r649, 4;
	add.s64 	%rd114, %rd2, %rd113;
	ld.global.v4.u32 	{%r650, %r651, %r652, %r653}, [%rd114];
	or.b32  	%r654, %r623, 786432;
	add.s32 	%r655, %r654, %r96;
	shr.s32 	%r656, %r655, 31;
	shr.u32 	%r657, %r656, 3;
	add.s32 	%r658, %r655, %r657;
	shr.s32 	%r659, %r658, 29;
	and.b32  	%r660, %r658, -536870912;
	setp.ne.s32 	%p235, %r660, %r655;
	setp.lt.s32 	%p236, %r655, 0;
	and.pred  	%p237, %p236, %p235;
	selp.u32 	%r661, 1, 0, %p237;
	sub.s32 	%r662, %r661, %r659;
	shl.b32 	%r663, %r662, 29;
	add.s32 	%r664, %r663, %r655;
	mul.wide.s32 	%rd115, %r664, 4;
	add.s64 	%rd116, %rd2, %rd115;
	ld.global.v4.u32 	{%r665, %r666, %r667, %r668}, [%rd116];
	selp.b32 	%r669, %r621, %r619, %p225;
	shfl.sync.bfly.b32	%r670, %r669, 8, 31, -1;
	selp.b32 	%r541, %r619, %r670, %p225;
	selp.b32 	%r542, %r670, %r621, %p225;
	selp.b32 	%r671, %r622, %r620, %p225;
	shfl.sync.bfly.b32	%r672, %r671, 8, 31, -1;
	selp.b32 	%r549, %r620, %r672, %p225;
	selp.b32 	%r550, %r672, %r622, %p225;
	selp.b32 	%r673, %r637, %r635, %p225;
	shfl.sync.bfly.b32	%r674, %r673, 8, 31, -1;
	selp.b32 	%r557, %r635, %r674, %p225;
	selp.b32 	%r558, %r674, %r637, %p225;
	selp.b32 	%r675, %r638, %r636, %p225;
	shfl.sync.bfly.b32	%r676, %r675, 8, 31, -1;
	selp.b32 	%r565, %r636, %r676, %p225;
	selp.b32 	%r566, %r676, %r638, %p225;
	selp.b32 	%r677, %r652, %r650, %p225;
	shfl.sync.bfly.b32	%r678, %r677, 8, 31, -1;
	selp.b32 	%r573, %r650, %r678, %p225;
	selp.b32 	%r574, %r678, %r652, %p225;
	selp.b32 	%r679, %r653, %r651, %p225;
	shfl.sync.bfly.b32	%r680, %r679, 8, 31, -1;
	selp.b32 	%r581, %r651, %r680, %p225;
	selp.b32 	%r582, %r680, %r653, %p225;
	selp.b32 	%r681, %r667, %r665, %p225;
	shfl.sync.bfly.b32	%r682, %r681, 8, 31, -1;
	selp.b32 	%r589, %r665, %r682, %p225;
	selp.b32 	%r590, %r682, %r667, %p225;
	selp.b32 	%r683, %r668, %r666, %p225;
	shfl.sync.bfly.b32	%r684, %r683, 8, 31, -1;
	selp.b32 	%r597, %r666, %r684, %p225;
	selp.b32 	%r598, %r684, %r668, %p225;
	mov.u32 	%r599, 21520;
	// begin inline asm
	prmt.b32 %r540, %r541, %r542, %r599;
	// end inline asm
	mov.u32 	%r603, 30258;
	// begin inline asm
	prmt.b32 %r544, %r541, %r542, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r549, %r550, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r549, %r550, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r557, %r558, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r560, %r557, %r558, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r564, %r565, %r566, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r568, %r565, %r566, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r572, %r573, %r574, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r576, %r573, %r574, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r581, %r582, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r584, %r581, %r582, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r588, %r589, %r590, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r592, %r589, %r590, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r596, %r597, %r598, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r600, %r597, %r598, %r603;
	// end inline asm
	st.shared.u32 	[%rd5], %r540;
	st.shared.u32 	[%rd6], %r544;
	st.shared.u32 	[%rd7], %r548;
	st.shared.u32 	[%rd8], %r552;
	st.shared.u32 	[%rd9], %r556;
	st.shared.u32 	[%rd10], %r560;
	st.shared.u32 	[%rd11], %r564;
	st.shared.u32 	[%rd12], %r568;
	st.shared.u32 	[%rd13], %r572;
	st.shared.u32 	[%rd14], %r576;
	st.shared.u32 	[%rd15], %r580;
	st.shared.u32 	[%rd16], %r584;
	st.shared.u32 	[%rd17], %r588;
	st.shared.u32 	[%rd18], %r592;
	st.shared.u32 	[%rd19], %r596;
	st.shared.u32 	[%rd20], %r600;
	bar.sync 	0;
	mov.u32 	%r8025, 256;
	mov.u64 	%rd175, %rd87;
LBB0_118:                               // %L12868
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd117, %rd175, %rd31;
	ld.shared.u32 	%r7869, [%rd117];
	add.s64 	%rd118, %rd175, %rd30;
	ld.shared.u32 	%r7870, [%rd118];
	add.s64 	%rd119, %rd175, %rd29;
	ld.shared.u32 	%r7871, [%rd119];
	add.s64 	%rd120, %rd175, %rd28;
	ld.shared.u32 	%r7872, [%rd120];
	// begin inline asm
	mov.b32 %r690, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r701, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r689, %r7869, -2004318072;
	mov.u32 	%r688, 983055;
	// begin inline asm
	lop3.b32 %r687, %r688, %r689, %r690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r692, %r690, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r695, %r687, %r692;
	// end inline asm
	mov.u32 	%r699, 15728880;
	// begin inline asm
	lop3.b32 %r698, %r699, %r689, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r703, %r701, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r706, %r698, %r703;
	// end inline asm
	shr.u32 	%r711, %r689, 8;
	// begin inline asm
	lop3.b32 %r709, %r688, %r711, %r690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r714, %r690, %r713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r717, %r709, %r714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r720, %r699, %r711, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r725, %r701, %r724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r728, %r720, %r725;
	// end inline asm
	// begin inline asm
	mov.b32 %r736, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r747, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r735, %r7870, -2004318072;
	// begin inline asm
	lop3.b32 %r733, %r688, %r735, %r736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r737, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r738, %r736, %r737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r741, %r733, %r738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r744, %r699, %r735, %r747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r748, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r749, %r747, %r748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r752, %r744, %r749;
	// end inline asm
	shr.u32 	%r757, %r735, 8;
	// begin inline asm
	lop3.b32 %r755, %r688, %r757, %r736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r759, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r760, %r736, %r759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r763, %r755, %r760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r766, %r699, %r757, %r747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r770, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r771, %r747, %r770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r774, %r766, %r771;
	// end inline asm
	// begin inline asm
	mov.b32 %r782, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r793, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r781, %r7871, -2004318072;
	// begin inline asm
	lop3.b32 %r779, %r688, %r781, %r782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r784, %r782, %r783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r787, %r779, %r784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r790, %r699, %r781, %r793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r795, %r793, %r794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r798, %r790, %r795;
	// end inline asm
	shr.u32 	%r803, %r781, 8;
	// begin inline asm
	lop3.b32 %r801, %r688, %r803, %r782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r806, %r782, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r809, %r801, %r806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r812, %r699, %r803, %r793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r816, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r817, %r793, %r816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r820, %r812, %r817;
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r827, %r7872, -2004318072;
	// begin inline asm
	lop3.b32 %r825, %r688, %r827, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r830, %r828, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r833, %r825, %r830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r836, %r699, %r827, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r841, %r839, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r844, %r836, %r841;
	// end inline asm
	shr.u32 	%r849, %r827, 8;
	// begin inline asm
	lop3.b32 %r847, %r688, %r849, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r828, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r858, %r699, %r849, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r863, %r839, %r862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r866, %r858, %r863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r869, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r871, %r869, %r695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r874, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r876, %r874, %r706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r879, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r881, %r879, %r717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r884, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r886, %r884, %r728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r889, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r891, %r889, %r741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r894, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r896, %r894, %r752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r899, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r901, %r899, %r763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r904, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r906, %r904, %r774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r909, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r911, %r909, %r787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r914, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r916, %r914, %r798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r919, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r921, %r919, %r809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r924, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r926, %r924, %r820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r929, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r931, %r929, %r833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r934, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r936, %r934, %r844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r939, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r941, %r939, %r855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r944, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r946, %r944, %r866;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r953, %r8026, -2004318072;
	// begin inline asm
	lop3.b32 %r951, %r688, %r953, %r954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r956, %r954, %r955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r959, %r951, %r956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r962, %r699, %r953, %r965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r967, %r965, %r966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r970, %r962, %r967;
	// end inline asm
	shr.u32 	%r975, %r953, 8;
	// begin inline asm
	lop3.b32 %r973, %r688, %r975, %r954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r978, %r954, %r977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r981, %r973, %r978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r984, %r699, %r975, %r965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r989, %r965, %r988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r992, %r984, %r989;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r999, %r8027, -2004318072;
	// begin inline asm
	lop3.b32 %r997, %r688, %r999, %r1000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1002, %r1000, %r1001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1005, %r997, %r1002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1008, %r699, %r999, %r1011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1013, %r1011, %r1012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1016, %r1008, %r1013;
	// end inline asm
	shr.u32 	%r1021, %r999, 8;
	// begin inline asm
	lop3.b32 %r1019, %r688, %r1021, %r1000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1024, %r1000, %r1023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1027, %r1019, %r1024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1030, %r699, %r1021, %r1011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1035, %r1011, %r1034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1038, %r1030, %r1035;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1045, %r8028, -2004318072;
	// begin inline asm
	lop3.b32 %r1043, %r688, %r1045, %r1046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1047, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1048, %r1046, %r1047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1051, %r1043, %r1048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1054, %r699, %r1045, %r1057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1059, %r1057, %r1058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1062, %r1054, %r1059;
	// end inline asm
	shr.u32 	%r1067, %r1045, 8;
	// begin inline asm
	lop3.b32 %r1065, %r688, %r1067, %r1046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1070, %r1046, %r1069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1073, %r1065, %r1070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1076, %r699, %r1067, %r1057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1081, %r1057, %r1080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1084, %r1076, %r1081;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1091, %r8029, -2004318072;
	// begin inline asm
	lop3.b32 %r1089, %r688, %r1091, %r1092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1092, %r1093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1097, %r1089, %r1094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1100, %r699, %r1091, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1105, %r1103, %r1104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1108, %r1100, %r1105;
	// end inline asm
	shr.u32 	%r1113, %r1091, 8;
	// begin inline asm
	lop3.b32 %r1111, %r688, %r1113, %r1092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1116, %r1092, %r1115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1119, %r1111, %r1116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1122, %r699, %r1113, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1127, %r1103, %r1126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1130, %r1122, %r1127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1133, %r221, %r959, %r871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1137, %r221, %r970, %r876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1141, %r221, %r981, %r881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1145, %r221, %r992, %r886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1149, %r221, %r1005, %r891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1153, %r221, %r1016, %r896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1157, %r221, %r1027, %r901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1161, %r221, %r1038, %r906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1165, %r221, %r1051, %r911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1169, %r221, %r1062, %r916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1173, %r221, %r1073, %r921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1177, %r221, %r1084, %r926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1181, %r221, %r1097, %r931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1185, %r221, %r1108, %r936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1189, %r221, %r1119, %r941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1193, %r221, %r1130, %r946;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1201, %r8030, -2004318072;
	// begin inline asm
	lop3.b32 %r1199, %r688, %r1201, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1202, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1210, %r699, %r1201, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1213, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	shr.u32 	%r1223, %r1201, 8;
	// begin inline asm
	lop3.b32 %r1221, %r688, %r1223, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1226, %r1202, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1229, %r1221, %r1226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1232, %r699, %r1223, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1237, %r1213, %r1236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1240, %r1232, %r1237;
	// end inline asm
	// begin inline asm
	mov.b32 %r1248, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1259, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1247, %r8031, -2004318072;
	// begin inline asm
	lop3.b32 %r1245, %r688, %r1247, %r1248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1250, %r1248, %r1249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1253, %r1245, %r1250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1256, %r699, %r1247, %r1259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1261, %r1259, %r1260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1264, %r1256, %r1261;
	// end inline asm
	shr.u32 	%r1269, %r1247, 8;
	// begin inline asm
	lop3.b32 %r1267, %r688, %r1269, %r1248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1272, %r1248, %r1271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1275, %r1267, %r1272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1278, %r699, %r1269, %r1259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1282, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1283, %r1259, %r1282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1286, %r1278, %r1283;
	// end inline asm
	// begin inline asm
	mov.b32 %r1294, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1305, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1293, %r8032, -2004318072;
	// begin inline asm
	lop3.b32 %r1291, %r688, %r1293, %r1294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1296, %r1294, %r1295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1299, %r1291, %r1296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1302, %r699, %r1293, %r1305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1306, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1307, %r1305, %r1306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1310, %r1302, %r1307;
	// end inline asm
	shr.u32 	%r1315, %r1293, 8;
	// begin inline asm
	lop3.b32 %r1313, %r688, %r1315, %r1294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1318, %r1294, %r1317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1321, %r1313, %r1318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1324, %r699, %r1315, %r1305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1328, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1329, %r1305, %r1328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1332, %r1324, %r1329;
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1351, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1339, %r8033, -2004318072;
	// begin inline asm
	lop3.b32 %r1337, %r688, %r1339, %r1340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1342, %r1340, %r1341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1345, %r1337, %r1342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1348, %r699, %r1339, %r1351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1352, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1353, %r1351, %r1352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1356, %r1348, %r1353;
	// end inline asm
	shr.u32 	%r1361, %r1339, 8;
	// begin inline asm
	lop3.b32 %r1359, %r688, %r1361, %r1340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1363, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1364, %r1340, %r1363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1367, %r1359, %r1364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1370, %r699, %r1361, %r1351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1374, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1375, %r1351, %r1374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1378, %r1370, %r1375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1381, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1383, %r1381, %r1207, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1387, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1389, %r1387, %r1218, %r1137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1393, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1395, %r1393, %r1229, %r1141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1399, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1401, %r1399, %r1240, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1405, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1407, %r1405, %r1253, %r1149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1411, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1413, %r1411, %r1264, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1417, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1419, %r1417, %r1275, %r1157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1423, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1425, %r1423, %r1286, %r1161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1429, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1431, %r1429, %r1299, %r1165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1435, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1437, %r1435, %r1310, %r1169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1441, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1443, %r1441, %r1321, %r1173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1447, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1449, %r1447, %r1332, %r1177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1453, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1455, %r1453, %r1345, %r1181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1459, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1461, %r1459, %r1356, %r1185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1465, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1467, %r1465, %r1367, %r1189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1471, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1473, %r1471, %r1378, %r1193;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1481, %r8034, -2004318072;
	// begin inline asm
	lop3.b32 %r1479, %r688, %r1481, %r1482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1484, %r1482, %r1483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1487, %r1479, %r1484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1490, %r699, %r1481, %r1493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1495, %r1493, %r1494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1498, %r1490, %r1495;
	// end inline asm
	shr.u32 	%r1503, %r1481, 8;
	// begin inline asm
	lop3.b32 %r1501, %r688, %r1503, %r1482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1505, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1506, %r1482, %r1505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1509, %r1501, %r1506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1512, %r699, %r1503, %r1493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1493, %r1516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1512, %r1517;
	// end inline asm
	// begin inline asm
	mov.b32 %r1528, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1539, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1527, %r8035, -2004318072;
	// begin inline asm
	lop3.b32 %r1525, %r688, %r1527, %r1528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1529, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1530, %r1528, %r1529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1533, %r1525, %r1530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1536, %r699, %r1527, %r1539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1540, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1541, %r1539, %r1540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1544, %r1536, %r1541;
	// end inline asm
	shr.u32 	%r1549, %r1527, 8;
	// begin inline asm
	lop3.b32 %r1547, %r688, %r1549, %r1528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1551, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1552, %r1528, %r1551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1555, %r1547, %r1552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1558, %r699, %r1549, %r1539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1562, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1563, %r1539, %r1562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1566, %r1558, %r1563;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1585, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1573, %r8036, -2004318072;
	// begin inline asm
	lop3.b32 %r1571, %r688, %r1573, %r1574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1576, %r1574, %r1575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1579, %r1571, %r1576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1582, %r699, %r1573, %r1585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1587, %r1585, %r1586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1590, %r1582, %r1587;
	// end inline asm
	shr.u32 	%r1595, %r1573, 8;
	// begin inline asm
	lop3.b32 %r1593, %r688, %r1595, %r1574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1598, %r1574, %r1597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1601, %r1593, %r1598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1604, %r699, %r1595, %r1585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1609, %r1585, %r1608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1612, %r1604, %r1609;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1631, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1619, %r8037, -2004318072;
	// begin inline asm
	lop3.b32 %r1617, %r688, %r1619, %r1620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1621, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1622, %r1620, %r1621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1625, %r1617, %r1622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1628, %r699, %r1619, %r1631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1632, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1633, %r1631, %r1632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1636, %r1628, %r1633;
	// end inline asm
	shr.u32 	%r1641, %r1619, 8;
	// begin inline asm
	lop3.b32 %r1639, %r688, %r1641, %r1620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1644, %r1620, %r1643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1647, %r1639, %r1644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1650, %r699, %r1641, %r1631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1655, %r1631, %r1654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1658, %r1650, %r1655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r257, %r1487, %r1383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1729, %r257, %r1498, %r1389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1741, %r257, %r1509, %r1395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r257, %r1520, %r1401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r257, %r1533, %r1407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r257, %r1544, %r1413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r257, %r1555, %r1419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r257, %r1566, %r1425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r257, %r1579, %r1431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1765, %r257, %r1590, %r1437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r257, %r1601, %r1443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r257, %r1612, %r1449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r257, %r1625, %r1455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r257, %r1636, %r1461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r257, %r1647, %r1467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r257, %r1658, %r1473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1725, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1727, %r1725, %r1729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r303, %r1732, %r1727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1734, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1736, %r1734, %r1738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r303, %r1741, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1743, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1745, %r1743, %r1747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r303, %r1750, %r1745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1752, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1754, %r1752, %r1756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1757, %r303, %r1759, %r1754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1761, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1763, %r1761, %r1765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r303, %r1768, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1770, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1772, %r1770, %r1774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r303, %r1777, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1779, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1781, %r1779, %r1783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r303, %r1786, %r1781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1788, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1790, %r1788, %r1792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r303, %r1795, %r1790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1797, %r306, %r1732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r303, %r1729, %r1797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1804, %r306, %r1741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r303, %r1738, %r1804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1811, %r306, %r1750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r303, %r1747, %r1811;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1818, %r306, %r1759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1821, %r303, %r1756, %r1818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1825, %r306, %r1768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r303, %r1765, %r1825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1832, %r306, %r1777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r303, %r1774, %r1832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1839, %r306, %r1786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r303, %r1783, %r1839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1846, %r306, %r1795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1849, %r303, %r1792, %r1846;
	// end inline asm
	mov.u32 	%r1861, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1940, %r1937}, {%r350, %r356, %r353, %r359}, {%r1730, %r1800}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1949, %r1946}, {%r350, %r356, %r353, %r359}, {%r1739, %r1807}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1958, %r1955}, {%r350, %r356, %r353, %r359}, {%r1748, %r1814}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1967, %r1964}, {%r350, %r356, %r353, %r359}, {%r1757, %r1821}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1976, %r1973}, {%r350, %r356, %r353, %r359}, {%r1766, %r1828}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1985, %r1982}, {%r350, %r356, %r353, %r359}, {%r1775, %r1835}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1994, %r1991}, {%r350, %r356, %r353, %r359}, {%r1784, %r1842}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2003, %r2000}, {%r350, %r356, %r353, %r359}, {%r1793, %r1849}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1933, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1935, %r1933, %r1937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1938, %r394, %r1940, %r1935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1942, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1944, %r1942, %r1946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1947, %r394, %r1949, %r1944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1951, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1953, %r1951, %r1955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1956, %r394, %r1958, %r1953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1960, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1962, %r1960, %r1964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1965, %r394, %r1967, %r1962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1969, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1971, %r1969, %r1973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1974, %r394, %r1976, %r1971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1978, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1980, %r1978, %r1982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1983, %r394, %r1985, %r1980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1987, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1989, %r1987, %r1991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1992, %r394, %r1994, %r1989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1996, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1998, %r1996, %r2000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2001, %r394, %r2003, %r1998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2005, %r397, %r1940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2008, %r394, %r1937, %r2005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2012, %r397, %r1949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2015, %r394, %r1946, %r2012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2019, %r397, %r1958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2022, %r394, %r1955, %r2019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2026, %r397, %r1967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2029, %r394, %r1964, %r2026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2033, %r397, %r1976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2036, %r394, %r1973, %r2033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2040, %r397, %r1985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2043, %r394, %r1982, %r2040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2047, %r397, %r1994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2050, %r394, %r1991, %r2047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2054, %r397, %r2003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2057, %r394, %r2000, %r2054;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2061, %r2062}, {%r428, %r434, %r431, %r437}, {%r1938, %r2008}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2071, %r2072}, {%r428, %r434, %r431, %r437}, {%r1947, %r2015}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2081, %r2082}, {%r428, %r434, %r431, %r437}, {%r1956, %r2022}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2091, %r2092}, {%r428, %r434, %r431, %r437}, {%r1965, %r2029}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2101, %r2102}, {%r428, %r434, %r431, %r437}, {%r1974, %r2036}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2111, %r2112}, {%r428, %r434, %r431, %r437}, {%r1983, %r2043}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2121, %r2122}, {%r428, %r434, %r431, %r437}, {%r1992, %r2050}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2131, %r2132}, {%r428, %r434, %r431, %r437}, {%r2001, %r2057}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2141, %r17, %r2061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2144, %r17, %r2062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2147, %r17, %r2071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2150, %r17, %r2072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2153, %r17, %r2081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2156, %r17, %r2082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2159, %r17, %r2091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2162, %r17, %r2092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2165, %r17, %r2101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2168, %r17, %r2102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2171, %r17, %r2111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2174, %r17, %r2112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2177, %r17, %r2121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2180, %r17, %r2122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2183, %r17, %r2131;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2186, %r17, %r2132;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2190, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2191, %r2141, %r2189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2194, %r2191, %r2190;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2199, %r2144, %r2197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2202, %r2199, %r2198;
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2207, %r2147, %r2205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2210, %r2207, %r2206;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2215, %r2150, %r2213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2218, %r2215, %r2214;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2223, %r2153, %r2221;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2226, %r2223, %r2222;
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2231, %r2156, %r2229;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2234, %r2231, %r2230;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2239, %r2159, %r2237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2242, %r2239, %r2238;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2247, %r2162, %r2245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2250, %r2247, %r2246;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2255, %r2165, %r2253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2258, %r2255, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2263, %r2168, %r2261;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2266, %r2263, %r2262;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2271, %r2171, %r2269;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2274, %r2271, %r2270;
	// end inline asm
	// begin inline asm
	mov.b32 %r2277, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2278, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2279, %r2174, %r2277;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2282, %r2279, %r2278;
	// end inline asm
	// begin inline asm
	mov.b32 %r2285, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2287, %r2177, %r2285;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2290, %r2287, %r2286;
	// end inline asm
	// begin inline asm
	mov.b32 %r2293, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2295, %r2180, %r2293;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2298, %r2295, %r2294;
	// end inline asm
	// begin inline asm
	mov.b32 %r2301, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2302, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2303, %r2183, %r2301;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2306, %r2303, %r2302;
	// end inline asm
	// begin inline asm
	mov.b32 %r2309, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2311, %r2186, %r2309;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2314, %r2311, %r2310;
	// end inline asm
	// begin inline asm
	mov.b32 %r2320, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2318, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2319, %r2320, %r2318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2322, %r2194, %r2319;
	// end inline asm
	// begin inline asm
	mov.b32 %r2325, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2326, %r2320, %r2325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2329, %r2202, %r2326;
	// end inline asm
	// begin inline asm
	mov.b32 %r2332, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2333, %r2320, %r2332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2336, %r2210, %r2333;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2340, %r2320, %r2339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2343, %r2218, %r2340;
	// end inline asm
	mov.u32 	%r2349, 25152;
	// begin inline asm
	prmt.b32 %r2346, %r2322, %r2336, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2350, %r2329, %r2343, %r2349;
	// end inline asm
	shl.b32 	%r2357, %r2350, 4;
	mov.u32 	%r2355, 252645135;
	// begin inline asm
	lop3.b32 %r2354, %r2355, %r2346, %r2357, 202;
	// end inline asm
	xor.b32  	%r7873, %r2354, -2004318072;
	// begin inline asm
	mov.b32 %r2361, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2359, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2360, %r2361, %r2359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2363, %r2226, %r2360;
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2361, %r2366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2370, %r2234, %r2367;
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2361, %r2373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2377, %r2242, %r2374;
	// end inline asm
	// begin inline asm
	mov.b32 %r2380, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2381, %r2361, %r2380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2384, %r2250, %r2381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2387, %r2363, %r2377, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2391, %r2370, %r2384, %r2349;
	// end inline asm
	shl.b32 	%r2398, %r2391, 4;
	// begin inline asm
	lop3.b32 %r2395, %r2355, %r2387, %r2398, 202;
	// end inline asm
	xor.b32  	%r7874, %r2395, -2004318072;
	// begin inline asm
	mov.b32 %r2402, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2402, %r2400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2404, %r2258, %r2401;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2402, %r2407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2266, %r2408;
	// end inline asm
	// begin inline asm
	mov.b32 %r2414, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2402, %r2414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2274, %r2415;
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2402, %r2421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2425, %r2282, %r2422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2428, %r2404, %r2418, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2432, %r2411, %r2425, %r2349;
	// end inline asm
	shl.b32 	%r2439, %r2432, 4;
	// begin inline asm
	lop3.b32 %r2436, %r2355, %r2428, %r2439, 202;
	// end inline asm
	xor.b32  	%r7875, %r2436, -2004318072;
	// begin inline asm
	mov.b32 %r2443, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2441, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2442, %r2443, %r2441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2290, %r2442;
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2449, %r2443, %r2448;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2452, %r2298, %r2449;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2443, %r2455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2459, %r2306, %r2456;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2443, %r2462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2314, %r2463;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2469, %r2445, %r2459, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2473, %r2452, %r2466, %r2349;
	// end inline asm
	shl.b32 	%r2480, %r2473, 4;
	// begin inline asm
	lop3.b32 %r2477, %r2355, %r2469, %r2480, 202;
	// end inline asm
	xor.b32  	%r7876, %r2477, -2004318072;
	add.s64 	%rd121, %rd175, %rd27;
	st.shared.u32 	[%rd121], %r7873;
	add.s64 	%rd122, %rd175, %rd26;
	st.shared.u32 	[%rd122], %r7874;
	add.s64 	%rd123, %rd175, %rd25;
	st.shared.u32 	[%rd123], %r7875;
	add.s64 	%rd124, %rd175, %rd24;
	st.shared.u32 	[%rd124], %r7876;
	ld.shared.u32 	%r8026, [%rd117];
	ld.shared.u32 	%r8027, [%rd118];
	ld.shared.u32 	%r8028, [%rd119];
	ld.shared.u32 	%r8029, [%rd120];
	// begin inline asm
	mov.b32 %r2486, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2485, %r8026, -2004318072;
	// begin inline asm
	lop3.b32 %r2483, %r688, %r2485, %r2486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2488, %r2486, %r2487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2491, %r2483, %r2488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2494, %r699, %r2485, %r2497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2499, %r2497, %r2498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2502, %r2494, %r2499;
	// end inline asm
	shr.u32 	%r2507, %r2485, 8;
	// begin inline asm
	lop3.b32 %r2505, %r688, %r2507, %r2486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2509, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2510, %r2486, %r2509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2513, %r2505, %r2510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2516, %r699, %r2507, %r2497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2520, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2521, %r2497, %r2520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2524, %r2516, %r2521;
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2543, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2531, %r8027, -2004318072;
	// begin inline asm
	lop3.b32 %r2529, %r688, %r2531, %r2532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2534, %r2532, %r2533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2537, %r2529, %r2534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2540, %r699, %r2531, %r2543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2545, %r2543, %r2544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2548, %r2540, %r2545;
	// end inline asm
	shr.u32 	%r2553, %r2531, 8;
	// begin inline asm
	lop3.b32 %r2551, %r688, %r2553, %r2532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2555, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2556, %r2532, %r2555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2559, %r2551, %r2556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2562, %r699, %r2553, %r2543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2566, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2567, %r2543, %r2566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2570, %r2562, %r2567;
	// end inline asm
	// begin inline asm
	mov.b32 %r2578, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2589, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2577, %r8028, -2004318072;
	// begin inline asm
	lop3.b32 %r2575, %r688, %r2577, %r2578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2580, %r2578, %r2579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2583, %r2575, %r2580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2586, %r699, %r2577, %r2589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2590, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2591, %r2589, %r2590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2594, %r2586, %r2591;
	// end inline asm
	shr.u32 	%r2599, %r2577, 8;
	// begin inline asm
	lop3.b32 %r2597, %r688, %r2599, %r2578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2601, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2602, %r2578, %r2601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2605, %r2597, %r2602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2608, %r699, %r2599, %r2589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2612, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2613, %r2589, %r2612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2616, %r2608, %r2613;
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2635, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2623, %r8029, -2004318072;
	// begin inline asm
	lop3.b32 %r2621, %r688, %r2623, %r2624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2626, %r2624, %r2625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2629, %r2621, %r2626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2632, %r699, %r2623, %r2635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2637, %r2635, %r2636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2640, %r2632, %r2637;
	// end inline asm
	shr.u32 	%r2645, %r2623, 8;
	// begin inline asm
	lop3.b32 %r2643, %r688, %r2645, %r2624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2648, %r2624, %r2647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2651, %r2643, %r2648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2654, %r699, %r2645, %r2635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2659, %r2635, %r2658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2662, %r2654, %r2659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2665, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2667, %r2665, %r2491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2670, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2672, %r2670, %r2502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2675, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2677, %r2675, %r2513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2680, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2682, %r2680, %r2524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2685, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2687, %r2685, %r2537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2690, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2692, %r2690, %r2548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2695, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2697, %r2695, %r2559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2700, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2702, %r2700, %r2570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2705, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2707, %r2705, %r2583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2710, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2712, %r2710, %r2594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2715, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2717, %r2715, %r2605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2720, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2722, %r2720, %r2616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2725, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2727, %r2725, %r2629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2730, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2732, %r2730, %r2640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2735, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2737, %r2735, %r2651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2740, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2742, %r2740, %r2662;
	// end inline asm
	// begin inline asm
	mov.b32 %r2750, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2747, %r688, %r1201, %r2750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2752, %r2750, %r2751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2755, %r2747, %r2752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2758, %r699, %r1201, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2763, %r2761, %r2762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2766, %r2758, %r2763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2769, %r688, %r1223, %r2750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2773, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2774, %r2750, %r2773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2777, %r2769, %r2774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2780, %r699, %r1223, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2761, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	// begin inline asm
	mov.b32 %r2796, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2807, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2793, %r688, %r1247, %r2796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2798, %r2796, %r2797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2801, %r2793, %r2798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2804, %r699, %r1247, %r2807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2808, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2809, %r2807, %r2808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2812, %r2804, %r2809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2815, %r688, %r1269, %r2796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2819, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2820, %r2796, %r2819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2823, %r2815, %r2820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2826, %r699, %r1269, %r2807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2830, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2831, %r2807, %r2830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2834, %r2826, %r2831;
	// end inline asm
	// begin inline asm
	mov.b32 %r2842, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2853, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2839, %r688, %r1293, %r2842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2843, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2844, %r2842, %r2843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2847, %r2839, %r2844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2850, %r699, %r1293, %r2853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2854, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2855, %r2853, %r2854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2858, %r2850, %r2855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2861, %r688, %r1315, %r2842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2865, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2866, %r2842, %r2865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2869, %r2861, %r2866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2872, %r699, %r1315, %r2853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2876, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2877, %r2853, %r2876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2880, %r2872, %r2877;
	// end inline asm
	// begin inline asm
	mov.b32 %r2888, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2899, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2885, %r688, %r1339, %r2888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2890, %r2888, %r2889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2893, %r2885, %r2890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2896, %r699, %r1339, %r2899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2901, %r2899, %r2900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2904, %r2896, %r2901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2907, %r688, %r1361, %r2888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2911, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2912, %r2888, %r2911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2915, %r2907, %r2912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2918, %r699, %r1361, %r2899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2922, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2923, %r2899, %r2922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2926, %r2918, %r2923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r221, %r2755, %r2667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r221, %r2766, %r2672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r221, %r2777, %r2677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r221, %r2788, %r2682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r221, %r2801, %r2687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2949, %r221, %r2812, %r2692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r221, %r2823, %r2697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r221, %r2834, %r2702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r221, %r2847, %r2707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r221, %r2858, %r2712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r221, %r2869, %r2717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r221, %r2880, %r2722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r221, %r2893, %r2727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r221, %r2904, %r2732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r221, %r2915, %r2737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r221, %r2926, %r2742;
	// end inline asm
	// begin inline asm
	mov.b32 %r2998, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3009, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2995, %r688, %r1481, %r2998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3000, %r2998, %r2999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3003, %r2995, %r3000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3006, %r699, %r1481, %r3009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3011, %r3009, %r3010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3014, %r3006, %r3011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3017, %r688, %r1503, %r2998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3022, %r2998, %r3021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3025, %r3017, %r3022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3028, %r699, %r1503, %r3009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3032, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3033, %r3009, %r3032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3036, %r3028, %r3033;
	// end inline asm
	// begin inline asm
	mov.b32 %r3044, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3055, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3041, %r688, %r1527, %r3044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3045, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3046, %r3044, %r3045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3049, %r3041, %r3046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3052, %r699, %r1527, %r3055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3057, %r3055, %r3056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3060, %r3052, %r3057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3063, %r688, %r1549, %r3044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3068, %r3044, %r3067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3071, %r3063, %r3068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3074, %r699, %r1549, %r3055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3078, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3079, %r3055, %r3078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3082, %r3074, %r3079;
	// end inline asm
	// begin inline asm
	mov.b32 %r3090, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3101, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3087, %r688, %r1573, %r3090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3092, %r3090, %r3091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3095, %r3087, %r3092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3098, %r699, %r1573, %r3101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3102, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3103, %r3101, %r3102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3106, %r3098, %r3103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3109, %r688, %r1595, %r3090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3113, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3114, %r3090, %r3113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3117, %r3109, %r3114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3120, %r699, %r1595, %r3101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3124, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3125, %r3101, %r3124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3128, %r3120, %r3125;
	// end inline asm
	// begin inline asm
	mov.b32 %r3136, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3147, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3133, %r688, %r1619, %r3136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3137, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3138, %r3136, %r3137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3141, %r3133, %r3138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3144, %r699, %r1619, %r3147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3148, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3149, %r3147, %r3148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3152, %r3144, %r3149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3155, %r688, %r1641, %r3136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3159, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3160, %r3136, %r3159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3163, %r3155, %r3160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3166, %r699, %r1641, %r3147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3170, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3171, %r3147, %r3170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3174, %r3166, %r3171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3177, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3179, %r3177, %r3003, %r2929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3183, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3185, %r3183, %r3014, %r2933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3189, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3191, %r3189, %r3025, %r2937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3195, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3197, %r3195, %r3036, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3201, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3203, %r3201, %r3049, %r2945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3207, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3209, %r3207, %r3060, %r2949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3213, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3215, %r3213, %r3071, %r2953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3219, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3221, %r3219, %r3082, %r2957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3225, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3227, %r3225, %r3095, %r2961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3231, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3233, %r3231, %r3106, %r2965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3237, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3239, %r3237, %r3117, %r2969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3243, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3245, %r3243, %r3128, %r2973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3249, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3251, %r3249, %r3141, %r2977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3255, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3257, %r3255, %r3152, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3261, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3263, %r3261, %r3163, %r2985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3267, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3269, %r3267, %r3174, %r2989;
	// end inline asm
	// begin inline asm
	mov.b32 %r3278, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3289, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3275, %r688, %r689, %r3278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3279, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3280, %r3278, %r3279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3283, %r3275, %r3280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3286, %r699, %r689, %r3289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3291, %r3289, %r3290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3294, %r3286, %r3291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3297, %r688, %r711, %r3278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3302, %r3278, %r3301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3305, %r3297, %r3302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3308, %r699, %r711, %r3289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3313, %r3289, %r3312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3316, %r3308, %r3313;
	// end inline asm
	// begin inline asm
	mov.b32 %r3324, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3335, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3321, %r688, %r735, %r3324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3325, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3326, %r3324, %r3325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3329, %r3321, %r3326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3332, %r699, %r735, %r3335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3337, %r3335, %r3336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3340, %r3332, %r3337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3343, %r688, %r757, %r3324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3347, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3348, %r3324, %r3347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3351, %r3343, %r3348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3354, %r699, %r757, %r3335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3358, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3359, %r3335, %r3358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3362, %r3354, %r3359;
	// end inline asm
	// begin inline asm
	mov.b32 %r3370, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3381, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3367, %r688, %r781, %r3370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3371, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3372, %r3370, %r3371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3375, %r3367, %r3372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3378, %r699, %r781, %r3381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3382, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3383, %r3381, %r3382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3386, %r3378, %r3383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3389, %r688, %r803, %r3370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3393, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3394, %r3370, %r3393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3397, %r3389, %r3394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3400, %r699, %r803, %r3381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3405, %r3381, %r3404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3408, %r3400, %r3405;
	// end inline asm
	// begin inline asm
	mov.b32 %r3416, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3427, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3413, %r688, %r827, %r3416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3417, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3418, %r3416, %r3417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3421, %r3413, %r3418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3424, %r699, %r827, %r3427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3428, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3429, %r3427, %r3428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3432, %r3424, %r3429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3435, %r688, %r849, %r3416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3440, %r3416, %r3439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3443, %r3435, %r3440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3446, %r699, %r849, %r3427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3451, %r3427, %r3450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3454, %r3446, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r257, %r3283, %r3179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r257, %r3294, %r3185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r257, %r3305, %r3191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r257, %r3316, %r3197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r257, %r3329, %r3203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r257, %r3340, %r3209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r257, %r3351, %r3215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3552, %r257, %r3362, %r3221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r257, %r3375, %r3227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3561, %r257, %r3386, %r3233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r257, %r3397, %r3239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r257, %r3408, %r3245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3582, %r257, %r3421, %r3251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3579, %r257, %r3432, %r3257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r257, %r3443, %r3263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r257, %r3454, %r3269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3521, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r3521, %r3525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r303, %r3528, %r3523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3530, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r3530, %r3534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r303, %r3537, %r3532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3539, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3541, %r3539, %r3543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3544, %r303, %r3546, %r3541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3548, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r3548, %r3552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r303, %r3555, %r3550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3557, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r3557, %r3561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r303, %r3564, %r3559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3566, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3568, %r3566, %r3570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3571, %r303, %r3573, %r3568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3575, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r3575, %r3579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r303, %r3582, %r3577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3584, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r3584, %r3588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r303, %r3591, %r3586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3593, %r306, %r3528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3596, %r303, %r3525, %r3593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3600, %r306, %r3537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3603, %r303, %r3534, %r3600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3607, %r306, %r3546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3610, %r303, %r3543, %r3607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3614, %r306, %r3555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3617, %r303, %r3552, %r3614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3621, %r306, %r3564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3624, %r303, %r3561, %r3621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3628, %r306, %r3573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3631, %r303, %r3570, %r3628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3635, %r306, %r3582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3638, %r303, %r3579, %r3635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3642, %r306, %r3591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3645, %r303, %r3588, %r3642;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3736, %r3733}, {%r350, %r356, %r353, %r359}, {%r3526, %r3596}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3745, %r3742}, {%r350, %r356, %r353, %r359}, {%r3535, %r3603}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3754, %r3751}, {%r350, %r356, %r353, %r359}, {%r3544, %r3610}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3763, %r3760}, {%r350, %r356, %r353, %r359}, {%r3553, %r3617}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3772, %r3769}, {%r350, %r356, %r353, %r359}, {%r3562, %r3624}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3781, %r3778}, {%r350, %r356, %r353, %r359}, {%r3571, %r3631}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3790, %r3787}, {%r350, %r356, %r353, %r359}, {%r3580, %r3638}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3799, %r3796}, {%r350, %r356, %r353, %r359}, {%r3589, %r3645}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3729, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3731, %r3729, %r3733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3734, %r394, %r3736, %r3731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3738, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3740, %r3738, %r3742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3743, %r394, %r3745, %r3740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3747, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3749, %r3747, %r3751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3752, %r394, %r3754, %r3749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3756, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3758, %r3756, %r3760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3761, %r394, %r3763, %r3758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3765, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3767, %r3765, %r3769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3770, %r394, %r3772, %r3767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3774, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3776, %r3774, %r3778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3779, %r394, %r3781, %r3776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3783, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3785, %r3783, %r3787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3788, %r394, %r3790, %r3785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3792, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3794, %r3792, %r3796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3797, %r394, %r3799, %r3794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3801, %r397, %r3736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3804, %r394, %r3733, %r3801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3808, %r397, %r3745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3811, %r394, %r3742, %r3808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3815, %r397, %r3754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3818, %r394, %r3751, %r3815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3822, %r397, %r3763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3825, %r394, %r3760, %r3822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3829, %r397, %r3772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3832, %r394, %r3769, %r3829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3836, %r397, %r3781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3839, %r394, %r3778, %r3836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3843, %r397, %r3790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3846, %r394, %r3787, %r3843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3850, %r397, %r3799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3853, %r394, %r3796, %r3850;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3857, %r3858}, {%r428, %r434, %r431, %r437}, {%r3734, %r3804}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3867, %r3868}, {%r428, %r434, %r431, %r437}, {%r3743, %r3811}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3877, %r3878}, {%r428, %r434, %r431, %r437}, {%r3752, %r3818}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3887, %r3888}, {%r428, %r434, %r431, %r437}, {%r3761, %r3825}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3897, %r3898}, {%r428, %r434, %r431, %r437}, {%r3770, %r3832}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3907, %r3908}, {%r428, %r434, %r431, %r437}, {%r3779, %r3839}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3917, %r3918}, {%r428, %r434, %r431, %r437}, {%r3788, %r3846}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3927, %r3928}, {%r428, %r434, %r431, %r437}, {%r3797, %r3853}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3937, %r17, %r3857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3940, %r17, %r3858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3943, %r17, %r3867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3946, %r17, %r3868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3949, %r17, %r3877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3952, %r17, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3955, %r17, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3958, %r17, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3961, %r17, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3964, %r17, %r3898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3967, %r17, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3970, %r17, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3973, %r17, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3976, %r17, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3979, %r17, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3982, %r17, %r3928;
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3987, %r3937, %r3985;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3990, %r3987, %r3986;
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3995, %r3940, %r3993;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3998, %r3995, %r3994;
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4003, %r3943, %r4001;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4006, %r4003, %r4002;
	// end inline asm
	// begin inline asm
	mov.b32 %r4009, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4011, %r3946, %r4009;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4014, %r4011, %r4010;
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4019, %r3949, %r4017;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4022, %r4019, %r4018;
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4027, %r3952, %r4025;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4030, %r4027, %r4026;
	// end inline asm
	// begin inline asm
	mov.b32 %r4033, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4035, %r3955, %r4033;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4038, %r4035, %r4034;
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4043, %r3958, %r4041;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4046, %r4043, %r4042;
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4051, %r3961, %r4049;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4054, %r4051, %r4050;
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4059, %r3964, %r4057;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4062, %r4059, %r4058;
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4067, %r3967, %r4065;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4070, %r4067, %r4066;
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4074, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4075, %r3970, %r4073;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4078, %r4075, %r4074;
	// end inline asm
	// begin inline asm
	mov.b32 %r4081, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4083, %r3973, %r4081;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4086, %r4083, %r4082;
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4091, %r3976, %r4089;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4094, %r4091, %r4090;
	// end inline asm
	// begin inline asm
	mov.b32 %r4097, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4099, %r3979, %r4097;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4102, %r4099, %r4098;
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4107, %r3982, %r4105;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4110, %r4107, %r4106;
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4114, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4115, %r4116, %r4114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4118, %r3990, %r4115;
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4122, %r4116, %r4121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4125, %r3998, %r4122;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4129, %r4116, %r4128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4132, %r4006, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4136, %r4116, %r4135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4139, %r4014, %r4136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4142, %r4118, %r4132, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4146, %r4125, %r4139, %r2349;
	// end inline asm
	shl.b32 	%r4153, %r4146, 4;
	// begin inline asm
	lop3.b32 %r4150, %r2355, %r4142, %r4153, 202;
	// end inline asm
	xor.b32  	%r7877, %r4150, -2004318072;
	// begin inline asm
	mov.b32 %r4157, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4156, %r4157, %r4155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4159, %r4022, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4163, %r4157, %r4162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4166, %r4030, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4170, %r4157, %r4169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4173, %r4038, %r4170;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4177, %r4157, %r4176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4180, %r4046, %r4177;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4183, %r4159, %r4173, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4187, %r4166, %r4180, %r2349;
	// end inline asm
	shl.b32 	%r4194, %r4187, 4;
	// begin inline asm
	lop3.b32 %r4191, %r2355, %r4183, %r4194, 202;
	// end inline asm
	xor.b32  	%r7878, %r4191, -2004318072;
	// begin inline asm
	mov.b32 %r4198, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4197, %r4198, %r4196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4200, %r4054, %r4197;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4204, %r4198, %r4203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4207, %r4062, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4211, %r4198, %r4210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4214, %r4070, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4218, %r4198, %r4217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4221, %r4078, %r4218;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4224, %r4200, %r4214, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4228, %r4207, %r4221, %r2349;
	// end inline asm
	shl.b32 	%r4235, %r4228, 4;
	// begin inline asm
	lop3.b32 %r4232, %r2355, %r4224, %r4235, 202;
	// end inline asm
	xor.b32  	%r7879, %r4232, -2004318072;
	// begin inline asm
	mov.b32 %r4239, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4238, %r4239, %r4237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4241, %r4086, %r4238;
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4245, %r4239, %r4244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4248, %r4094, %r4245;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4252, %r4239, %r4251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4255, %r4102, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4259, %r4239, %r4258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4262, %r4110, %r4259;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4265, %r4241, %r4255, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4269, %r4248, %r4262, %r2349;
	// end inline asm
	shl.b32 	%r4276, %r4269, 4;
	// begin inline asm
	lop3.b32 %r4273, %r2355, %r4265, %r4276, 202;
	// end inline asm
	xor.b32  	%r7880, %r4273, -2004318072;
	st.shared.u32 	[%rd121], %r7877;
	st.shared.u32 	[%rd122], %r7878;
	st.shared.u32 	[%rd123], %r7879;
	st.shared.u32 	[%rd124], %r7880;
	ld.shared.u32 	%r8030, [%rd117];
	ld.shared.u32 	%r8031, [%rd118];
	ld.shared.u32 	%r8032, [%rd119];
	ld.shared.u32 	%r8033, [%rd120];
	// begin inline asm
	mov.b32 %r4282, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4281, %r8030, -2004318072;
	// begin inline asm
	lop3.b32 %r4279, %r688, %r4281, %r4282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4284, %r4282, %r4283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4287, %r4279, %r4284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4290, %r699, %r4281, %r4293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4295, %r4293, %r4294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4298, %r4290, %r4295;
	// end inline asm
	shr.u32 	%r4303, %r4281, 8;
	// begin inline asm
	lop3.b32 %r4301, %r688, %r4303, %r4282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4306, %r4282, %r4305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4309, %r4301, %r4306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4312, %r699, %r4303, %r4293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4317, %r4293, %r4316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4320, %r4312, %r4317;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4327, %r8031, -2004318072;
	// begin inline asm
	lop3.b32 %r4325, %r688, %r4327, %r4328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4330, %r4328, %r4329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4333, %r4325, %r4330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4336, %r699, %r4327, %r4339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4341, %r4339, %r4340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4344, %r4336, %r4341;
	// end inline asm
	shr.u32 	%r4349, %r4327, 8;
	// begin inline asm
	lop3.b32 %r4347, %r688, %r4349, %r4328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4352, %r4328, %r4351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4355, %r4347, %r4352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4358, %r699, %r4349, %r4339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4362, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4363, %r4339, %r4362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4366, %r4358, %r4363;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4385, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4373, %r8032, -2004318072;
	// begin inline asm
	lop3.b32 %r4371, %r688, %r4373, %r4374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4376, %r4374, %r4375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4379, %r4371, %r4376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4382, %r699, %r4373, %r4385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4386, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4385, %r4386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4390, %r4382, %r4387;
	// end inline asm
	shr.u32 	%r4395, %r4373, 8;
	// begin inline asm
	lop3.b32 %r4393, %r688, %r4395, %r4374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4397, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4374, %r4397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4401, %r4393, %r4398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4404, %r699, %r4395, %r4385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4385, %r4408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4412, %r4404, %r4409;
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4431, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4419, %r8033, -2004318072;
	// begin inline asm
	lop3.b32 %r4417, %r688, %r4419, %r4420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4420, %r4421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4425, %r4417, %r4422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4428, %r699, %r4419, %r4431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4431, %r4432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4436, %r4428, %r4433;
	// end inline asm
	shr.u32 	%r4441, %r4419, 8;
	// begin inline asm
	lop3.b32 %r4439, %r688, %r4441, %r4420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4420, %r4443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4447, %r4439, %r4444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4450, %r699, %r4441, %r4431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4431, %r4454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4458, %r4450, %r4455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4461, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4463, %r4461, %r4287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4466, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4468, %r4466, %r4298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4471, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4473, %r4471, %r4309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4476, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4478, %r4476, %r4320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4481, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4483, %r4481, %r4333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4486, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4488, %r4486, %r4344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4491, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4493, %r4491, %r4355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4496, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4498, %r4496, %r4366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4501, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4503, %r4501, %r4379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4506, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4508, %r4506, %r4390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4511, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4513, %r4511, %r4401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4516, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4518, %r4516, %r4412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4521, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4523, %r4521, %r4425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4526, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4528, %r4526, %r4436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4531, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4533, %r4531, %r4447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4536, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4538, %r4536, %r4458;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4543, %r688, %r1481, %r4546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4546, %r4547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4551, %r4543, %r4548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4554, %r699, %r1481, %r4557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4557, %r4558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4562, %r4554, %r4559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4565, %r688, %r1503, %r4546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4546, %r4569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4573, %r4565, %r4570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4576, %r699, %r1503, %r4557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4557, %r4580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4584, %r4576, %r4581;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4603, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4589, %r688, %r1527, %r4592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4593, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4592, %r4593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4597, %r4589, %r4594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4600, %r699, %r1527, %r4603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4605, %r4603, %r4604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4608, %r4600, %r4605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4611, %r688, %r1549, %r4592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4616, %r4592, %r4615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4619, %r4611, %r4616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4622, %r699, %r1549, %r4603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4626, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4627, %r4603, %r4626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4630, %r4622, %r4627;
	// end inline asm
	// begin inline asm
	mov.b32 %r4638, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4649, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4635, %r688, %r1573, %r4638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4638, %r4639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4643, %r4635, %r4640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4646, %r699, %r1573, %r4649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4649, %r4650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4654, %r4646, %r4651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4657, %r688, %r1595, %r4638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4661, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4638, %r4661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4665, %r4657, %r4662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4668, %r699, %r1595, %r4649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4649, %r4672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4676, %r4668, %r4673;
	// end inline asm
	// begin inline asm
	mov.b32 %r4684, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4681, %r688, %r1619, %r4684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4684, %r4685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4689, %r4681, %r4686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4692, %r699, %r1619, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4695, %r4696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4700, %r4692, %r4697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4703, %r688, %r1641, %r4684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4708, %r4684, %r4707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4711, %r4703, %r4708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4714, %r699, %r1641, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4695, %r4718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4722, %r4714, %r4719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4725, %r221, %r4551, %r4463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4729, %r221, %r4562, %r4468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4733, %r221, %r4573, %r4473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4737, %r221, %r4584, %r4478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4741, %r221, %r4597, %r4483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4745, %r221, %r4608, %r4488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4749, %r221, %r4619, %r4493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4753, %r221, %r4630, %r4498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4757, %r221, %r4643, %r4503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4761, %r221, %r4654, %r4508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4765, %r221, %r4665, %r4513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4769, %r221, %r4676, %r4518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4773, %r221, %r4689, %r4523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4777, %r221, %r4700, %r4528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4781, %r221, %r4711, %r4533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4785, %r221, %r4722, %r4538;
	// end inline asm
	// begin inline asm
	mov.b32 %r4794, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4791, %r688, %r689, %r4794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4796, %r4794, %r4795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4799, %r4791, %r4796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4802, %r699, %r689, %r4805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4807, %r4805, %r4806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4810, %r4802, %r4807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4813, %r688, %r711, %r4794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4817, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4818, %r4794, %r4817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4821, %r4813, %r4818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4824, %r699, %r711, %r4805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4828, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4829, %r4805, %r4828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4832, %r4824, %r4829;
	// end inline asm
	// begin inline asm
	mov.b32 %r4840, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4851, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4837, %r688, %r735, %r4840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4842, %r4840, %r4841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4845, %r4837, %r4842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4848, %r699, %r735, %r4851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4852, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4853, %r4851, %r4852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4856, %r4848, %r4853;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4859, %r688, %r757, %r4840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4863, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4864, %r4840, %r4863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4867, %r4859, %r4864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4870, %r699, %r757, %r4851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4874, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4875, %r4851, %r4874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4878, %r4870, %r4875;
	// end inline asm
	// begin inline asm
	mov.b32 %r4886, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4897, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4883, %r688, %r781, %r4886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4888, %r4886, %r4887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4891, %r4883, %r4888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4894, %r699, %r781, %r4897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4898, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4899, %r4897, %r4898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4902, %r4894, %r4899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4905, %r688, %r803, %r4886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4909, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4910, %r4886, %r4909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4913, %r4905, %r4910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4916, %r699, %r803, %r4897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4920, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4921, %r4897, %r4920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4924, %r4916, %r4921;
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4929, %r688, %r827, %r4932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4934, %r4932, %r4933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4937, %r4929, %r4934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4940, %r699, %r827, %r4943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4944, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4945, %r4943, %r4944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4948, %r4940, %r4945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4951, %r688, %r849, %r4932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4956, %r4932, %r4955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4959, %r4951, %r4956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4962, %r699, %r849, %r4943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4967, %r4943, %r4966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4970, %r4962, %r4967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4973, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4975, %r4973, %r4799, %r4725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4979, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4981, %r4979, %r4810, %r4729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4985, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4987, %r4985, %r4821, %r4733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4991, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4993, %r4991, %r4832, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4997, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4999, %r4997, %r4845, %r4741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5003, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5005, %r5003, %r4856, %r4745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5009, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5011, %r5009, %r4867, %r4749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5015, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5017, %r5015, %r4878, %r4753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5021, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5023, %r5021, %r4891, %r4757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5027, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5029, %r5027, %r4902, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5033, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5035, %r5033, %r4913, %r4765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5039, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5041, %r5039, %r4924, %r4769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5045, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5047, %r5045, %r4937, %r4773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5051, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5053, %r5051, %r4948, %r4777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5057, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5059, %r5057, %r4959, %r4781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5065, %r5063, %r4970, %r4785;
	// end inline asm
	// begin inline asm
	mov.b32 %r5074, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5085, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5071, %r688, %r2485, %r5074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5076, %r5074, %r5075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5079, %r5071, %r5076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5082, %r699, %r2485, %r5085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5087, %r5085, %r5086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5090, %r5082, %r5087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5093, %r688, %r2507, %r5074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5097, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5098, %r5074, %r5097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5101, %r5093, %r5098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5104, %r699, %r2507, %r5085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5108, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5109, %r5085, %r5108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5112, %r5104, %r5109;
	// end inline asm
	// begin inline asm
	mov.b32 %r5120, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5131, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5117, %r688, %r2531, %r5120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5121, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5122, %r5120, %r5121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5125, %r5117, %r5122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5128, %r699, %r2531, %r5131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5133, %r5131, %r5132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5136, %r5128, %r5133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5139, %r688, %r2553, %r5120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5143, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5144, %r5120, %r5143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5147, %r5139, %r5144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5150, %r699, %r2553, %r5131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5154, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5155, %r5131, %r5154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5158, %r5150, %r5155;
	// end inline asm
	// begin inline asm
	mov.b32 %r5166, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5177, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5163, %r688, %r2577, %r5166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5167, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5168, %r5166, %r5167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5171, %r5163, %r5168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5174, %r699, %r2577, %r5177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5179, %r5177, %r5178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5182, %r5174, %r5179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5185, %r688, %r2599, %r5166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5190, %r5166, %r5189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5193, %r5185, %r5190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5196, %r699, %r2599, %r5177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5201, %r5177, %r5200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5204, %r5196, %r5201;
	// end inline asm
	// begin inline asm
	mov.b32 %r5212, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5223, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5209, %r688, %r2623, %r5212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5214, %r5212, %r5213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5217, %r5209, %r5214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5220, %r699, %r2623, %r5223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5225, %r5223, %r5224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5228, %r5220, %r5225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5231, %r688, %r2645, %r5212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5236, %r5212, %r5235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5239, %r5231, %r5236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5242, %r699, %r2645, %r5223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5247, %r5223, %r5246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5250, %r5242, %r5247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5324, %r257, %r5079, %r4975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5321, %r257, %r5090, %r4981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5333, %r257, %r5101, %r4987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5330, %r257, %r5112, %r4993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5342, %r257, %r5125, %r4999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5339, %r257, %r5136, %r5005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5351, %r257, %r5147, %r5011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5348, %r257, %r5158, %r5017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5360, %r257, %r5171, %r5023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5357, %r257, %r5182, %r5029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5369, %r257, %r5193, %r5035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5366, %r257, %r5204, %r5041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5378, %r257, %r5217, %r5047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5375, %r257, %r5228, %r5053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5387, %r257, %r5239, %r5059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5384, %r257, %r5250, %r5065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5317, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5319, %r5317, %r5321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5322, %r303, %r5324, %r5319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5326, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5328, %r5326, %r5330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5331, %r303, %r5333, %r5328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5335, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5337, %r5335, %r5339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5340, %r303, %r5342, %r5337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5344, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5346, %r5344, %r5348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5349, %r303, %r5351, %r5346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5353, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5355, %r5353, %r5357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5358, %r303, %r5360, %r5355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5362, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5364, %r5362, %r5366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5367, %r303, %r5369, %r5364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5371, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5373, %r5371, %r5375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5376, %r303, %r5378, %r5373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5380, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5382, %r5380, %r5384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5385, %r303, %r5387, %r5382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5389, %r306, %r5324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5392, %r303, %r5321, %r5389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5396, %r306, %r5333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5399, %r303, %r5330, %r5396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5403, %r306, %r5342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5406, %r303, %r5339, %r5403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5410, %r306, %r5351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5413, %r303, %r5348, %r5410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5417, %r306, %r5360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5420, %r303, %r5357, %r5417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5424, %r306, %r5369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5427, %r303, %r5366, %r5424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5431, %r306, %r5378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5434, %r303, %r5375, %r5431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5438, %r306, %r5387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5441, %r303, %r5384, %r5438;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5532, %r5529}, {%r350, %r356, %r353, %r359}, {%r5322, %r5392}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5541, %r5538}, {%r350, %r356, %r353, %r359}, {%r5331, %r5399}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5550, %r5547}, {%r350, %r356, %r353, %r359}, {%r5340, %r5406}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5559, %r5556}, {%r350, %r356, %r353, %r359}, {%r5349, %r5413}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5568, %r5565}, {%r350, %r356, %r353, %r359}, {%r5358, %r5420}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5577, %r5574}, {%r350, %r356, %r353, %r359}, {%r5367, %r5427}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5586, %r5583}, {%r350, %r356, %r353, %r359}, {%r5376, %r5434}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5595, %r5592}, {%r350, %r356, %r353, %r359}, {%r5385, %r5441}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5525, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5527, %r5525, %r5529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5530, %r394, %r5532, %r5527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5534, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5536, %r5534, %r5538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5539, %r394, %r5541, %r5536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5543, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5545, %r5543, %r5547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r394, %r5550, %r5545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5552, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5554, %r5552, %r5556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5557, %r394, %r5559, %r5554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5561, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5563, %r5561, %r5565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r394, %r5568, %r5563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5570, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5572, %r5570, %r5574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r394, %r5577, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5579, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5581, %r5579, %r5583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r394, %r5586, %r5581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5588, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5590, %r5588, %r5592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5593, %r394, %r5595, %r5590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5597, %r397, %r5532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r394, %r5529, %r5597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5604, %r397, %r5541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r394, %r5538, %r5604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5611, %r397, %r5550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r394, %r5547, %r5611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5618, %r397, %r5559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5621, %r394, %r5556, %r5618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5625, %r397, %r5568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r394, %r5565, %r5625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5632, %r397, %r5577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r394, %r5574, %r5632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5639, %r397, %r5586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r394, %r5583, %r5639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5646, %r397, %r5595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5649, %r394, %r5592, %r5646;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5653, %r5654}, {%r428, %r434, %r431, %r437}, {%r5530, %r5600}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5663, %r5664}, {%r428, %r434, %r431, %r437}, {%r5539, %r5607}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5673, %r5674}, {%r428, %r434, %r431, %r437}, {%r5548, %r5614}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5683, %r5684}, {%r428, %r434, %r431, %r437}, {%r5557, %r5621}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5693, %r5694}, {%r428, %r434, %r431, %r437}, {%r5566, %r5628}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5703, %r5704}, {%r428, %r434, %r431, %r437}, {%r5575, %r5635}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5713, %r5714}, {%r428, %r434, %r431, %r437}, {%r5584, %r5642}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5723, %r5724}, {%r428, %r434, %r431, %r437}, {%r5593, %r5649}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5733, %r17, %r5653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5736, %r17, %r5654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5739, %r17, %r5663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5742, %r17, %r5664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5745, %r17, %r5673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5748, %r17, %r5674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5751, %r17, %r5683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5754, %r17, %r5684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5757, %r17, %r5693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5760, %r17, %r5694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5763, %r17, %r5703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5766, %r17, %r5704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5769, %r17, %r5713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5772, %r17, %r5714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5775, %r17, %r5723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5778, %r17, %r5724;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5783, %r5733, %r5781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5786, %r5783, %r5782;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5791, %r5736, %r5789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5794, %r5791, %r5790;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5799, %r5739, %r5797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5802, %r5799, %r5798;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5807, %r5742, %r5805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5810, %r5807, %r5806;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5815, %r5745, %r5813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5818, %r5815, %r5814;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5823, %r5748, %r5821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5826, %r5823, %r5822;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5831, %r5751, %r5829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5834, %r5831, %r5830;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5839, %r5754, %r5837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5842, %r5839, %r5838;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5847, %r5757, %r5845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5850, %r5847, %r5846;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5855, %r5760, %r5853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5858, %r5855, %r5854;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5863, %r5763, %r5861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5866, %r5863, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5871, %r5766, %r5869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5874, %r5871, %r5870;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5879, %r5769, %r5877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5882, %r5879, %r5878;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5887, %r5772, %r5885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5890, %r5887, %r5886;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5895, %r5775, %r5893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5898, %r5895, %r5894;
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5903, %r5778, %r5901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5906, %r5903, %r5902;
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5910, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5912, %r5910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5786, %r5911;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5912, %r5917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5794, %r5918;
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5912, %r5924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5802, %r5925;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5912, %r5931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5810, %r5932;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5938, %r5914, %r5928, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5942, %r5921, %r5935, %r2349;
	// end inline asm
	shl.b32 	%r5949, %r5942, 4;
	// begin inline asm
	lop3.b32 %r5946, %r2355, %r5938, %r5949, 202;
	// end inline asm
	xor.b32  	%r7881, %r5946, -2004318072;
	// begin inline asm
	mov.b32 %r5953, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5953, %r5951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5818, %r5952;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5953, %r5958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5962, %r5826, %r5959;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5953, %r5965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5969, %r5834, %r5966;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5953, %r5972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5976, %r5842, %r5973;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5979, %r5955, %r5969, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5983, %r5962, %r5976, %r2349;
	// end inline asm
	shl.b32 	%r5990, %r5983, 4;
	// begin inline asm
	lop3.b32 %r5987, %r2355, %r5979, %r5990, 202;
	// end inline asm
	xor.b32  	%r7882, %r5987, -2004318072;
	// begin inline asm
	mov.b32 %r5994, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5994, %r5992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5996, %r5850, %r5993;
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5994, %r5999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6003, %r5858, %r6000;
	// end inline asm
	// begin inline asm
	mov.b32 %r6006, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6007, %r5994, %r6006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6010, %r5866, %r6007;
	// end inline asm
	// begin inline asm
	mov.b32 %r6013, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r5994, %r6013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6017, %r5874, %r6014;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6020, %r5996, %r6010, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6024, %r6003, %r6017, %r2349;
	// end inline asm
	shl.b32 	%r6031, %r6024, 4;
	// begin inline asm
	lop3.b32 %r6028, %r2355, %r6020, %r6031, 202;
	// end inline asm
	xor.b32  	%r7883, %r6028, -2004318072;
	// begin inline asm
	mov.b32 %r6035, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6034, %r6035, %r6033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6037, %r5882, %r6034;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6035, %r6040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6044, %r5890, %r6041;
	// end inline asm
	// begin inline asm
	mov.b32 %r6047, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6048, %r6035, %r6047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6051, %r5898, %r6048;
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6055, %r6035, %r6054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6058, %r5906, %r6055;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6061, %r6037, %r6051, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6065, %r6044, %r6058, %r2349;
	// end inline asm
	shl.b32 	%r6072, %r6065, 4;
	// begin inline asm
	lop3.b32 %r6069, %r2355, %r6061, %r6072, 202;
	// end inline asm
	xor.b32  	%r7884, %r6069, -2004318072;
	st.shared.u32 	[%rd121], %r7881;
	st.shared.u32 	[%rd122], %r7882;
	st.shared.u32 	[%rd123], %r7883;
	st.shared.u32 	[%rd124], %r7884;
	ld.shared.u32 	%r8034, [%rd117];
	ld.shared.u32 	%r8035, [%rd118];
	ld.shared.u32 	%r8036, [%rd119];
	ld.shared.u32 	%r8037, [%rd120];
	// begin inline asm
	mov.b32 %r6078, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6089, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6077, %r8034, -2004318072;
	// begin inline asm
	lop3.b32 %r6075, %r688, %r6077, %r6078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6079, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6080, %r6078, %r6079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6083, %r6075, %r6080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6086, %r699, %r6077, %r6089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6091, %r6089, %r6090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6094, %r6086, %r6091;
	// end inline asm
	shr.u32 	%r6099, %r6077, 8;
	// begin inline asm
	lop3.b32 %r6097, %r688, %r6099, %r6078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6101, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6102, %r6078, %r6101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6105, %r6097, %r6102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6108, %r699, %r6099, %r6089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6112, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6113, %r6089, %r6112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6116, %r6108, %r6113;
	// end inline asm
	// begin inline asm
	mov.b32 %r6124, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6135, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6123, %r8035, -2004318072;
	// begin inline asm
	lop3.b32 %r6121, %r688, %r6123, %r6124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6125, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6126, %r6124, %r6125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6129, %r6121, %r6126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6132, %r699, %r6123, %r6135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6136, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6137, %r6135, %r6136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6140, %r6132, %r6137;
	// end inline asm
	shr.u32 	%r6145, %r6123, 8;
	// begin inline asm
	lop3.b32 %r6143, %r688, %r6145, %r6124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6147, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6148, %r6124, %r6147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6151, %r6143, %r6148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6154, %r699, %r6145, %r6135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6158, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6159, %r6135, %r6158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6162, %r6154, %r6159;
	// end inline asm
	// begin inline asm
	mov.b32 %r6170, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6181, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6169, %r8036, -2004318072;
	// begin inline asm
	lop3.b32 %r6167, %r688, %r6169, %r6170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6171, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6172, %r6170, %r6171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6175, %r6167, %r6172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6178, %r699, %r6169, %r6181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6182, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6183, %r6181, %r6182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6186, %r6178, %r6183;
	// end inline asm
	shr.u32 	%r6191, %r6169, 8;
	// begin inline asm
	lop3.b32 %r6189, %r688, %r6191, %r6170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6194, %r6170, %r6193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6197, %r6189, %r6194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6200, %r699, %r6191, %r6181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6205, %r6181, %r6204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6208, %r6200, %r6205;
	// end inline asm
	// begin inline asm
	mov.b32 %r6216, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6227, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6215, %r8037, -2004318072;
	// begin inline asm
	lop3.b32 %r6213, %r688, %r6215, %r6216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6217, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6218, %r6216, %r6217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6221, %r6213, %r6218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6224, %r699, %r6215, %r6227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6229, %r6227, %r6228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6232, %r6224, %r6229;
	// end inline asm
	shr.u32 	%r6237, %r6215, 8;
	// begin inline asm
	lop3.b32 %r6235, %r688, %r6237, %r6216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6240, %r6216, %r6239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6243, %r6235, %r6240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6246, %r699, %r6237, %r6227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6251, %r6227, %r6250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6254, %r6246, %r6251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6257, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6259, %r6257, %r6083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6262, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6264, %r6262, %r6094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6267, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6269, %r6267, %r6105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6272, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6274, %r6272, %r6116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6277, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6279, %r6277, %r6129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6282, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6284, %r6282, %r6140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6287, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6289, %r6287, %r6151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6292, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6294, %r6292, %r6162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6297, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6299, %r6297, %r6175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6302, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6304, %r6302, %r6186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6307, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6309, %r6307, %r6197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6312, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6314, %r6312, %r6208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6317, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6319, %r6317, %r6221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6322, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6324, %r6322, %r6232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6327, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6329, %r6327, %r6243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6332, %r275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6334, %r6332, %r6254;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6339, %r688, %r689, %r6342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6344, %r6342, %r6343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6347, %r6339, %r6344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6350, %r699, %r689, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6355, %r6353, %r6354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6358, %r6350, %r6355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6361, %r688, %r711, %r6342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6365, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6366, %r6342, %r6365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6369, %r6361, %r6366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r699, %r711, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6353, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6385, %r688, %r735, %r6388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6390, %r6388, %r6389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6393, %r6385, %r6390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6396, %r699, %r735, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6400, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6401, %r6399, %r6400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6404, %r6396, %r6401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6407, %r688, %r757, %r6388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6411, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6412, %r6388, %r6411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6415, %r6407, %r6412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6418, %r699, %r757, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6423, %r6399, %r6422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6426, %r6418, %r6423;
	// end inline asm
	// begin inline asm
	mov.b32 %r6434, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6431, %r688, %r781, %r6434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6436, %r6434, %r6435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6439, %r6431, %r6436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6442, %r699, %r781, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6446, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6447, %r6445, %r6446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6450, %r6442, %r6447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6453, %r688, %r803, %r6434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6458, %r6434, %r6457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6461, %r6453, %r6458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r699, %r803, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6445, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r688, %r827, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6480, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6488, %r699, %r827, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6493, %r6491, %r6492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6496, %r6488, %r6493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6499, %r688, %r849, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6504, %r6480, %r6503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6507, %r6499, %r6504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r699, %r849, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6491, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6521, %r221, %r6347, %r6259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6525, %r221, %r6358, %r6264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6529, %r221, %r6369, %r6269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6533, %r221, %r6380, %r6274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6537, %r221, %r6393, %r6279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6541, %r221, %r6404, %r6284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6545, %r221, %r6415, %r6289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6549, %r221, %r6426, %r6294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6553, %r221, %r6439, %r6299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6557, %r221, %r6450, %r6304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6561, %r221, %r6461, %r6309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6565, %r221, %r6472, %r6314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6569, %r221, %r6485, %r6319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6573, %r221, %r6496, %r6324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6577, %r221, %r6507, %r6329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6581, %r221, %r6518, %r6334;
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6601, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6587, %r688, %r2485, %r6590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6592, %r6590, %r6591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6595, %r6587, %r6592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6598, %r699, %r2485, %r6601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6603, %r6601, %r6602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6606, %r6598, %r6603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6609, %r688, %r2507, %r6590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6613, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6614, %r6590, %r6613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6617, %r6609, %r6614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6620, %r699, %r2507, %r6601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6624, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6625, %r6601, %r6624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6628, %r6620, %r6625;
	// end inline asm
	// begin inline asm
	mov.b32 %r6636, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6647, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6633, %r688, %r2531, %r6636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6637, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6638, %r6636, %r6637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6641, %r6633, %r6638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6644, %r699, %r2531, %r6647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6648, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6649, %r6647, %r6648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6652, %r6644, %r6649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6655, %r688, %r2553, %r6636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6659, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6660, %r6636, %r6659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6663, %r6655, %r6660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6666, %r699, %r2553, %r6647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6670, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6671, %r6647, %r6670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6674, %r6666, %r6671;
	// end inline asm
	// begin inline asm
	mov.b32 %r6682, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6693, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6679, %r688, %r2577, %r6682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6684, %r6682, %r6683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6687, %r6679, %r6684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6690, %r699, %r2577, %r6693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6694, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6695, %r6693, %r6694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6698, %r6690, %r6695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6701, %r688, %r2599, %r6682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6705, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6706, %r6682, %r6705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6709, %r6701, %r6706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6712, %r699, %r2599, %r6693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6716, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6717, %r6693, %r6716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6720, %r6712, %r6717;
	// end inline asm
	// begin inline asm
	mov.b32 %r6728, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6739, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6725, %r688, %r2623, %r6728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6730, %r6728, %r6729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6733, %r6725, %r6730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6736, %r699, %r2623, %r6739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6740, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6741, %r6739, %r6740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6744, %r6736, %r6741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6747, %r688, %r2645, %r6728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6751, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6752, %r6728, %r6751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6755, %r6747, %r6752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6758, %r699, %r2645, %r6739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6762, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6763, %r6739, %r6762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6766, %r6758, %r6763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6769, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r6769, %r6595, %r6521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6775, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r6775, %r6606, %r6525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6781, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r6781, %r6617, %r6529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6787, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r6787, %r6628, %r6533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6793, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r6793, %r6641, %r6537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6799, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r6799, %r6652, %r6541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6805, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r6805, %r6663, %r6545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6811, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r6811, %r6674, %r6549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6817, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r6817, %r6687, %r6553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6823, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r6823, %r6698, %r6557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6829, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r6829, %r6709, %r6561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6835, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r6835, %r6720, %r6565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6841, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r6841, %r6733, %r6569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6847, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r6847, %r6744, %r6573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6853, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r6853, %r6755, %r6577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6859, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r6859, %r6766, %r6581;
	// end inline asm
	// begin inline asm
	mov.b32 %r6870, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6881, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6867, %r688, %r4281, %r6870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6871, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6872, %r6870, %r6871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6875, %r6867, %r6872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6878, %r699, %r4281, %r6881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6883, %r6881, %r6882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6886, %r6878, %r6883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6889, %r688, %r4303, %r6870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6893, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6894, %r6870, %r6893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6897, %r6889, %r6894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6900, %r699, %r4303, %r6881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6905, %r6881, %r6904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6908, %r6900, %r6905;
	// end inline asm
	// begin inline asm
	mov.b32 %r6916, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6927, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6913, %r688, %r4327, %r6916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6918, %r6916, %r6917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6921, %r6913, %r6918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6924, %r699, %r4327, %r6927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6929, %r6927, %r6928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6932, %r6924, %r6929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6935, %r688, %r4349, %r6916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6939, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6940, %r6916, %r6939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6943, %r6935, %r6940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6946, %r699, %r4349, %r6927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6951, %r6927, %r6950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6954, %r6946, %r6951;
	// end inline asm
	// begin inline asm
	mov.b32 %r6962, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6973, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6959, %r688, %r4373, %r6962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6963, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6964, %r6962, %r6963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6967, %r6959, %r6964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6970, %r699, %r4373, %r6973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6975, %r6973, %r6974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6978, %r6970, %r6975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6981, %r688, %r4395, %r6962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6986, %r6962, %r6985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6989, %r6981, %r6986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6992, %r699, %r4395, %r6973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6996, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6997, %r6973, %r6996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7000, %r6992, %r6997;
	// end inline asm
	// begin inline asm
	mov.b32 %r7008, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7019, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r7005, %r688, %r4419, %r7008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7009, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7010, %r7008, %r7009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7013, %r7005, %r7010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7016, %r699, %r4419, %r7019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7021, %r7019, %r7020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7024, %r7016, %r7021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7027, %r688, %r4441, %r7008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7032, %r7008, %r7031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7035, %r7027, %r7032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7038, %r699, %r4441, %r7019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7043, %r7019, %r7042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7046, %r7038, %r7043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7120, %r257, %r6875, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7117, %r257, %r6886, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7129, %r257, %r6897, %r6783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7126, %r257, %r6908, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7138, %r257, %r6921, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7135, %r257, %r6932, %r6801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r257, %r6943, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7144, %r257, %r6954, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7156, %r257, %r6967, %r6819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7153, %r257, %r6978, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r257, %r6989, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7162, %r257, %r7000, %r6837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7174, %r257, %r7013, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7171, %r257, %r7024, %r6849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7183, %r257, %r7035, %r6855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7180, %r257, %r7046, %r6861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7113, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7115, %r7113, %r7117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7118, %r303, %r7120, %r7115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7122, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7124, %r7122, %r7126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7127, %r303, %r7129, %r7124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7131, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7133, %r7131, %r7135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7136, %r303, %r7138, %r7133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7140, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7142, %r7140, %r7144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7145, %r303, %r7147, %r7142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7149, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7151, %r7149, %r7153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7154, %r303, %r7156, %r7151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7158, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7160, %r7158, %r7162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7163, %r303, %r7165, %r7160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7167, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7169, %r7167, %r7171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7172, %r303, %r7174, %r7169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7176, %r306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7178, %r7176, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7181, %r303, %r7183, %r7178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7185, %r306, %r7120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7188, %r303, %r7117, %r7185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7192, %r306, %r7129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7195, %r303, %r7126, %r7192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7199, %r306, %r7138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7202, %r303, %r7135, %r7199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7206, %r306, %r7147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7209, %r303, %r7144, %r7206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r306, %r7156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r303, %r7153, %r7213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7220, %r306, %r7165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7223, %r303, %r7162, %r7220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r306, %r7174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r303, %r7171, %r7227;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r306, %r7183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r303, %r7180, %r7234;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7328, %r7325}, {%r350, %r356, %r353, %r359}, {%r7118, %r7188}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7337, %r7334}, {%r350, %r356, %r353, %r359}, {%r7127, %r7195}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7346, %r7343}, {%r350, %r356, %r353, %r359}, {%r7136, %r7202}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7355, %r7352}, {%r350, %r356, %r353, %r359}, {%r7145, %r7209}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7364, %r7361}, {%r350, %r356, %r353, %r359}, {%r7154, %r7216}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7373, %r7370}, {%r350, %r356, %r353, %r359}, {%r7163, %r7223}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7382, %r7379}, {%r350, %r356, %r353, %r359}, {%r7172, %r7230}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7391, %r7388}, {%r350, %r356, %r353, %r359}, {%r7181, %r7237}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7321, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7323, %r7321, %r7325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7326, %r394, %r7328, %r7323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7330, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7332, %r7330, %r7334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7335, %r394, %r7337, %r7332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7339, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7341, %r7339, %r7343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7344, %r394, %r7346, %r7341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7348, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7350, %r7348, %r7352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7353, %r394, %r7355, %r7350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7357, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r7357, %r7361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r394, %r7364, %r7359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7366, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7368, %r7366, %r7370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7371, %r394, %r7373, %r7368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7375, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r7375, %r7379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r394, %r7382, %r7377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7384, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r7384, %r7388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7389, %r394, %r7391, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r397, %r7328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7396, %r394, %r7325, %r7393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7400, %r397, %r7337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7403, %r394, %r7334, %r7400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7407, %r397, %r7346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7410, %r394, %r7343, %r7407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r397, %r7355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7417, %r394, %r7352, %r7414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7421, %r397, %r7364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7424, %r394, %r7361, %r7421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7428, %r397, %r7373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7431, %r394, %r7370, %r7428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7435, %r397, %r7382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7438, %r394, %r7379, %r7435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7442, %r397, %r7391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7445, %r394, %r7388, %r7442;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7449, %r7450}, {%r428, %r434, %r431, %r437}, {%r7326, %r7396}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7459, %r7460}, {%r428, %r434, %r431, %r437}, {%r7335, %r7403}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7469, %r7470}, {%r428, %r434, %r431, %r437}, {%r7344, %r7410}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7479, %r7480}, {%r428, %r434, %r431, %r437}, {%r7353, %r7417}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7489, %r7490}, {%r428, %r434, %r431, %r437}, {%r7362, %r7424}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7499, %r7500}, {%r428, %r434, %r431, %r437}, {%r7371, %r7431}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7509, %r7510}, {%r428, %r434, %r431, %r437}, {%r7380, %r7438}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7519, %r7520}, {%r428, %r434, %r431, %r437}, {%r7389, %r7445}, {%r1861, %r1861};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7529, %r17, %r7449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7532, %r17, %r7450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7535, %r17, %r7459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7538, %r17, %r7460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7541, %r17, %r7469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7544, %r17, %r7470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7547, %r17, %r7479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7550, %r17, %r7480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7553, %r17, %r7489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7556, %r17, %r7490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7559, %r17, %r7499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7562, %r17, %r7500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7565, %r17, %r7509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7568, %r17, %r7510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7571, %r17, %r7519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7574, %r17, %r7520;
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7579, %r7529, %r7577;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7582, %r7579, %r7578;
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7587, %r7532, %r7585;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7590, %r7587, %r7586;
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7595, %r7535, %r7593;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7598, %r7595, %r7594;
	// end inline asm
	// begin inline asm
	mov.b32 %r7601, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7603, %r7538, %r7601;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7606, %r7603, %r7602;
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7611, %r7541, %r7609;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7614, %r7611, %r7610;
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7619, %r7544, %r7617;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7622, %r7619, %r7618;
	// end inline asm
	// begin inline asm
	mov.b32 %r7625, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7626, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7627, %r7547, %r7625;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7630, %r7627, %r7626;
	// end inline asm
	// begin inline asm
	mov.b32 %r7633, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7635, %r7550, %r7633;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7638, %r7635, %r7634;
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7643, %r7553, %r7641;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7646, %r7643, %r7642;
	// end inline asm
	// begin inline asm
	mov.b32 %r7649, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7651, %r7556, %r7649;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7654, %r7651, %r7650;
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7659, %r7559, %r7657;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7662, %r7659, %r7658;
	// end inline asm
	// begin inline asm
	mov.b32 %r7665, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7666, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7667, %r7562, %r7665;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7670, %r7667, %r7666;
	// end inline asm
	// begin inline asm
	mov.b32 %r7673, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7674, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7675, %r7565, %r7673;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7678, %r7675, %r7674;
	// end inline asm
	// begin inline asm
	mov.b32 %r7681, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7682, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7683, %r7568, %r7681;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7686, %r7683, %r7682;
	// end inline asm
	// begin inline asm
	mov.b32 %r7689, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7690, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7691, %r7571, %r7689;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7694, %r7691, %r7690;
	// end inline asm
	// begin inline asm
	mov.b32 %r7697, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7698, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7699, %r7574, %r7697;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7702, %r7699, %r7698;
	// end inline asm
	// begin inline asm
	mov.b32 %r7708, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7706, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7708, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7582, %r7707;
	// end inline asm
	// begin inline asm
	mov.b32 %r7713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7708, %r7713;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7590, %r7714;
	// end inline asm
	// begin inline asm
	mov.b32 %r7720, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7708, %r7720;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7598, %r7721;
	// end inline asm
	// begin inline asm
	mov.b32 %r7727, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7708, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7606, %r7728;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7734, %r7710, %r7724, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7738, %r7717, %r7731, %r2349;
	// end inline asm
	shl.b32 	%r7745, %r7738, 4;
	// begin inline asm
	lop3.b32 %r7742, %r2355, %r7734, %r7745, 202;
	// end inline asm
	xor.b32  	%r7885, %r7742, -2004318072;
	// begin inline asm
	mov.b32 %r7749, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7747, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7748, %r7749, %r7747;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7751, %r7614, %r7748;
	// end inline asm
	// begin inline asm
	mov.b32 %r7754, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7749, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7622, %r7755;
	// end inline asm
	// begin inline asm
	mov.b32 %r7761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7749, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7765, %r7630, %r7762;
	// end inline asm
	// begin inline asm
	mov.b32 %r7768, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7769, %r7749, %r7768;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7772, %r7638, %r7769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7775, %r7751, %r7765, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7779, %r7758, %r7772, %r2349;
	// end inline asm
	shl.b32 	%r7786, %r7779, 4;
	// begin inline asm
	lop3.b32 %r7783, %r2355, %r7775, %r7786, 202;
	// end inline asm
	xor.b32  	%r7886, %r7783, -2004318072;
	// begin inline asm
	mov.b32 %r7790, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7788, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7789, %r7790, %r7788;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7792, %r7646, %r7789;
	// end inline asm
	// begin inline asm
	mov.b32 %r7795, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7796, %r7790, %r7795;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7799, %r7654, %r7796;
	// end inline asm
	// begin inline asm
	mov.b32 %r7802, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7803, %r7790, %r7802;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7806, %r7662, %r7803;
	// end inline asm
	// begin inline asm
	mov.b32 %r7809, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7810, %r7790, %r7809;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7813, %r7670, %r7810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7816, %r7792, %r7806, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7820, %r7799, %r7813, %r2349;
	// end inline asm
	shl.b32 	%r7827, %r7820, 4;
	// begin inline asm
	lop3.b32 %r7824, %r2355, %r7816, %r7827, 202;
	// end inline asm
	xor.b32  	%r7887, %r7824, -2004318072;
	// begin inline asm
	mov.b32 %r7831, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7830, %r7831, %r7829;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7833, %r7678, %r7830;
	// end inline asm
	// begin inline asm
	mov.b32 %r7836, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7837, %r7831, %r7836;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7840, %r7686, %r7837;
	// end inline asm
	// begin inline asm
	mov.b32 %r7843, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7844, %r7831, %r7843;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7847, %r7694, %r7844;
	// end inline asm
	// begin inline asm
	mov.b32 %r7850, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7851, %r7831, %r7850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7854, %r7702, %r7851;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7857, %r7833, %r7847, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7861, %r7840, %r7854, %r2349;
	// end inline asm
	shl.b32 	%r7868, %r7861, 4;
	// begin inline asm
	lop3.b32 %r7865, %r2355, %r7857, %r7868, 202;
	// end inline asm
	xor.b32  	%r7888, %r7865, -2004318072;
	st.shared.u32 	[%rd121], %r7885;
	st.shared.u32 	[%rd122], %r7886;
	st.shared.u32 	[%rd123], %r7887;
	st.shared.u32 	[%rd124], %r7888;
	add.s32 	%r8025, %r8025, -64;
	add.s64 	%rd175, %rd175, 8324;
	setp.eq.s32 	%p238, %r8025, 0;
	@%p238 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass15294
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7894, [%rd21];
	ld.shared.u32 	%r7895, [%rd22+128];
	ld.shared.u32 	%r7902, [%rd22+4];
	ld.shared.u32 	%r7903, [%rd22+132];
	ld.shared.u32 	%r7910, [%rd22+8324];
	ld.shared.u32 	%r7911, [%rd22+8452];
	ld.shared.u32 	%r7918, [%rd22+8328];
	ld.shared.u32 	%r7919, [%rd22+8456];
	ld.shared.u32 	%r7926, [%rd22+16648];
	ld.shared.u32 	%r7927, [%rd22+16776];
	ld.shared.u32 	%r7934, [%rd22+16652];
	ld.shared.u32 	%r7935, [%rd22+16780];
	ld.shared.u32 	%r7942, [%rd22+24972];
	ld.shared.u32 	%r7943, [%rd22+25100];
	ld.shared.u32 	%r7950, [%rd22+24976];
	ld.shared.u32 	%r7951, [%rd22+25104];
	// begin inline asm
	prmt.b32 %r7889, %r7894, %r7895, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7893, %r7894, %r7895, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7897, %r7902, %r7903, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7901, %r7902, %r7903, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7905, %r7910, %r7911, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7909, %r7910, %r7911, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7913, %r7918, %r7919, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7917, %r7918, %r7919, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7921, %r7926, %r7927, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7925, %r7926, %r7927, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7929, %r7934, %r7935, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7937, %r7942, %r7943, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7941, %r7942, %r7943, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7945, %r7950, %r7951, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r603;
	// end inline asm
	selp.b32 	%r7953, %r7893, %r7889, %p225;
	shfl.sync.bfly.b32	%r167, %r7953, 8, 31, -1;
	selp.b32 	%r7954, %r7901, %r7897, %p225;
	shfl.sync.bfly.b32	%r168, %r7954, 8, 31, -1;
	selp.b32 	%r7955, %r7909, %r7905, %p225;
	shfl.sync.bfly.b32	%r7956, %r7955, 8, 31, -1;
	selp.b32 	%r7957, %r7917, %r7913, %p225;
	shfl.sync.bfly.b32	%r7958, %r7957, 8, 31, -1;
	selp.b32 	%r7959, %r7925, %r7921, %p225;
	shfl.sync.bfly.b32	%r7960, %r7959, 8, 31, -1;
	selp.b32 	%r7961, %r7933, %r7929, %p225;
	shfl.sync.bfly.b32	%r7962, %r7961, 8, 31, -1;
	selp.b32 	%r7963, %r7941, %r7937, %p225;
	shfl.sync.bfly.b32	%r7964, %r7963, 8, 31, -1;
	selp.b32 	%r7965, %r7949, %r7945, %p225;
	shfl.sync.bfly.b32	%r7966, %r7965, 8, 31, -1;
	and.b32  	%r181, %r104, 256;
	setp.eq.s32 	%p240, %r181, 0;
	shl.b32 	%r7998, %r104, 12;
	@%p240 bra 	LBB0_121;
// %bb.120:                             // %L45460
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7967, %r168, %r7901, %p225;
	selp.b32 	%r7968, %r7897, %r168, %p225;
	selp.b32 	%r7969, %r167, %r7893, %p225;
	selp.b32 	%r7970, %r7889, %r167, %p225;
	or.b32  	%r7972, %r98, %r7998;
	or.b32  	%r7973, %r7972, %r97;
	or.b32  	%r7974, %r7973, %r99;
	or.b32  	%r7975, %r7974, %r103;
	cvt.u64.u32 	%rd125, %r7975;
	add.s64 	%rd126, %rd125, %rd23;
	shr.u64 	%rd127, %rd126, 35;
	add.s64 	%rd128, %rd126, %rd127;
	shr.s64 	%rd129, %rd128, 29;
	and.b64  	%rd130, %rd128, -536870912;
	setp.ne.s64 	%p242, %rd130, %rd126;
	setp.lt.s64 	%p243, %rd126, 0;
	and.pred  	%p244, %p243, %p242;
	selp.u64 	%rd131, 1, 0, %p244;
	sub.s64 	%rd132, %rd131, %rd129;
	shl.b64 	%rd133, %rd132, 29;
	add.s64 	%rd134, %rd133, %rd126;
	shl.b64 	%rd135, %rd134, 2;
	add.s64 	%rd136, %rd3, %rd135;
	st.global.v4.u32 	[%rd136], {%r7970, %r7968, %r7969, %r7967};
LBB0_121:                               // %pass14801
                                        //   in Loop: Header=BB0_117 Depth=1
	or.b32  	%r7976, %r181, 64;
	setp.gt.u32 	%p245, %r7976, 191;
	@%p245 bra 	LBB0_122;
	bra.uni 	LBB0_123;
LBB0_122:                               // %L45682
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r169, %r7905, %r7956, %p225;
	selp.b32 	%r170, %r7956, %r7909, %p225;
	selp.b32 	%r171, %r7913, %r7958, %p225;
	selp.b32 	%r172, %r7958, %r7917, %p225;
	or.b32  	%r7978, %r7998, %r98;
	or.b32  	%r7979, %r7978, %r97;
	or.b32  	%r7980, %r7979, %r99;
	or.b32  	%r7981, %r7980, %r103;
	or.b32  	%r7982, %r7981, 262144;
	cvt.u64.u32 	%rd137, %r7982;
	add.s64 	%rd138, %rd137, %rd23;
	shr.u64 	%rd139, %rd138, 35;
	add.s64 	%rd140, %rd138, %rd139;
	shr.s64 	%rd141, %rd140, 29;
	and.b64  	%rd142, %rd140, -536870912;
	setp.ne.s64 	%p246, %rd142, %rd138;
	setp.lt.s64 	%p247, %rd138, 0;
	and.pred  	%p248, %p247, %p246;
	selp.u64 	%rd143, 1, 0, %p248;
	sub.s64 	%rd144, %rd143, %rd141;
	shl.b64 	%rd145, %rd144, 29;
	add.s64 	%rd146, %rd145, %rd138;
	shl.b64 	%rd147, %rd146, 2;
	add.s64 	%rd148, %rd3, %rd147;
	st.global.v4.u32 	[%rd148], {%r169, %r171, %r170, %r172};
LBB0_123:                               // %pass14890
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r177, %r7937, %r7964, %p225;
	selp.b32 	%r178, %r7964, %r7941, %p225;
	selp.b32 	%r179, %r7945, %r7966, %p225;
	selp.b32 	%r180, %r7966, %r7949, %p225;
	or.b32  	%r7983, %r181, 128;
	setp.gt.u32 	%p249, %r7983, 191;
	or.b32  	%r7999, %r7998, %r98;
	@%p249 bra 	LBB0_124;
	bra.uni 	LBB0_125;
LBB0_124:                               // %L45905
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r173, %r7921, %r7960, %p225;
	selp.b32 	%r174, %r7960, %r7925, %p225;
	selp.b32 	%r175, %r7929, %r7962, %p225;
	selp.b32 	%r176, %r7962, %r7933, %p225;
	or.b32  	%r7985, %r7999, %r97;
	or.b32  	%r7986, %r7985, %r99;
	or.b32  	%r7987, %r7986, %r103;
	or.b32  	%r7988, %r7987, 524288;
	cvt.u64.u32 	%rd149, %r7988;
	add.s64 	%rd150, %rd149, %rd23;
	shr.u64 	%rd151, %rd150, 35;
	add.s64 	%rd152, %rd150, %rd151;
	shr.s64 	%rd153, %rd152, 29;
	and.b64  	%rd154, %rd152, -536870912;
	setp.ne.s64 	%p250, %rd154, %rd150;
	setp.lt.s64 	%p251, %rd150, 0;
	and.pred  	%p252, %p251, %p250;
	selp.u64 	%rd155, 1, 0, %p252;
	sub.s64 	%rd156, %rd155, %rd153;
	shl.b64 	%rd157, %rd156, 29;
	add.s64 	%rd158, %rd157, %rd150;
	shl.b64 	%rd159, %rd158, 2;
	add.s64 	%rd160, %rd3, %rd159;
	st.global.v4.u32 	[%rd160], {%r173, %r175, %r174, %r176};
	bra.uni 	LBB0_125;
LBB0_126:                               // %L46358
	st.global.u32 	[%rd4], %r7997;
	ret;
LBB0_7:                                 // %L273
	mov.u32 	%r7996, 2;
	st.global.u32 	[%rd4], %r7996;
	mov.u64 	%rd173, exception3390;
	cvta.global.u64 	%rd174, %rd173;
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd174;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 13
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 14
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd55, exception1;
	cvta.global.u64 	%rd56, %rd55;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd56;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_128:                               // %L46469
	mov.u64 	%rd64, exception1;
	cvta.global.u64 	%rd65, %rd64;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd65;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 3
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 4
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_127:                               // %L46466
	mov.u64 	%rd70, exception1;
	cvta.global.u64 	%rd71, %rd70;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd71;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_153:                               // %L46463
	mov.u64 	%rd84, exception1;
	cvta.global.u64 	%rd85, %rd84;
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 11
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r182;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 12
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
