// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_10449
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_10460
(
	.param .align 8 .b8 julia_power_by_squaring_10460_param_0[16],
	.param .b64 julia_power_by_squaring_10460_param_1,
	.param .b64 julia_power_by_squaring_10460_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2333[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12354[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7819>;
	.reg .f32 	%f<914>;
	.reg .b64 	%rd<110>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r165, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r166, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r166, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r167, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r168, %r167, %r4;
	or.b32  	%r169, %r168, %r2;
	mul.wide.u32 	%rd45, %r169, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r170, 1;
	st.global.u32 	[%rd4], %r170;
	ld.global.u32 	%r5, [%rd23];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd27, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd27];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd31, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd31];
	sub.s32 	%r171, %r6, %r5;
	and.b32  	%r172, %r171, 255;
	setp.ne.s32 	%p6, %r172, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd35];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	not.b32 	%r173, %r7;
	add.s32 	%r174, %r173, %r8;
	and.b32  	%r175, %r174, 3;
	setp.eq.s32 	%p12, %r175, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r18, %r4, 1, 1;
	and.b32  	%r19, %r4, 1;
	bfe.u32 	%r20, %r4, 2, 1;
	shr.u32 	%r21, %r4, 4;
	shl.b32 	%r180, %r21, 1;
	shl.b32 	%r181, %r20, 2;
	shl.b32 	%r182, %r19, 3;
	shl.b32 	%r183, %r18, 4;
	or.b32  	%r184, %r182, %r183;
	or.b32  	%r185, %r181, %r184;
	or.b32  	%r186, %r180, %r185;
	bfe.u32 	%r23, %r4, 3, 1;
	or.b32  	%r24, %r23, %r186;
	or.b32  	%r25, %r24, 32;
	mov.f32 	%f181, 0f40000000;
	mov.f32 	%f182, 0f437F0000;
	div.approx.f32 	%f1, %f182, %f181;
	cvt.rn.f32.s32 	%f183, %r24;
	sub.f32 	%f184, %f183, %f1;
	mov.f32 	%f213, 0f42800000;
	div.approx.f32 	%f3, %f184, %f213;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f881, 0f3F800000;
	mov.f32 	%f874, %f881;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L552
	sin.approx.f32 	%f214, %f3;
	div.approx.f32 	%f874, %f214, %f3;
LBB0_10:                                // %L555
	cvt.rn.f32.s32 	%f217, %r25;
	sub.f32 	%f218, %f217, %f1;
	div.approx.f32 	%f8, %f218, %f213;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f875, %f881;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L572
	sin.approx.f32 	%f248, %f8;
	div.approx.f32 	%f875, %f248, %f8;
LBB0_12:                                // %L575
	or.b32  	%r204, %r24, 64;
	or.b32  	%r27, %r24, 96;
	cvt.rn.f32.s32 	%f252, %r204;
	sub.f32 	%f253, %f252, %f1;
	div.approx.f32 	%f12, %f253, %f213;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f876, %f881;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L654
	sin.approx.f32 	%f283, %f12;
	div.approx.f32 	%f876, %f283, %f12;
LBB0_14:                                // %L657
	cvt.rn.f32.s32 	%f286, %r27;
	sub.f32 	%f287, %f286, %f1;
	div.approx.f32 	%f17, %f287, %f213;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f877, %f881;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L674
	sin.approx.f32 	%f317, %f17;
	div.approx.f32 	%f877, %f317, %f17;
LBB0_16:                                // %L677
	shl.b32 	%r10, %r4, 2;
	or.b32  	%r222, %r24, 128;
	or.b32  	%r29, %r24, 160;
	cvt.rn.f32.s32 	%f321, %r222;
	sub.f32 	%f322, %f321, %f1;
	div.approx.f32 	%f21, %f322, %f213;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f878, %f881;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L756
	sin.approx.f32 	%f352, %f21;
	div.approx.f32 	%f878, %f352, %f21;
LBB0_18:                                // %L759
	and.b32  	%r11, %r10, 32;
	and.b32  	%r15, %r4, 18;
	cvt.rn.f32.s32 	%f355, %r29;
	sub.f32 	%f356, %f355, %f1;
	div.approx.f32 	%f26, %f356, %f213;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f879, %f881;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L776
	sin.approx.f32 	%f386, %f26;
	div.approx.f32 	%f879, %f386, %f26;
LBB0_20:                                // %L779
	and.b32  	%r12, %r10, 4;
	shl.b32 	%r13, %r4, 1;
	or.b32  	%r176, %r15, %r11;
	or.b32  	%r240, %r24, 192;
	or.b32  	%r31, %r24, 224;
	cvt.rn.f32.s32 	%f390, %r240;
	sub.f32 	%f391, %f390, %f1;
	div.approx.f32 	%f30, %f391, %f213;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f880, %f881;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L858
	sin.approx.f32 	%f421, %f30;
	div.approx.f32 	%f880, %f421, %f30;
LBB0_22:                                // %L861
	and.b32  	%r14, %r13, 8;
	or.b32  	%r177, %r176, %r12;
	cvt.rn.f32.s32 	%f424, %r31;
	sub.f32 	%f425, %f424, %f1;
	div.approx.f32 	%f35, %f425, %f213;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L878
	sin.approx.f32 	%f455, %f35;
	div.approx.f32 	%f881, %f455, %f35;
LBB0_24:                                // %L881
	or.b32  	%r178, %r177, %r14;
	mul.lo.s32 	%r33, %r24, 63;
	cvt.rn.f32.s32 	%f458, %r33;
	div.approx.f32 	%f38, %f458, %f213;
	abs.f32 	%f884, %f38;
	setp.lt.f32 	%p61, %f884, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f884, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r35, %f884;
	and.b32  	%r258, %r35, 8388607;
	or.b32  	%r7777, %r258, 1065353216;
	mov.b32 	%f883, %r7777;
	add.s32 	%r259, %r35, -1073741824;
	and.b32  	%r7778, %r259, -8388608;
	setp.eq.s32 	%p68, %r7778, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f469, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f468,%f469;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r260, %r7778, 192937984;
	add.s32 	%r261, %r260, %r7777;
	mov.b32 	%f470, %r261;
	mul.f32 	%f471, %f468, %f470;
	sub.f32 	%f472, %f470, %f471;
	fma.rn.f32 	%f473, %f472, %f468, %f471;
	sub.f32 	%f474, %f470, %f473;
	fma.rz.f32 	%f475, %f474, %f468, %f473;
	cvt.rzi.f32.f32 	%f476, %f475;
	sub.f32 	%f883, %f470, %f476;
	sub.s32 	%r7778, %r7778, %r260;
	mov.b32 	%r7777, %f883;
	setp.ne.s32 	%p69, %r7778, 0;
	setp.ne.s32 	%p70, %r7777, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r35, 2139095039;
	selp.f32 	%f477, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f478, %f883, 0f34000000;
	mul.f32 	%f884, %f477, %f478;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f461, %f884, %f181;
	cvt.rzi.f32.f32 	%f882, %f461;
	fma.rn.f32 	%f41, %f882, 0fC0000000, %f884;
	mov.b32 	%r34, %f41;
	setp.lt.u32 	%p63, %r34, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r34, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f466, %f882, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f467, %f466, 0fBF800000;
	selp.f32 	%f882, %f467, %f466, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f882, %f882, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f462, %f882, 0f3F800000;
	fma.rn.f32 	%f464, %f181, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f464, 0f00000000;
	add.f32 	%f465, %f462, 0f3F800000;
	selp.f32 	%f882, %f465, %f462, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f884, %f882, 0fC0000000, %f884;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r179, %r178, 1;
	abs.f32 	%f479, %f884;
	setp.gtu.f32 	%p73, %f479, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r262, %f38;
	and.b32  	%r263, %r262, -2147483648;
	mov.b32 	%r264, %f884;
	or.b32  	%r265, %r263, %r264;
	mov.b32 	%f884, %r265;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd46, %r179, 4;
	add.s32 	%r274, %r33, 2016;
	cvt.rn.f32.s32 	%f510, %r274;
	div.approx.f32 	%f57, %f510, %f213;
	abs.f32 	%f888, %f57;
	setp.lt.f32 	%p81, %f888, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f888, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r43, %f888;
	and.b32  	%r275, %r43, 8388607;
	or.b32  	%r7779, %r275, 1065353216;
	mov.b32 	%f887, %r7779;
	add.s32 	%r276, %r43, -1073741824;
	and.b32  	%r7780, %r276, -8388608;
	setp.eq.s32 	%p88, %r7780, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i1163.preheader
	mov.f32 	%f521, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f520,%f521;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i1163
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r277, %r7780, 192937984;
	add.s32 	%r278, %r277, %r7779;
	mov.b32 	%f522, %r278;
	mul.f32 	%f523, %f520, %f522;
	sub.f32 	%f524, %f522, %f523;
	fma.rn.f32 	%f525, %f524, %f520, %f523;
	sub.f32 	%f526, %f522, %f525;
	fma.rz.f32 	%f527, %f526, %f520, %f525;
	cvt.rzi.f32.f32 	%f528, %f527;
	sub.f32 	%f887, %f522, %f528;
	sub.s32 	%r7780, %r7780, %r277;
	mov.b32 	%r7779, %f887;
	setp.ne.s32 	%p89, %r7780, 0;
	setp.ne.s32 	%p90, %r7779, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1165
	setp.gt.u32 	%p92, %r43, 2139095039;
	selp.f32 	%f529, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f530, %f887, 0f34000000;
	mul.f32 	%f888, %f529, %f530;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1135
	div.approx.f32 	%f513, %f888, %f181;
	cvt.rzi.f32.f32 	%f886, %f513;
	fma.rn.f32 	%f60, %f886, 0fC0000000, %f888;
	mov.b32 	%r42, %f60;
	setp.lt.u32 	%p83, %r42, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r42, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f518, %f886, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f519, %f518, 0fBF800000;
	selp.f32 	%f886, %f519, %f518, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f886, %f886, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1140
	add.f32 	%f514, %f886, 0f3F800000;
	fma.rn.f32 	%f516, %f181, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f516, 0f00000000;
	add.f32 	%f517, %f514, 0f3F800000;
	selp.f32 	%f886, %f517, %f514, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1144
	fma.rn.f32 	%f888, %f886, 0fC0000000, %f888;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1169
	add.s64 	%rd47, %rd1, %rd46;
	abs.f32 	%f531, %f888;
	setp.gtu.f32 	%p93, %f531, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r279, %f57;
	and.b32  	%r280, %r279, -2147483648;
	mov.b32 	%r281, %f888;
	or.b32  	%r282, %r280, %r281;
	mov.b32 	%f888, %r282;
LBB0_52:                                // %__nv_fmodf.exit1170
	ld.global.u32 	%r16, [%rd47];
	mov.u64 	%rd48, 2;
	mov.u64 	%rd49, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10460, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd50, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd50, 64;
	@%p101 bra 	LBB0_124;
// %bb.53:                              // %L978
	shr.u32 	%r17, %r4, 1;
	shr.u32 	%r22, %r4, 3;
	and.b32  	%r297, %r4, 3;
	and.b32  	%r298, %r22, 2;
	or.b32  	%r299, %r20, %r298;
	and.b32  	%r300, %r17, 4;
	or.b32  	%r52, %r299, %r300;
	mul.lo.s32 	%r301, %r297, %r52;
	shl.b32 	%r302, %r301, 1;
	neg.s32 	%r303, %r302;
	cvt.rn.f32.s32 	%f74, %r303;
	mov.f32 	%f564, 0f41000000;
	div.approx.f32 	%f75, %f74, %f564;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	mov.f32 	%f892, %f900;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r54, %f900;
	and.b32  	%r304, %r54, 8388607;
	or.b32  	%r7781, %r304, 1065353216;
	mov.b32 	%f891, %r7781;
	add.s32 	%r305, %r54, -1073741824;
	and.b32  	%r7782, %r305, -8388608;
	setp.eq.s32 	%p109, %r7782, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %__nv_fmaf_rn.exit4.i.i.i1209.preheader
	mov.f32 	%f574, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f573,%f574;
	// end inline asm
LBB0_63:                                // %__nv_fmaf_rn.exit4.i.i.i1209
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r306, %r7782, 192937984;
	add.s32 	%r307, %r306, %r7781;
	mov.b32 	%f575, %r307;
	mul.f32 	%f576, %f573, %f575;
	sub.f32 	%f577, %f575, %f576;
	fma.rn.f32 	%f578, %f577, %f573, %f576;
	sub.f32 	%f579, %f575, %f578;
	fma.rz.f32 	%f580, %f579, %f573, %f578;
	cvt.rzi.f32.f32 	%f581, %f580;
	sub.f32 	%f891, %f575, %f581;
	sub.s32 	%r7782, %r7782, %r306;
	mov.b32 	%r7781, %f891;
	setp.ne.s32 	%p110, %r7782, 0;
	setp.ne.s32 	%p111, %r7781, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1211
	setp.gt.u32 	%p113, %r54, 2139095039;
	selp.f32 	%f582, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f583, %f891, 0f34000000;
	mul.f32 	%f892, %f582, %f583;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1181
	div.approx.f32 	%f566, %f900, %f181;
	cvt.rzi.f32.f32 	%f890, %f566;
	fma.rn.f32 	%f78, %f890, 0fC0000000, %f900;
	mov.b32 	%r53, %f78;
	setp.lt.u32 	%p104, %r53, 1073741824;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r53, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f571, %f890, 0fBF800000;
	setp.lt.f32 	%p108, %f78, 0fC0000000;
	add.f32 	%f572, %f571, 0fBF800000;
	selp.f32 	%f890, %f572, %f571, %p108;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f890, %f890, 0f3F800000;
	setp.ltu.f32 	%p106, %f78, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1186
	add.f32 	%f567, %f890, 0f3F800000;
	fma.rn.f32 	%f569, %f181, 0fC0400000, %f78;
	setp.ge.f32 	%p107, %f569, 0f00000000;
	add.f32 	%f570, %f567, 0f3F800000;
	selp.f32 	%f890, %f570, %f567, %p107;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1190
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1215
	abs.f32 	%f584, %f892;
	setp.gtu.f32 	%p114, %f584, 0f7F800000;
	mov.b32 	%r308, %f75;
	and.b32  	%r61, %r308, -2147483648;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r309, %f892;
	or.b32  	%r310, %r61, %r309;
	mov.b32 	%f892, %r310;
LBB0_67:                                // %__nv_fmodf.exit1216
	and.b32  	%r319, %r13, 6;
	mov.u32 	%r320, -8;
	sub.s32 	%r321, %r320, %r319;
	mul.lo.s32 	%r322, %r52, %r321;
	cvt.rn.f32.s32 	%f94, %r322;
	div.approx.f32 	%f95, %f94, %f564;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	mov.f32 	%f896, %f904;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r63, %f904;
	and.b32  	%r323, %r63, 8388607;
	or.b32  	%r7783, %r323, 1065353216;
	mov.b32 	%f895, %r7783;
	add.s32 	%r324, %r63, -1073741824;
	and.b32  	%r7784, %r324, -8388608;
	setp.eq.s32 	%p129, %r7784, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i1255.preheader
	mov.f32 	%f625, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f624,%f625;
	// end inline asm
LBB0_77:                                // %__nv_fmaf_rn.exit4.i.i.i1255
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r325, %r7784, 192937984;
	add.s32 	%r326, %r325, %r7783;
	mov.b32 	%f626, %r326;
	mul.f32 	%f627, %f624, %f626;
	sub.f32 	%f628, %f626, %f627;
	fma.rn.f32 	%f629, %f628, %f624, %f627;
	sub.f32 	%f630, %f626, %f629;
	fma.rz.f32 	%f631, %f630, %f624, %f629;
	cvt.rzi.f32.f32 	%f632, %f631;
	sub.f32 	%f895, %f626, %f632;
	sub.s32 	%r7784, %r7784, %r325;
	mov.b32 	%r7783, %f895;
	setp.ne.s32 	%p130, %r7784, 0;
	setp.ne.s32 	%p131, %r7783, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1257
	setp.gt.u32 	%p133, %r63, 2139095039;
	selp.f32 	%f633, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f634, %f895, 0f34000000;
	mul.f32 	%f896, %f633, %f634;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1227
	div.approx.f32 	%f617, %f904, %f181;
	cvt.rzi.f32.f32 	%f894, %f617;
	fma.rn.f32 	%f98, %f894, 0fC0000000, %f904;
	mov.b32 	%r62, %f98;
	setp.lt.u32 	%p124, %r62, 1073741824;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r62, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f622, %f894, 0fBF800000;
	setp.lt.f32 	%p128, %f98, 0fC0000000;
	add.f32 	%f623, %f622, 0fBF800000;
	selp.f32 	%f894, %f623, %f622, %p128;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f894, %f894, 0f3F800000;
	setp.ltu.f32 	%p126, %f98, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1232
	add.f32 	%f618, %f894, 0f3F800000;
	fma.rn.f32 	%f620, %f181, 0fC0400000, %f98;
	setp.ge.f32 	%p127, %f620, 0f00000000;
	add.f32 	%f621, %f618, 0f3F800000;
	selp.f32 	%f894, %f621, %f618, %p127;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1236
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1261
	abs.f32 	%f635, %f896;
	setp.gtu.f32 	%p134, %f635, 0f7F800000;
	mov.b32 	%r327, %f95;
	and.b32  	%r70, %r327, -2147483648;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r328, %f896;
	or.b32  	%r329, %r70, %r328;
	mov.b32 	%f896, %r329;
LBB0_81:                                // %__nv_fmodf.exit1262
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10460, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd56, [retval0+0];
	} // callseq 6
	setp.ne.s64 	%p142, %rd56, 64;
	@%p142 bra 	LBB0_123;
// %bb.82:                              // %L1135
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10460, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 10
	cvt.rn.f32.s64 	%f668, %rd62;
	div.approx.f32 	%f112, %f74, %f668;
	abs.f32 	%f908, %f112;
	setp.lt.f32 	%p143, %f908, 0f40000000;
	@%p143 bra 	LBB0_132;
// %bb.83:
	setp.gtu.f32 	%p144, %f908, 0f4B800000;
	@%p144 bra 	LBB0_128;
	bra.uni 	LBB0_84;
LBB0_128:
	mov.b32 	%r142, %f908;
	and.b32  	%r350, %r142, 8388607;
	or.b32  	%r7815, %r350, 1065353216;
	mov.b32 	%f907, %r7815;
	add.s32 	%r351, %r142, -1073741824;
	and.b32  	%r7816, %r351, -8388608;
	setp.eq.s32 	%p150, %r7816, 0;
	@%p150 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1393.preheader
	mov.f32 	%f678, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f677,%f678;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i1393
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r352, %r7816, 192937984;
	add.s32 	%r353, %r352, %r7815;
	mov.b32 	%f679, %r353;
	mul.f32 	%f680, %f677, %f679;
	sub.f32 	%f681, %f679, %f680;
	fma.rn.f32 	%f682, %f681, %f677, %f680;
	sub.f32 	%f683, %f679, %f682;
	fma.rz.f32 	%f684, %f683, %f677, %f682;
	cvt.rzi.f32.f32 	%f685, %f684;
	sub.f32 	%f907, %f679, %f685;
	sub.s32 	%r7816, %r7816, %r352;
	mov.b32 	%r7815, %f907;
	setp.ne.s32 	%p151, %r7816, 0;
	setp.ne.s32 	%p152, %r7815, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i1395
	setp.gt.u32 	%p154, %r142, 2139095039;
	selp.f32 	%f686, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f687, %f907, 0f34000000;
	mul.f32 	%f908, %f686, %f687;
	bra.uni 	LBB0_132;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1365
	div.approx.f32 	%f670, %f908, %f181;
	cvt.rzi.f32.f32 	%f906, %f670;
	fma.rn.f32 	%f147, %f906, 0fC0000000, %f908;
	mov.b32 	%r141, %f147;
	setp.lt.u32 	%p145, %r141, 1073741824;
	@%p145 bra 	LBB0_127;
// %bb.85:
	setp.lt.u32 	%p146, %r141, -2147483647;
	@%p146 bra 	LBB0_125;
// %bb.86:
	add.f32 	%f675, %f906, 0fBF800000;
	setp.lt.f32 	%p149, %f147, 0fC0000000;
	add.f32 	%f676, %f675, 0fBF800000;
	selp.f32 	%f906, %f676, %f675, %p149;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p147, %f147, 0f40800000;
	@%p147 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1370
	add.f32 	%f671, %f906, 0f3F800000;
	fma.rn.f32 	%f673, %f181, 0fC0400000, %f147;
	setp.ge.f32 	%p148, %f673, 0f00000000;
	add.f32 	%f674, %f671, 0f3F800000;
	selp.f32 	%f906, %f674, %f671, %p148;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i1374
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i1399
	abs.f32 	%f688, %f908;
	setp.gtu.f32 	%p155, %f688, 0f7F800000;
	@%p155 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r354, %f112;
	and.b32  	%r355, %r354, -2147483648;
	mov.b32 	%r356, %f908;
	or.b32  	%r357, %r355, %r356;
	mov.b32 	%f908, %r357;
LBB0_134:                               // %__nv_fmodf.exit1400
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10460, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd66, [retval0+0];
	} // callseq 11
	cvt.rn.f32.s64 	%f719, %rd66;
	div.approx.f32 	%f163, %f94, %f719;
	abs.f32 	%f912, %f163;
	setp.lt.f32 	%p163, %f912, 0f40000000;
	@%p163 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p164, %f912, 0f4B800000;
	@%p164 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r150, %f912;
	and.b32  	%r366, %r150, 8388607;
	or.b32  	%r7817, %r366, 1065353216;
	mov.b32 	%f911, %r7817;
	add.s32 	%r367, %r150, -1073741824;
	and.b32  	%r7818, %r367, -8388608;
	setp.eq.s32 	%p170, %r7818, 0;
	@%p170 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i1439.preheader
	mov.f32 	%f729, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f728,%f729;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i1439
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r368, %r7818, 192937984;
	add.s32 	%r369, %r368, %r7817;
	mov.b32 	%f730, %r369;
	mul.f32 	%f731, %f728, %f730;
	sub.f32 	%f732, %f730, %f731;
	fma.rn.f32 	%f733, %f732, %f728, %f731;
	sub.f32 	%f734, %f730, %f733;
	fma.rz.f32 	%f735, %f734, %f728, %f733;
	cvt.rzi.f32.f32 	%f736, %f735;
	sub.f32 	%f911, %f730, %f736;
	sub.s32 	%r7818, %r7818, %r368;
	mov.b32 	%r7817, %f911;
	setp.ne.s32 	%p171, %r7818, 0;
	setp.ne.s32 	%p172, %r7817, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i1441
	setp.gt.u32 	%p174, %r150, 2139095039;
	selp.f32 	%f737, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f738, %f911, 0f34000000;
	mul.f32 	%f912, %f737, %f738;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i1411
	div.approx.f32 	%f721, %f912, %f181;
	cvt.rzi.f32.f32 	%f910, %f721;
	fma.rn.f32 	%f166, %f910, 0fC0000000, %f912;
	mov.b32 	%r149, %f166;
	setp.lt.u32 	%p165, %r149, 1073741824;
	@%p165 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p166, %r149, -2147483647;
	@%p166 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f726, %f910, 0fBF800000;
	setp.lt.f32 	%p169, %f166, 0fC0000000;
	add.f32 	%f727, %f726, 0fBF800000;
	selp.f32 	%f910, %f727, %f726, %p169;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p167, %f166, 0f40800000;
	@%p167 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i1416
	add.f32 	%f722, %f910, 0f3F800000;
	fma.rn.f32 	%f724, %f181, 0fC0400000, %f166;
	setp.ge.f32 	%p168, %f724, 0f00000000;
	add.f32 	%f725, %f722, 0f3F800000;
	selp.f32 	%f910, %f725, %f722, %p168;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i1420
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i1445
	abs.f32 	%f739, %f912;
	setp.gtu.f32 	%p175, %f739, 0f7F800000;
	@%p175 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r370, %f163;
	and.b32  	%r371, %r370, -2147483648;
	mov.b32 	%r372, %f912;
	or.b32  	%r373, %r371, %r372;
	mov.b32 	%f912, %r373;
LBB0_148:                               // %__nv_fmodf.exit1446
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_10460, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd70, [retval0+0];
	} // callseq 12
	setp.eq.s64 	%p183, %rd70, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_149;
LBB0_87:                                // %L1300
	@%p102 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f900, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r76, %f900;
	and.b32  	%r388, %r76, 8388607;
	or.b32  	%r7785, %r388, 1065353216;
	mov.b32 	%f899, %r7785;
	add.s32 	%r389, %r76, -1073741824;
	and.b32  	%r7786, %r389, -8388608;
	setp.eq.s32 	%p191, %r7786, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %__nv_fmaf_rn.exit4.i.i.i1301.preheader
	mov.f32 	%f781, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f780,%f781;
	// end inline asm
LBB0_97:                                // %__nv_fmaf_rn.exit4.i.i.i1301
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r390, %r7786, 192937984;
	add.s32 	%r391, %r390, %r7785;
	mov.b32 	%f782, %r391;
	mul.f32 	%f783, %f780, %f782;
	sub.f32 	%f784, %f782, %f783;
	fma.rn.f32 	%f785, %f784, %f780, %f783;
	sub.f32 	%f786, %f782, %f785;
	fma.rz.f32 	%f787, %f786, %f780, %f785;
	cvt.rzi.f32.f32 	%f788, %f787;
	sub.f32 	%f899, %f782, %f788;
	sub.s32 	%r7786, %r7786, %r390;
	mov.b32 	%r7785, %f899;
	setp.ne.s32 	%p192, %r7786, 0;
	setp.ne.s32 	%p193, %r7785, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1303
	setp.gt.u32 	%p195, %r76, 2139095039;
	selp.f32 	%f789, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f790, %f899, 0f34000000;
	mul.f32 	%f900, %f789, %f790;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1273
	div.approx.f32 	%f773, %f900, %f181;
	cvt.rzi.f32.f32 	%f898, %f773;
	fma.rn.f32 	%f115, %f898, 0fC0000000, %f900;
	mov.b32 	%r75, %f115;
	setp.lt.u32 	%p186, %r75, 1073741824;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r75, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f778, %f898, 0fBF800000;
	setp.lt.f32 	%p190, %f115, 0fC0000000;
	add.f32 	%f779, %f778, 0fBF800000;
	selp.f32 	%f898, %f779, %f778, %p190;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p188, %f115, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1278
	add.f32 	%f774, %f898, 0f3F800000;
	fma.rn.f32 	%f776, %f181, 0fC0400000, %f115;
	setp.ge.f32 	%p189, %f776, 0f00000000;
	add.f32 	%f777, %f774, 0f3F800000;
	selp.f32 	%f898, %f777, %f774, %p189;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1282
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1307
	abs.f32 	%f791, %f900;
	setp.gtu.f32 	%p196, %f791, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r392, %f900;
	or.b32  	%r393, %r61, %r392;
	mov.b32 	%f900, %r393;
LBB0_101:                               // %__nv_fmodf.exit1308
	@%p122 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f904, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r84, %f904;
	and.b32  	%r402, %r84, 8388607;
	or.b32  	%r7787, %r402, 1065353216;
	mov.b32 	%f903, %r7787;
	add.s32 	%r403, %r84, -1073741824;
	and.b32  	%r7788, %r403, -8388608;
	setp.eq.s32 	%p211, %r7788, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1347.preheader
	mov.f32 	%f831, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f830,%f831;
	// end inline asm
LBB0_111:                               // %__nv_fmaf_rn.exit4.i.i.i1347
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r404, %r7788, 192937984;
	add.s32 	%r405, %r404, %r7787;
	mov.b32 	%f832, %r405;
	mul.f32 	%f833, %f830, %f832;
	sub.f32 	%f834, %f832, %f833;
	fma.rn.f32 	%f835, %f834, %f830, %f833;
	sub.f32 	%f836, %f832, %f835;
	fma.rz.f32 	%f837, %f836, %f830, %f835;
	cvt.rzi.f32.f32 	%f838, %f837;
	sub.f32 	%f903, %f832, %f838;
	sub.s32 	%r7788, %r7788, %r404;
	mov.b32 	%r7787, %f903;
	setp.ne.s32 	%p212, %r7788, 0;
	setp.ne.s32 	%p213, %r7787, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1349
	setp.gt.u32 	%p215, %r84, 2139095039;
	selp.f32 	%f839, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f840, %f903, 0f34000000;
	mul.f32 	%f904, %f839, %f840;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1319
	div.approx.f32 	%f823, %f904, %f181;
	cvt.rzi.f32.f32 	%f902, %f823;
	fma.rn.f32 	%f132, %f902, 0fC0000000, %f904;
	mov.b32 	%r83, %f132;
	setp.lt.u32 	%p206, %r83, 1073741824;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r83, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f828, %f902, 0fBF800000;
	setp.lt.f32 	%p210, %f132, 0fC0000000;
	add.f32 	%f829, %f828, 0fBF800000;
	selp.f32 	%f902, %f829, %f828, %p210;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p208, %f132, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1324
	add.f32 	%f824, %f902, 0f3F800000;
	fma.rn.f32 	%f826, %f181, 0fC0400000, %f132;
	setp.ge.f32 	%p209, %f826, 0f00000000;
	add.f32 	%f827, %f824, 0f3F800000;
	selp.f32 	%f902, %f827, %f824, %p209;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1328
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1353
	abs.f32 	%f841, %f904;
	setp.gtu.f32 	%p216, %f841, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r406, %f904;
	or.b32  	%r407, %r70, %r406;
	mov.b32 	%f904, %r407;
LBB0_115:                               // %__nv_fmodf.exit1354
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7776, 0;
	@%p224 bra 	LBB0_122;
// %bb.116:                             // %L1400.lr.ph
	mov.f32 	%f185, 0f43808000;
	div.approx.f32 	%f186, %f184, %f185;
	div.approx.f32 	%f220, %f218, %f185;
	div.approx.f32 	%f255, %f253, %f185;
	div.approx.f32 	%f289, %f287, %f185;
	div.approx.f32 	%f324, %f322, %f185;
	div.approx.f32 	%f358, %f356, %f185;
	div.approx.f32 	%f393, %f391, %f185;
	div.approx.f32 	%f427, %f425, %f185;
	abs.f32 	%f187, %f186;
	abs.f32 	%f221, %f220;
	abs.f32 	%f256, %f255;
	abs.f32 	%f290, %f289;
	abs.f32 	%f325, %f324;
	abs.f32 	%f359, %f358;
	abs.f32 	%f394, %f393;
	abs.f32 	%f428, %f427;
	setp.gt.f32 	%p13, %f187, 0f4B800000;
	mul.f32 	%f188, %f186, 0f00000000;
	setp.gt.f32 	%p19, %f221, 0f4B800000;
	mul.f32 	%f222, %f220, 0f00000000;
	setp.gt.f32 	%p25, %f256, 0f4B800000;
	mul.f32 	%f257, %f255, 0f00000000;
	setp.gt.f32 	%p31, %f290, 0f4B800000;
	mul.f32 	%f291, %f289, 0f00000000;
	setp.gt.f32 	%p37, %f325, 0f4B800000;
	mul.f32 	%f326, %f324, 0f00000000;
	setp.gt.f32 	%p43, %f359, 0f4B800000;
	mul.f32 	%f360, %f358, 0f00000000;
	setp.gt.f32 	%p49, %f394, 0f4B800000;
	mul.f32 	%f395, %f393, 0f00000000;
	setp.gt.f32 	%p55, %f428, 0f4B800000;
	mul.f32 	%f429, %f427, 0f00000000;
	selp.f32 	%f189, %f188, %f186, %p13;
	selp.f32 	%f223, %f222, %f220, %p19;
	selp.f32 	%f258, %f257, %f255, %p25;
	selp.f32 	%f292, %f291, %f289, %p31;
	selp.f32 	%f327, %f326, %f324, %p37;
	selp.f32 	%f361, %f360, %f358, %p43;
	selp.f32 	%f396, %f395, %f393, %p49;
	selp.f32 	%f430, %f429, %f427, %p55;
	add.f32 	%f585, %f892, %f892;
	add.f32 	%f636, %f896, %f896;
	add.f32 	%f190, %f189, %f189;
	add.f32 	%f224, %f223, %f223;
	add.f32 	%f259, %f258, %f258;
	add.f32 	%f293, %f292, %f292;
	add.f32 	%f328, %f327, %f327;
	add.f32 	%f362, %f361, %f361;
	add.f32 	%f397, %f396, %f396;
	add.f32 	%f431, %f430, %f430;
	add.f32 	%f480, %f884, %f884;
	add.f32 	%f532, %f888, %f888;
	mov.b32 	%r311, %f585;
	mov.b32 	%r342, %f636;
	add.f32 	%f689, %f908, %f908;
	add.f32 	%f740, %f912, %f912;
	mov.b32 	%r187, %f190;
	mov.b32 	%r194, %f224;
	mov.b32 	%r205, %f259;
	mov.b32 	%r212, %f293;
	mov.b32 	%r223, %f328;
	mov.b32 	%r230, %f362;
	mov.b32 	%r241, %f397;
	mov.b32 	%r248, %f431;
	mov.b32 	%r266, %f480;
	mov.b32 	%r289, %f532;
	and.b32  	%r312, %r311, -2147483648;
	and.b32  	%r343, %r342, -2147483648;
	mov.b32 	%r358, %f689;
	mov.b32 	%r380, %f740;
	and.b32  	%r188, %r187, -2147483648;
	and.b32  	%r195, %r194, -2147483648;
	and.b32  	%r206, %r205, -2147483648;
	and.b32  	%r213, %r212, -2147483648;
	and.b32  	%r224, %r223, -2147483648;
	and.b32  	%r231, %r230, -2147483648;
	and.b32  	%r242, %r241, -2147483648;
	and.b32  	%r249, %r248, -2147483648;
	and.b32  	%r267, %r266, -2147483648;
	and.b32  	%r290, %r289, -2147483648;
	or.b32  	%r313, %r312, 1056964608;
	or.b32  	%r344, %r343, 1056964608;
	and.b32  	%r359, %r358, -2147483648;
	and.b32  	%r381, %r380, -2147483648;
	add.f32 	%f792, %f900, %f900;
	or.b32  	%r189, %r188, 1056964608;
	or.b32  	%r196, %r195, 1056964608;
	or.b32  	%r207, %r206, 1056964608;
	or.b32  	%r214, %r213, 1056964608;
	or.b32  	%r225, %r224, 1056964608;
	or.b32  	%r232, %r231, 1056964608;
	or.b32  	%r243, %r242, 1056964608;
	or.b32  	%r250, %r249, 1056964608;
	or.b32  	%r268, %r267, 1056964608;
	or.b32  	%r291, %r290, 1056964608;
	mov.b32 	%f586, %r313;
	mov.b32 	%f637, %r344;
	or.b32  	%r360, %r359, 1056964608;
	or.b32  	%r382, %r381, 1056964608;
	mov.b32 	%r394, %f792;
	mov.b32 	%f191, %r189;
	mov.b32 	%f225, %r196;
	mov.b32 	%f260, %r207;
	mov.b32 	%f294, %r214;
	mov.b32 	%f329, %r225;
	mov.b32 	%f363, %r232;
	mov.b32 	%f398, %r243;
	mov.b32 	%f432, %r250;
	mov.b32 	%f481, %r268;
	mov.b32 	%f533, %r291;
	add.f32 	%f587, %f585, %f586;
	abs.f32 	%f589, %f585;
	add.f32 	%f638, %f636, %f637;
	abs.f32 	%f640, %f636;
	mov.b32 	%f690, %r360;
	mov.b32 	%f741, %r382;
	and.b32  	%r395, %r394, -2147483648;
	add.f32 	%f192, %f190, %f191;
	abs.f32 	%f194, %f190;
	add.f32 	%f226, %f224, %f225;
	abs.f32 	%f228, %f224;
	add.f32 	%f261, %f259, %f260;
	abs.f32 	%f263, %f259;
	add.f32 	%f295, %f293, %f294;
	abs.f32 	%f297, %f293;
	add.f32 	%f330, %f328, %f329;
	abs.f32 	%f332, %f328;
	add.f32 	%f364, %f362, %f363;
	abs.f32 	%f366, %f362;
	add.f32 	%f399, %f397, %f398;
	abs.f32 	%f401, %f397;
	add.f32 	%f433, %f431, %f432;
	abs.f32 	%f435, %f431;
	add.f32 	%f482, %f480, %f481;
	abs.f32 	%f484, %f480;
	add.f32 	%f534, %f532, %f533;
	abs.f32 	%f536, %f532;
	cvt.rzi.f32.f32 	%f588, %f587;
	setp.gt.f32 	%p115, %f589, 0f4B000000;
	cvt.rzi.f32.f32 	%f639, %f638;
	setp.gt.f32 	%p135, %f640, 0f4B000000;
	add.f32 	%f691, %f689, %f690;
	abs.f32 	%f693, %f689;
	add.f32 	%f742, %f740, %f741;
	abs.f32 	%f744, %f740;
	or.b32  	%r396, %r395, 1056964608;
	cvt.rzi.f32.f32 	%f193, %f192;
	setp.gt.f32 	%p14, %f194, 0f4B000000;
	cvt.rzi.f32.f32 	%f227, %f226;
	setp.gt.f32 	%p20, %f228, 0f4B000000;
	cvt.rzi.f32.f32 	%f262, %f261;
	setp.gt.f32 	%p26, %f263, 0f4B000000;
	cvt.rzi.f32.f32 	%f296, %f295;
	setp.gt.f32 	%p32, %f297, 0f4B000000;
	cvt.rzi.f32.f32 	%f331, %f330;
	setp.gt.f32 	%p38, %f332, 0f4B000000;
	cvt.rzi.f32.f32 	%f365, %f364;
	setp.gt.f32 	%p44, %f366, 0f4B000000;
	cvt.rzi.f32.f32 	%f400, %f399;
	setp.gt.f32 	%p50, %f401, 0f4B000000;
	cvt.rzi.f32.f32 	%f434, %f433;
	setp.gt.f32 	%p56, %f435, 0f4B000000;
	cvt.rzi.f32.f32 	%f483, %f482;
	setp.gt.f32 	%p74, %f484, 0f4B000000;
	cvt.rzi.f32.f32 	%f535, %f534;
	setp.gt.f32 	%p94, %f536, 0f4B000000;
	selp.f32 	%f590, %f585, %f588, %p115;
	cvt.rzi.f32.f32 	%f591, %f585;
	setp.lt.f32 	%p116, %f589, 0f3F000000;
	selp.f32 	%f641, %f636, %f639, %p135;
	cvt.rzi.f32.f32 	%f642, %f636;
	setp.lt.f32 	%p136, %f640, 0f3F000000;
	cvt.rzi.f32.f32 	%f692, %f691;
	setp.gt.f32 	%p156, %f693, 0f4B000000;
	cvt.rzi.f32.f32 	%f743, %f742;
	setp.gt.f32 	%p176, %f744, 0f4B000000;
	mov.b32 	%f793, %r396;
	selp.f32 	%f195, %f190, %f193, %p14;
	cvt.rzi.f32.f32 	%f196, %f190;
	setp.lt.f32 	%p15, %f194, 0f3F000000;
	selp.f32 	%f229, %f224, %f227, %p20;
	cvt.rzi.f32.f32 	%f230, %f224;
	setp.lt.f32 	%p21, %f228, 0f3F000000;
	selp.f32 	%f264, %f259, %f262, %p26;
	cvt.rzi.f32.f32 	%f265, %f259;
	setp.lt.f32 	%p27, %f263, 0f3F000000;
	selp.f32 	%f298, %f293, %f296, %p32;
	cvt.rzi.f32.f32 	%f299, %f293;
	setp.lt.f32 	%p33, %f297, 0f3F000000;
	selp.f32 	%f333, %f328, %f331, %p38;
	cvt.rzi.f32.f32 	%f334, %f328;
	setp.lt.f32 	%p39, %f332, 0f3F000000;
	selp.f32 	%f367, %f362, %f365, %p44;
	cvt.rzi.f32.f32 	%f368, %f362;
	setp.lt.f32 	%p45, %f366, 0f3F000000;
	selp.f32 	%f402, %f397, %f400, %p50;
	cvt.rzi.f32.f32 	%f403, %f397;
	setp.lt.f32 	%p51, %f401, 0f3F000000;
	selp.f32 	%f436, %f431, %f434, %p56;
	cvt.rzi.f32.f32 	%f437, %f431;
	setp.lt.f32 	%p57, %f435, 0f3F000000;
	selp.f32 	%f485, %f480, %f483, %p74;
	cvt.rzi.f32.f32 	%f486, %f480;
	setp.lt.f32 	%p75, %f484, 0f3F000000;
	selp.f32 	%f537, %f532, %f535, %p94;
	cvt.rzi.f32.f32 	%f538, %f532;
	setp.lt.f32 	%p95, %f536, 0f3F000000;
	selp.f32 	%f592, %f591, %f590, %p116;
	selp.f32 	%f643, %f642, %f641, %p136;
	selp.f32 	%f694, %f689, %f692, %p156;
	cvt.rzi.f32.f32 	%f695, %f689;
	setp.lt.f32 	%p157, %f693, 0f3F000000;
	selp.f32 	%f745, %f740, %f743, %p176;
	cvt.rzi.f32.f32 	%f746, %f740;
	setp.lt.f32 	%p177, %f744, 0f3F000000;
	add.f32 	%f794, %f792, %f793;
	abs.f32 	%f796, %f792;
	selp.f32 	%f197, %f196, %f195, %p15;
	selp.f32 	%f231, %f230, %f229, %p21;
	selp.f32 	%f266, %f265, %f264, %p27;
	selp.f32 	%f300, %f299, %f298, %p33;
	selp.f32 	%f335, %f334, %f333, %p39;
	selp.f32 	%f369, %f368, %f367, %p45;
	selp.f32 	%f404, %f403, %f402, %p51;
	selp.f32 	%f438, %f437, %f436, %p57;
	selp.f32 	%f487, %f486, %f485, %p75;
	selp.f32 	%f539, %f538, %f537, %p95;
	fma.rn.f32 	%f593, %f592, 0fBF000000, %f892;
	fma.rn.f32 	%f644, %f643, 0fBF000000, %f896;
	selp.f32 	%f696, %f695, %f694, %p157;
	selp.f32 	%f747, %f746, %f745, %p177;
	cvt.rzi.f32.f32 	%f795, %f794;
	setp.gt.f32 	%p198, %f796, 0f4B000000;
	fma.rn.f32 	%f198, %f197, 0fBF000000, %f189;
	fma.rn.f32 	%f232, %f231, 0fBF000000, %f223;
	fma.rn.f32 	%f267, %f266, 0fBF000000, %f258;
	fma.rn.f32 	%f301, %f300, 0fBF000000, %f292;
	fma.rn.f32 	%f336, %f335, 0fBF000000, %f327;
	fma.rn.f32 	%f370, %f369, 0fBF000000, %f361;
	fma.rn.f32 	%f405, %f404, 0fBF000000, %f396;
	fma.rn.f32 	%f439, %f438, 0fBF000000, %f430;
	fma.rn.f32 	%f488, %f487, 0fBF000000, %f884;
	fma.rn.f32 	%f540, %f539, 0fBF000000, %f888;
	mul.f32 	%f594, %f593, %f593;
	mul.f32 	%f645, %f644, %f644;
	fma.rn.f32 	%f697, %f696, 0fBF000000, %f908;
	fma.rn.f32 	%f748, %f747, 0fBF000000, %f912;
	selp.f32 	%f797, %f792, %f795, %p198;
	cvt.rzi.f32.f32 	%f798, %f792;
	setp.lt.f32 	%p199, %f796, 0f3F000000;
	mul.f32 	%f199, %f198, %f198;
	mul.f32 	%f233, %f232, %f232;
	mul.f32 	%f268, %f267, %f267;
	mul.f32 	%f302, %f301, %f301;
	mul.f32 	%f337, %f336, %f336;
	mul.f32 	%f371, %f370, %f370;
	mul.f32 	%f406, %f405, %f405;
	mul.f32 	%f440, %f439, %f439;
	mul.f32 	%f489, %f488, %f488;
	mul.f32 	%f541, %f540, %f540;
	fma.rn.f32 	%f595, %f594, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f596, %f594, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f646, %f645, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f647, %f645, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f698, %f697, %f697;
	mul.f32 	%f749, %f748, %f748;
	selp.f32 	%f799, %f798, %f797, %p199;
	cvt.rzi.s32.f32 	%r190, %f197;
	fma.rn.f32 	%f200, %f199, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f201, %f199, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r197, %f231;
	fma.rn.f32 	%f234, %f233, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f235, %f233, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r208, %f266;
	fma.rn.f32 	%f269, %f268, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f270, %f268, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r215, %f300;
	fma.rn.f32 	%f303, %f302, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f304, %f302, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r226, %f335;
	fma.rn.f32 	%f338, %f337, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f339, %f337, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r233, %f369;
	fma.rn.f32 	%f372, %f371, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f373, %f371, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r244, %f404;
	fma.rn.f32 	%f407, %f406, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f408, %f406, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r251, %f438;
	fma.rn.f32 	%f441, %f440, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f442, %f440, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f490, %f489, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f491, %f489, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f542, %f541, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f543, %f541, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r314, %f592;
	fma.rn.f32 	%f597, %f595, %f594, 0fC0A55DF6;
	fma.rn.f32 	%f598, %f596, %f594, 0f4081E0CF;
	fma.rn.f32 	%f599, %f594, %f593, 0f00000000;
	cvt.rzi.s32.f32 	%r345, %f643;
	fma.rn.f32 	%f648, %f646, %f645, 0fC0A55DF6;
	fma.rn.f32 	%f649, %f647, %f645, 0f4081E0CF;
	fma.rn.f32 	%f650, %f645, %f644, 0f00000000;
	fma.rn.f32 	%f699, %f698, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f700, %f698, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f750, %f749, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f751, %f749, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f800, %f799, 0fBF000000, %f900;
	add.s32 	%r191, %r190, 1;
	fma.rn.f32 	%f202, %f200, %f199, 0fC0A55DF6;
	fma.rn.f32 	%f203, %f201, %f199, 0f4081E0CF;
	fma.rn.f32 	%f204, %f199, %f198, 0f00000000;
	add.s32 	%r198, %r197, 1;
	fma.rn.f32 	%f236, %f234, %f233, 0fC0A55DF6;
	fma.rn.f32 	%f237, %f235, %f233, 0f4081E0CF;
	fma.rn.f32 	%f238, %f233, %f232, 0f00000000;
	add.s32 	%r209, %r208, 1;
	fma.rn.f32 	%f271, %f269, %f268, 0fC0A55DF6;
	fma.rn.f32 	%f272, %f270, %f268, 0f4081E0CF;
	fma.rn.f32 	%f273, %f268, %f267, 0f00000000;
	add.s32 	%r216, %r215, 1;
	fma.rn.f32 	%f305, %f303, %f302, 0fC0A55DF6;
	fma.rn.f32 	%f306, %f304, %f302, 0f4081E0CF;
	fma.rn.f32 	%f307, %f302, %f301, 0f00000000;
	add.s32 	%r227, %r226, 1;
	fma.rn.f32 	%f340, %f338, %f337, 0fC0A55DF6;
	fma.rn.f32 	%f341, %f339, %f337, 0f4081E0CF;
	fma.rn.f32 	%f342, %f337, %f336, 0f00000000;
	add.s32 	%r234, %r233, 1;
	fma.rn.f32 	%f374, %f372, %f371, 0fC0A55DF6;
	fma.rn.f32 	%f375, %f373, %f371, 0f4081E0CF;
	fma.rn.f32 	%f376, %f371, %f370, 0f00000000;
	add.s32 	%r245, %r244, 1;
	fma.rn.f32 	%f409, %f407, %f406, 0fC0A55DF6;
	fma.rn.f32 	%f410, %f408, %f406, 0f4081E0CF;
	fma.rn.f32 	%f411, %f406, %f405, 0f00000000;
	add.s32 	%r252, %r251, 1;
	fma.rn.f32 	%f443, %f441, %f440, 0fC0A55DF6;
	fma.rn.f32 	%f444, %f442, %f440, 0f4081E0CF;
	fma.rn.f32 	%f445, %f440, %f439, 0f00000000;
	cvt.rzi.s32.f32 	%r269, %f487;
	fma.rn.f32 	%f492, %f490, %f489, 0fC0A55DF6;
	fma.rn.f32 	%f493, %f491, %f489, 0f4081E0CF;
	fma.rn.f32 	%f494, %f489, %f488, 0f00000000;
	cvt.rzi.s32.f32 	%r292, %f539;
	fma.rn.f32 	%f544, %f542, %f541, 0fC0A55DF6;
	fma.rn.f32 	%f545, %f543, %f541, 0f4081E0CF;
	fma.rn.f32 	%f546, %f541, %f540, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f594, 0fC09DE9E6;
	fma.rn.f32 	%f601, %f597, %f599, 0f00000000;
	and.b32  	%r315, %r314, 1;
	fma.rn.f32 	%f651, %f649, %f645, 0fC09DE9E6;
	fma.rn.f32 	%f652, %f648, %f650, 0f00000000;
	and.b32  	%r346, %r345, 1;
	cvt.rzi.s32.f32 	%r361, %f696;
	fma.rn.f32 	%f701, %f699, %f698, 0fC0A55DF6;
	fma.rn.f32 	%f702, %f700, %f698, 0f4081E0CF;
	fma.rn.f32 	%f703, %f698, %f697, 0f00000000;
	cvt.rzi.s32.f32 	%r383, %f747;
	fma.rn.f32 	%f752, %f750, %f749, 0fC0A55DF6;
	fma.rn.f32 	%f753, %f751, %f749, 0f4081E0CF;
	fma.rn.f32 	%f754, %f749, %f748, 0f00000000;
	mul.f32 	%f801, %f800, %f800;
	fma.rn.f32 	%f205, %f203, %f199, 0fC09DE9E6;
	fma.rn.f32 	%f206, %f202, %f204, 0f00000000;
	and.b32  	%r192, %r191, 1;
	fma.rn.f32 	%f239, %f237, %f233, 0fC09DE9E6;
	fma.rn.f32 	%f240, %f236, %f238, 0f00000000;
	and.b32  	%r199, %r198, 1;
	fma.rn.f32 	%f274, %f272, %f268, 0fC09DE9E6;
	fma.rn.f32 	%f275, %f271, %f273, 0f00000000;
	and.b32  	%r210, %r209, 1;
	fma.rn.f32 	%f308, %f306, %f302, 0fC09DE9E6;
	fma.rn.f32 	%f309, %f305, %f307, 0f00000000;
	and.b32  	%r217, %r216, 1;
	fma.rn.f32 	%f343, %f341, %f337, 0fC09DE9E6;
	fma.rn.f32 	%f344, %f340, %f342, 0f00000000;
	and.b32  	%r228, %r227, 1;
	fma.rn.f32 	%f377, %f375, %f371, 0fC09DE9E6;
	fma.rn.f32 	%f378, %f374, %f376, 0f00000000;
	and.b32  	%r235, %r234, 1;
	fma.rn.f32 	%f412, %f410, %f406, 0fC09DE9E6;
	fma.rn.f32 	%f413, %f409, %f411, 0f00000000;
	and.b32  	%r246, %r245, 1;
	fma.rn.f32 	%f446, %f444, %f440, 0fC09DE9E6;
	fma.rn.f32 	%f447, %f443, %f445, 0f00000000;
	and.b32  	%r253, %r252, 1;
	fma.rn.f32 	%f495, %f493, %f489, 0fC09DE9E6;
	fma.rn.f32 	%f496, %f492, %f494, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f547, %f545, %f541, 0fC09DE9E6;
	fma.rn.f32 	%f548, %f544, %f546, 0f00000000;
	and.b32  	%r293, %r292, 1;
	fma.rn.f32 	%f602, %f600, %f594, 0f3F800000;
	fma.rn.f32 	%f603, %f593, 0f40490FDB, %f601;
	setp.eq.b32 	%p117, %r315, 1;
	fma.rn.f32 	%f653, %f651, %f645, 0f3F800000;
	fma.rn.f32 	%f654, %f644, 0f40490FDB, %f652;
	setp.eq.b32 	%p137, %r346, 1;
	fma.rn.f32 	%f704, %f702, %f698, 0fC09DE9E6;
	fma.rn.f32 	%f705, %f701, %f703, 0f00000000;
	and.b32  	%r362, %r361, 1;
	fma.rn.f32 	%f755, %f753, %f749, 0fC09DE9E6;
	fma.rn.f32 	%f756, %f752, %f754, 0f00000000;
	and.b32  	%r384, %r383, 1;
	fma.rn.f32 	%f802, %f801, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f803, %f801, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f207, %f205, %f199, 0f3F800000;
	fma.rn.f32 	%f208, %f198, 0f40490FDB, %f206;
	setp.eq.b32 	%p16, %r192, 1;
	fma.rn.f32 	%f241, %f239, %f233, 0f3F800000;
	fma.rn.f32 	%f242, %f232, 0f40490FDB, %f240;
	setp.eq.b32 	%p22, %r199, 1;
	fma.rn.f32 	%f276, %f274, %f268, 0f3F800000;
	fma.rn.f32 	%f277, %f267, 0f40490FDB, %f275;
	setp.eq.b32 	%p28, %r210, 1;
	fma.rn.f32 	%f310, %f308, %f302, 0f3F800000;
	fma.rn.f32 	%f311, %f301, 0f40490FDB, %f309;
	setp.eq.b32 	%p34, %r217, 1;
	fma.rn.f32 	%f345, %f343, %f337, 0f3F800000;
	fma.rn.f32 	%f346, %f336, 0f40490FDB, %f344;
	setp.eq.b32 	%p40, %r228, 1;
	fma.rn.f32 	%f379, %f377, %f371, 0f3F800000;
	fma.rn.f32 	%f380, %f370, 0f40490FDB, %f378;
	setp.eq.b32 	%p46, %r235, 1;
	fma.rn.f32 	%f414, %f412, %f406, 0f3F800000;
	fma.rn.f32 	%f415, %f405, 0f40490FDB, %f413;
	setp.eq.b32 	%p52, %r246, 1;
	fma.rn.f32 	%f448, %f446, %f440, 0f3F800000;
	fma.rn.f32 	%f449, %f439, 0f40490FDB, %f447;
	setp.eq.b32 	%p58, %r253, 1;
	fma.rn.f32 	%f497, %f495, %f489, 0f3F800000;
	fma.rn.f32 	%f498, %f488, 0f40490FDB, %f496;
	setp.eq.b32 	%p76, %r270, 1;
	fma.rn.f32 	%f549, %f547, %f541, 0f3F800000;
	fma.rn.f32 	%f550, %f540, 0f40490FDB, %f548;
	setp.eq.b32 	%p96, %r293, 1;
	selp.f32 	%f604, %f602, %f603, %p117;
	and.b32  	%r316, %r314, 2;
	selp.f32 	%f655, %f653, %f654, %p137;
	and.b32  	%r347, %r345, 2;
	fma.rn.f32 	%f706, %f704, %f698, 0f3F800000;
	fma.rn.f32 	%f707, %f697, 0f40490FDB, %f705;
	setp.eq.b32 	%p158, %r362, 1;
	fma.rn.f32 	%f757, %f755, %f749, 0f3F800000;
	fma.rn.f32 	%f758, %f748, 0f40490FDB, %f756;
	setp.eq.b32 	%p178, %r384, 1;
	cvt.rzi.s32.f32 	%r397, %f799;
	fma.rn.f32 	%f804, %f802, %f801, 0fC0A55DF6;
	fma.rn.f32 	%f805, %f803, %f801, 0f4081E0CF;
	fma.rn.f32 	%f806, %f801, %f800, 0f00000000;
	selp.f32 	%f209, %f207, %f208, %p16;
	and.b32  	%r193, %r191, 2;
	mov.f32 	%f210, 0f00000000;
	selp.f32 	%f243, %f241, %f242, %p22;
	and.b32  	%r200, %r198, 2;
	selp.f32 	%f278, %f276, %f277, %p28;
	and.b32  	%r211, %r209, 2;
	selp.f32 	%f312, %f310, %f311, %p34;
	and.b32  	%r218, %r216, 2;
	selp.f32 	%f347, %f345, %f346, %p40;
	and.b32  	%r229, %r227, 2;
	selp.f32 	%f381, %f379, %f380, %p46;
	and.b32  	%r236, %r234, 2;
	selp.f32 	%f416, %f414, %f415, %p52;
	and.b32  	%r247, %r245, 2;
	selp.f32 	%f450, %f448, %f449, %p58;
	and.b32  	%r254, %r252, 2;
	selp.f32 	%f499, %f497, %f498, %p76;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f551, %f549, %f550, %p96;
	and.b32  	%r294, %r292, 2;
	setp.eq.s32 	%p118, %r316, 0;
	neg.f32 	%f606, %f604;
	add.s32 	%r317, %r314, 1;
	cvt.rzi.f32.f32 	%f611, %f892;
	setp.eq.s32 	%p138, %r347, 0;
	neg.f32 	%f657, %f655;
	add.s32 	%r348, %r345, 1;
	cvt.rzi.f32.f32 	%f662, %f896;
	selp.f32 	%f708, %f706, %f707, %p158;
	and.b32  	%r363, %r361, 2;
	selp.f32 	%f759, %f757, %f758, %p178;
	and.b32  	%r385, %r383, 2;
	fma.rn.f32 	%f807, %f805, %f801, 0fC09DE9E6;
	fma.rn.f32 	%f808, %f804, %f806, 0f00000000;
	and.b32  	%r398, %r397, 1;
	setp.eq.s32 	%p17, %r193, 0;
	sub.f32 	%f211, %f210, %f209;
	setp.eq.s32 	%p23, %r200, 0;
	sub.f32 	%f245, %f210, %f243;
	setp.eq.s32 	%p29, %r211, 0;
	sub.f32 	%f280, %f210, %f278;
	setp.eq.s32 	%p35, %r218, 0;
	sub.f32 	%f314, %f210, %f312;
	setp.eq.s32 	%p41, %r229, 0;
	sub.f32 	%f349, %f210, %f347;
	setp.eq.s32 	%p47, %r236, 0;
	sub.f32 	%f383, %f210, %f381;
	setp.eq.s32 	%p53, %r247, 0;
	sub.f32 	%f418, %f210, %f416;
	setp.eq.s32 	%p59, %r254, 0;
	sub.f32 	%f452, %f210, %f450;
	setp.eq.s32 	%p77, %r271, 0;
	neg.f32 	%f501, %f499;
	add.s32 	%r272, %r269, 1;
	cvt.rzi.f32.f32 	%f506, %f884;
	setp.eq.s32 	%p97, %r294, 0;
	neg.f32 	%f553, %f551;
	add.s32 	%r295, %r292, 1;
	cvt.rzi.f32.f32 	%f558, %f888;
	selp.f32 	%f605, %f603, %f602, %p117;
	selp.f32 	%f607, %f604, %f606, %p118;
	and.b32  	%r318, %r317, 2;
	setp.eq.f32 	%p120, %f611, %f892;
	mul.f32 	%f612, %f892, 0f00000000;
	selp.f32 	%f656, %f654, %f653, %p137;
	selp.f32 	%f658, %f655, %f657, %p138;
	and.b32  	%r349, %r348, 2;
	setp.eq.f32 	%p140, %f662, %f896;
	mul.f32 	%f663, %f896, 0f00000000;
	setp.eq.s32 	%p159, %r363, 0;
	neg.f32 	%f710, %f708;
	add.s32 	%r364, %r361, 1;
	cvt.rzi.f32.f32 	%f715, %f908;
	setp.eq.s32 	%p179, %r385, 0;
	neg.f32 	%f761, %f759;
	add.s32 	%r386, %r383, 1;
	cvt.rzi.f32.f32 	%f766, %f912;
	fma.rn.f32 	%f809, %f807, %f801, 0f3F800000;
	fma.rn.f32 	%f810, %f800, 0f40490FDB, %f808;
	setp.eq.b32 	%p200, %r398, 1;
	selp.f32 	%f212, %f209, %f211, %p17;
	selp.f32 	%f246, %f243, %f245, %p23;
	selp.f32 	%f281, %f278, %f280, %p29;
	selp.f32 	%f315, %f312, %f314, %p35;
	selp.f32 	%f350, %f347, %f349, %p41;
	selp.f32 	%f384, %f381, %f383, %p47;
	selp.f32 	%f419, %f416, %f418, %p53;
	selp.f32 	%f453, %f450, %f452, %p59;
	selp.f32 	%f500, %f498, %f497, %p76;
	selp.f32 	%f502, %f499, %f501, %p77;
	and.b32  	%r273, %r272, 2;
	setp.eq.f32 	%p79, %f506, %f884;
	mul.f32 	%f507, %f884, 0f00000000;
	selp.f32 	%f552, %f550, %f549, %p96;
	selp.f32 	%f554, %f551, %f553, %p97;
	and.b32  	%r296, %r295, 2;
	setp.eq.f32 	%p99, %f558, %f888;
	mul.f32 	%f559, %f888, 0f00000000;
	setp.eq.s32 	%p119, %r318, 0;
	sub.f32 	%f609, %f210, %f605;
	selp.f32 	%f92, %f612, %f607, %p120;
	abs.f32 	%f613, %f892;
	setp.eq.s32 	%p139, %r349, 0;
	sub.f32 	%f660, %f210, %f656;
	selp.f32 	%f664, %f663, %f658, %p140;
	abs.f32 	%f665, %f896;
	selp.f32 	%f709, %f707, %f706, %p158;
	selp.f32 	%f711, %f708, %f710, %p159;
	and.b32  	%r365, %r364, 2;
	setp.eq.f32 	%p161, %f715, %f908;
	mul.f32 	%f716, %f908, 0f00000000;
	selp.f32 	%f760, %f758, %f757, %p178;
	selp.f32 	%f762, %f759, %f761, %p179;
	and.b32  	%r387, %r386, 2;
	setp.eq.f32 	%p181, %f766, %f912;
	mul.f32 	%f767, %f912, 0f00000000;
	selp.f32 	%f811, %f809, %f810, %p200;
	and.b32  	%r399, %r397, 2;
	mul.f32 	%f2, %f212, %f212;
	mul.f32 	%f7, %f246, %f246;
	mul.f32 	%f11, %f281, %f281;
	mul.f32 	%f16, %f315, %f315;
	mul.f32 	%f20, %f350, %f350;
	mul.f32 	%f25, %f384, %f384;
	mul.f32 	%f29, %f419, %f419;
	mul.f32 	%f34, %f453, %f453;
	setp.eq.s32 	%p78, %r273, 0;
	sub.f32 	%f504, %f210, %f500;
	selp.f32 	%f55, %f507, %f502, %p79;
	abs.f32 	%f508, %f884;
	setp.eq.s32 	%p98, %r296, 0;
	sub.f32 	%f556, %f210, %f552;
	selp.f32 	%f560, %f559, %f554, %p99;
	abs.f32 	%f561, %f888;
	selp.f32 	%f610, %f605, %f609, %p119;
	setp.gt.f32 	%p121, %f613, 0f4B800000;
	add.f32 	%f614, %f92, 0f3F800000;
	selp.f32 	%f661, %f656, %f660, %p139;
	setp.gt.f32 	%p141, %f665, 0f4B800000;
	add.f32 	%f666, %f664, 0f3F800000;
	setp.eq.s32 	%p160, %r365, 0;
	sub.f32 	%f713, %f210, %f709;
	selp.f32 	%f161, %f716, %f711, %p161;
	abs.f32 	%f717, %f908;
	setp.eq.s32 	%p180, %r387, 0;
	sub.f32 	%f764, %f210, %f760;
	selp.f32 	%f768, %f767, %f762, %p181;
	abs.f32 	%f769, %f912;
	setp.eq.s32 	%p201, %r399, 0;
	neg.f32 	%f813, %f811;
	add.s32 	%r400, %r397, 1;
	cvt.rzi.f32.f32 	%f818, %f900;
	mul.f32 	%f216, %f2, 0f3C0AF64E;
	mul.f32 	%f250, %f7, 0f3C0AF64E;
	mul.f32 	%f285, %f11, 0f3C0AF64E;
	mul.f32 	%f319, %f16, 0f3C0AF64E;
	mul.f32 	%f354, %f20, 0f3C0AF64E;
	mul.f32 	%f388, %f25, 0f3C0AF64E;
	mul.f32 	%f423, %f29, 0f3C0AF64E;
	mul.f32 	%f456, %f34, 0f3C0AF64E;
	selp.f32 	%f505, %f500, %f504, %p78;
	setp.gt.f32 	%p80, %f508, 0f4B800000;
	add.f32 	%f509, %f55, 0f3F800000;
	selp.f32 	%f557, %f552, %f556, %p98;
	setp.gt.f32 	%p100, %f561, 0f4B800000;
	add.f32 	%f562, %f560, 0f3F800000;
	selp.f32 	%f93, %f614, %f610, %p121;
	selp.f32 	%f667, %f666, %f661, %p141;
	selp.f32 	%f714, %f709, %f713, %p160;
	setp.gt.f32 	%p162, %f717, 0f4B800000;
	add.f32 	%f718, %f161, 0f3F800000;
	selp.f32 	%f765, %f760, %f764, %p180;
	setp.gt.f32 	%p182, %f769, 0f4B800000;
	add.f32 	%f770, %f768, 0f3F800000;
	selp.f32 	%f812, %f810, %f809, %p200;
	selp.f32 	%f814, %f811, %f813, %p201;
	and.b32  	%r401, %r400, 2;
	setp.eq.f32 	%p203, %f818, %f900;
	mul.f32 	%f819, %f900, 0f00000000;
	mul.f32 	%f6, %f216, %f874;
	mul.f32 	%f251, %f250, %f875;
	mul.f32 	%f15, %f285, %f876;
	mul.f32 	%f320, %f319, %f877;
	mul.f32 	%f24, %f354, %f878;
	mul.f32 	%f389, %f388, %f879;
	mul.f32 	%f33, %f423, %f880;
	mul.f32 	%f457, %f456, %f881;
	selp.f32 	%f56, %f509, %f505, %p80;
	selp.f32 	%f563, %f562, %f557, %p100;
	mov.b32 	%r332, %f667;
	mov.b32 	%r331, %f93;
	mov.b32 	%r338, %f664;
	mov.b32 	%r337, %f92;
	selp.f32 	%f162, %f718, %f714, %p162;
	selp.f32 	%f771, %f770, %f765, %p182;
	setp.eq.s32 	%p202, %r401, 0;
	sub.f32 	%f816, %f210, %f812;
	selp.f32 	%f129, %f819, %f814, %p203;
	abs.f32 	%f820, %f900;
	mov.b32 	%r203, %f251;
	mov.b32 	%r202, %f6;
	mov.b32 	%r221, %f320;
	mov.b32 	%r220, %f15;
	mov.b32 	%r239, %f389;
	mov.b32 	%r238, %f24;
	mov.b32 	%r257, %f457;
	mov.b32 	%r256, %f33;
	mov.b32 	%r285, %f563;
	mov.b32 	%r284, %f56;
	mov.b32 	%r288, %f560;
	mov.b32 	%r287, %f55;
	xor.b32  	%r335, %r338, -2147483648;
	xor.b32  	%r334, %r337, -2147483648;
	mov.b32 	%r376, %f771;
	mov.b32 	%r375, %f162;
	mov.b32 	%r379, %f768;
	mov.b32 	%r378, %f161;
	selp.f32 	%f817, %f812, %f816, %p202;
	setp.gt.f32 	%p204, %f820, 0f4B800000;
	add.f32 	%f821, %f129, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r9, %r4, 16;
	// begin inline asm
	cvt.rn.f16x2.f32 %r201, %r203, %r202;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r219, %r221, %r220;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r237, %r239, %r238;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r255, %r257, %r256;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r332, %r331;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r339, %r332, %r331;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r374, %r376, %r375;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r377, %r379, %r378;
	// end inline asm
	selp.f32 	%f130, %f821, %f817, %p204;
	add.f32 	%f842, %f904, %f904;
	mov.b32 	%r420, %f842;
	and.b32  	%r421, %r420, -2147483648;
	or.b32  	%r422, %r421, 1056964608;
	mov.b32 	%f843, %r422;
	add.f32 	%f844, %f842, %f843;
	cvt.rzi.f32.f32 	%f845, %f844;
	abs.f32 	%f846, %f842;
	setp.gt.f32 	%p217, %f846, 0f4B000000;
	selp.f32 	%f847, %f842, %f845, %p217;
	cvt.rzi.f32.f32 	%f848, %f842;
	setp.lt.f32 	%p218, %f846, 0f3F000000;
	selp.f32 	%f849, %f848, %f847, %p218;
	cvt.rzi.s32.f32 	%r423, %f849;
	fma.rn.f32 	%f850, %f849, 0fBF000000, %f904;
	mul.f32 	%f851, %f850, %f850;
	fma.rn.f32 	%f852, %f851, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f853, %f851, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f854, %f852, %f851, 0fC0A55DF6;
	fma.rn.f32 	%f855, %f853, %f851, 0f4081E0CF;
	fma.rn.f32 	%f856, %f851, %f850, 0f00000000;
	fma.rn.f32 	%f857, %f855, %f851, 0fC09DE9E6;
	fma.rn.f32 	%f858, %f854, %f856, 0f00000000;
	fma.rn.f32 	%f859, %f857, %f851, 0f3F800000;
	fma.rn.f32 	%f860, %f850, 0f40490FDB, %f858;
	and.b32  	%r424, %r423, 1;
	setp.eq.b32 	%p219, %r424, 1;
	selp.f32 	%f861, %f859, %f860, %p219;
	selp.f32 	%f862, %f860, %f859, %p219;
	and.b32  	%r425, %r423, 2;
	setp.eq.s32 	%p220, %r425, 0;
	neg.f32 	%f863, %f861;
	selp.f32 	%f864, %f861, %f863, %p220;
	add.s32 	%r426, %r423, 1;
	and.b32  	%r427, %r426, 2;
	setp.eq.s32 	%p221, %r427, 0;
	sub.f32 	%f866, %f210, %f862;
	selp.f32 	%f867, %f862, %f866, %p221;
	cvt.rzi.f32.f32 	%f868, %f904;
	setp.eq.f32 	%p222, %f868, %f904;
	mul.f32 	%f869, %f904, 0f00000000;
	selp.f32 	%f870, %f869, %f864, %p222;
	abs.f32 	%f871, %f904;
	setp.gt.f32 	%p223, %f871, 0f4B800000;
	add.f32 	%f872, %f870, 0f3F800000;
	selp.f32 	%f873, %f872, %f867, %p223;
	mov.b32 	%r410, %f873;
	mov.b32 	%r409, %f130;
	// begin inline asm
	cvt.rn.f16x2.f32 %r408, %r410, %r409;
	// end inline asm
	mov.b32 	%r416, %f870;
	xor.b32  	%r413, %r416, -2147483648;
	mov.b32 	%r415, %f129;
	xor.b32  	%r412, %r415, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r411, %r413, %r412;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r414, %r416, %r415;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r417, %r410, %r409;
	// end inline asm
	shl.b32 	%r429, %r5, 12;
	and.b32  	%r430, %r10, 28;
	shl.b32 	%r431, %r3, 5;
	and.b32  	%r432, %r431, 96;
	or.b32  	%r95, %r430, %r432;
	and.b32  	%r96, %r431, 128;
	or.b32  	%r433, %r9, %r1;
	or.b32  	%r97, %r433, %r11;
	or.b32  	%r434, %r95, %r96;
	or.b32  	%r98, %r434, %r429;
	and.b32  	%r99, %r4, 8;
	and.b32  	%r435, %r1, 1;
	mul.lo.s32 	%r436, %r435, 1040;
	shr.u32 	%r437, %r1, 1;
	bfe.u32 	%r438, %r1, 1, 1;
	bfe.u32 	%r439, %r1, 2, 1;
	shr.u32 	%r440, %r1, 3;
	shl.b32 	%r441, %r4, 4;
	or.b32  	%r442, %r99, %r441;
	shr.u32 	%r443, %r442, 2;
	and.b32  	%r444, %r443, 30;
	mad.lo.s32 	%r445, %r21, 65, %r436;
	mad.lo.s32 	%r446, %r440, 130, %r445;
	mad.lo.s32 	%r447, %r438, 520, %r446;
	mad.lo.s32 	%r448, %r439, 260, %r447;
	add.s32 	%r449, %r448, %r444;
	mul.wide.u32 	%rd74, %r449, 4;
	mov.u64 	%rd75, shmem;
	add.s64 	%rd5, %rd75, %rd74;
	add.s32 	%r450, %r449, 32;
	mul.wide.u32 	%rd76, %r450, 4;
	add.s64 	%rd6, %rd75, %rd76;
	add.s32 	%r451, %r449, 1;
	mul.wide.u32 	%rd77, %r451, 4;
	add.s64 	%rd7, %rd75, %rd77;
	add.s32 	%r452, %r449, 33;
	mul.wide.u32 	%rd78, %r452, 4;
	add.s64 	%rd8, %rd75, %rd78;
	and.b32  	%r453, %r2, 32;
	mul.lo.s32 	%r454, %r18, 65;
	mul.lo.s32 	%r455, %r23, 1040;
	mul.lo.s32 	%r456, %r21, 520;
	mul.lo.s32 	%r457, %r20, 260;
	mul.lo.s32 	%r458, %r19, 130;
	or.b32  	%r459, %r453, %r437;
	add.s32 	%r460, %r459, %r456;
	add.s32 	%r461, %r460, %r458;
	add.s32 	%r462, %r461, %r454;
	add.s32 	%r463, %r462, %r455;
	add.s32 	%r464, %r463, %r457;
	or.b32  	%r465, %r437, 8;
	add.s32 	%r466, %r456, %r453;
	add.s32 	%r467, %r466, %r458;
	add.s32 	%r468, %r467, %r465;
	add.s32 	%r469, %r468, %r454;
	add.s32 	%r470, %r469, %r455;
	add.s32 	%r471, %r470, %r457;
	or.b32  	%r472, %r437, 16;
	add.s32 	%r473, %r467, %r472;
	add.s32 	%r474, %r473, %r454;
	add.s32 	%r475, %r474, %r455;
	add.s32 	%r476, %r475, %r457;
	or.b32  	%r477, %r437, 24;
	add.s32 	%r478, %r467, %r477;
	add.s32 	%r479, %r478, %r454;
	add.s32 	%r480, %r479, %r455;
	add.s32 	%r481, %r480, %r457;
	or.b32  	%r482, %r15, %r14;
	or.b32  	%r483, %r482, %r12;
	or.b32  	%r484, %r483, %r11;
	shr.u32 	%r485, %r484, 1;
	mul.lo.s32 	%r486, %r485, 65;
	add.s32 	%r487, %r459, %r486;
	or.b32  	%r488, %r465, %r453;
	add.s32 	%r489, %r488, %r486;
	or.b32  	%r490, %r472, %r453;
	add.s32 	%r491, %r490, %r486;
	or.b32  	%r492, %r477, %r453;
	add.s32 	%r493, %r492, %r486;
	shl.b32 	%r494, %r1, 1;
	or.b32  	%r495, %r21, %r494;
	mul.lo.s32 	%r496, %r495, 65;
	add.s32 	%r497, %r444, %r496;
	mul.wide.u32 	%rd79, %r497, 4;
	add.s64 	%rd9, %rd75, %rd79;
	cvt.u64.u32 	%rd80, %r444;
	cvt.u64.u32 	%rd81, %r496;
	add.s64 	%rd82, %rd81, %rd80;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd10, %rd75, %rd83;
	shl.b32 	%r498, %r7, 18;
	add.s32 	%r499, %r498, -786432;
	shl.b32 	%r500, %r3, 3;
	and.b32  	%r501, %r500, 960;
	or.b32  	%r502, %r501, %r22;
	shl.b32 	%r503, %r1, 10;
	shl.b32 	%r504, %r502, 8;
	or.b32  	%r100, %r503, %r504;
	cvt.s64.s32 	%rd11, %r499;
	mul.wide.u32 	%rd12, %r493, 4;
	mul.wide.u32 	%rd13, %r491, 4;
	mul.wide.u32 	%rd14, %r489, 4;
	mul.wide.u32 	%rd15, %r487, 4;
	mul.wide.u32 	%rd16, %r481, 4;
	mul.wide.u32 	%rd17, %r476, 4;
	mul.wide.u32 	%rd18, %r471, 4;
	mul.wide.u32 	%rd19, %r464, 4;
	setp.eq.s32 	%p225, %r99, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7789, %r7776;
	mov.u32 	%r7814, %r7776;
	mov.u32 	%r7813, %r7776;
	mov.u32 	%r7812, %r7776;
	mov.u32 	%r7811, %r7776;
	mov.u32 	%r7810, %r7776;
	mov.u32 	%r7809, %r7776;
	mov.u32 	%r7808, %r7776;
	mov.u32 	%r7807, %r7776;
	mov.u32 	%r7806, %r7776;
	mov.u32 	%r7805, %r7776;
	mov.u32 	%r7804, %r7776;
	mov.u32 	%r7803, %r7776;
	bra.uni 	LBB0_117;
LBB0_121:                               // %L29574
                                        //   in Loop: Header=BB0_117 Depth=1
	setp.ne.s32 	%p236, %r7789, 130816;
	add.s32 	%r7789, %r7789, 256;
	add.s32 	%r7773, %r7789, %r5;
	setp.gt.s32 	%p237, %r6, %r7773;
	and.pred  	%p238, %p236, %p237;
	@%p238 bra 	LBB0_117;
	bra.uni 	LBB0_122;
LBB0_117:                               // %L1400
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r522, %r97, %r7789;
	shl.b32 	%r523, %r522, 12;
	add.s32 	%r524, %r98, %r523;
	shr.s32 	%r525, %r524, 31;
	shr.u32 	%r526, %r525, 3;
	add.s32 	%r527, %r524, %r526;
	shr.s32 	%r528, %r527, 29;
	setp.lt.s32 	%p226, %r524, 0;
	and.b32  	%r529, %r527, -536870912;
	setp.ne.s32 	%p227, %r529, %r524;
	and.pred  	%p228, %p226, %p227;
	selp.u32 	%r530, 1, 0, %p228;
	sub.s32 	%r531, %r530, %r528;
	shl.b32 	%r532, %r531, 29;
	add.s32 	%r533, %r532, %r524;
	mul.wide.s32 	%rd85, %r533, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r534, %r535, %r536, %r537}, [%rd86];
	selp.b32 	%r538, %r536, %r534, %p225;
	shfl.sync.bfly.b32	%r539, %r538, 8, 31, -1;
	selp.b32 	%r506, %r534, %r539, %p225;
	selp.b32 	%r507, %r539, %r536, %p225;
	selp.b32 	%r540, %r537, %r535, %p225;
	shfl.sync.bfly.b32	%r541, %r540, 8, 31, -1;
	selp.b32 	%r514, %r535, %r541, %p225;
	selp.b32 	%r515, %r541, %r537, %p225;
	mov.u32 	%r516, 21520;
	// begin inline asm
	prmt.b32 %r505, %r506, %r507, %r516;
	// end inline asm
	mov.u32 	%r520, 30258;
	// begin inline asm
	prmt.b32 %r509, %r506, %r507, %r520;
	// end inline asm
	// begin inline asm
	prmt.b32 %r513, %r514, %r515, %r516;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r514, %r515, %r520;
	// end inline asm
	st.shared.u32 	[%rd5], %r505;
	st.shared.u32 	[%rd6], %r509;
	st.shared.u32 	[%rd7], %r513;
	st.shared.u32 	[%rd8], %r517;
	bar.sync 	0;
	mov.u32 	%r7802, 256;
	mov.u64 	%rd109, %rd75;
LBB0_118:                               // %L4534
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd87, %rd109, %rd19;
	ld.shared.u32 	%r7726, [%rd87];
	add.s64 	%rd88, %rd109, %rd18;
	ld.shared.u32 	%r7727, [%rd88];
	add.s64 	%rd89, %rd109, %rd17;
	ld.shared.u32 	%r7728, [%rd89];
	add.s64 	%rd90, %rd109, %rd16;
	ld.shared.u32 	%r7729, [%rd90];
	// begin inline asm
	mov.b32 %r547, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r558, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r546, %r7726, -2004318072;
	mov.u32 	%r545, 983055;
	// begin inline asm
	lop3.b32 %r544, %r545, %r546, %r547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r548, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r549, %r547, %r548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r552, %r544, %r549;
	// end inline asm
	mov.u32 	%r556, 15728880;
	// begin inline asm
	lop3.b32 %r555, %r556, %r546, %r558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r560, %r558, %r559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r563, %r555, %r560;
	// end inline asm
	shr.u32 	%r568, %r546, 8;
	// begin inline asm
	lop3.b32 %r566, %r545, %r568, %r547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r571, %r547, %r570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r574, %r566, %r571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r577, %r556, %r568, %r558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r582, %r558, %r581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r585, %r577, %r582;
	// end inline asm
	// begin inline asm
	mov.b32 %r593, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r604, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r592, %r7727, -2004318072;
	// begin inline asm
	lop3.b32 %r590, %r545, %r592, %r593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r594, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r595, %r593, %r594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r598, %r590, %r595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r601, %r556, %r592, %r604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r605, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r606, %r604, %r605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r609, %r601, %r606;
	// end inline asm
	shr.u32 	%r614, %r592, 8;
	// begin inline asm
	lop3.b32 %r612, %r545, %r614, %r593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r617, %r593, %r616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r620, %r612, %r617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r623, %r556, %r614, %r604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r627, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r628, %r604, %r627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r631, %r623, %r628;
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r638, %r7728, -2004318072;
	// begin inline asm
	lop3.b32 %r636, %r545, %r638, %r639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r640, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r641, %r639, %r640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r644, %r636, %r641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r647, %r556, %r638, %r650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r651, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r652, %r650, %r651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r655, %r647, %r652;
	// end inline asm
	shr.u32 	%r660, %r638, 8;
	// begin inline asm
	lop3.b32 %r658, %r545, %r660, %r639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r662, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r663, %r639, %r662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r666, %r658, %r663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r669, %r556, %r660, %r650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r674, %r650, %r673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r677, %r669, %r674;
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r696, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r684, %r7729, -2004318072;
	// begin inline asm
	lop3.b32 %r682, %r545, %r684, %r685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r686, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r687, %r685, %r686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r690, %r682, %r687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r693, %r556, %r684, %r696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r697, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r698, %r696, %r697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r701, %r693, %r698;
	// end inline asm
	shr.u32 	%r706, %r684, 8;
	// begin inline asm
	lop3.b32 %r704, %r545, %r706, %r685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r709, %r685, %r708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r712, %r704, %r709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r715, %r556, %r706, %r696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r719, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r720, %r696, %r719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r723, %r715, %r720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r726, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r728, %r726, %r552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r731, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r733, %r731, %r563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r736, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r738, %r736, %r574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r741, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r743, %r741, %r585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r746, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r748, %r746, %r598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r751, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r753, %r751, %r609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r758, %r756, %r620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r763, %r761, %r631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r766, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r768, %r766, %r644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r771, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r773, %r771, %r655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r776, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r778, %r776, %r666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r781, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r783, %r781, %r677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r786, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r788, %r786, %r690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r791, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r793, %r791, %r701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r796, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r798, %r796, %r712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r801, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r803, %r801, %r723;
	// end inline asm
	// begin inline asm
	mov.b32 %r811, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r822, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r810, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r808, %r545, %r810, %r811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r811, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r819, %r556, %r810, %r822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r824, %r822, %r823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r827, %r819, %r824;
	// end inline asm
	shr.u32 	%r832, %r810, 8;
	// begin inline asm
	lop3.b32 %r830, %r545, %r832, %r811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r834, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r835, %r811, %r834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r838, %r830, %r835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r841, %r556, %r832, %r822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r846, %r822, %r845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r849, %r841, %r846;
	// end inline asm
	// begin inline asm
	mov.b32 %r857, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r868, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r856, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r854, %r545, %r856, %r857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r859, %r857, %r858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r862, %r854, %r859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r865, %r556, %r856, %r868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r869, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r870, %r868, %r869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r873, %r865, %r870;
	// end inline asm
	shr.u32 	%r878, %r856, 8;
	// begin inline asm
	lop3.b32 %r876, %r545, %r878, %r857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r881, %r857, %r880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r884, %r876, %r881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r887, %r556, %r878, %r868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r891, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r892, %r868, %r891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r895, %r887, %r892;
	// end inline asm
	// begin inline asm
	mov.b32 %r903, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r902, %r7805, -2004318072;
	// begin inline asm
	lop3.b32 %r900, %r545, %r902, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r905, %r903, %r904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r908, %r900, %r905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r911, %r556, %r902, %r914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r916, %r914, %r915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r919, %r911, %r916;
	// end inline asm
	shr.u32 	%r924, %r902, 8;
	// begin inline asm
	lop3.b32 %r922, %r545, %r924, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r927, %r903, %r926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r930, %r922, %r927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r933, %r556, %r924, %r914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r938, %r914, %r937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r941, %r933, %r938;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r948, %r7806, -2004318072;
	// begin inline asm
	lop3.b32 %r946, %r545, %r948, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r951, %r949, %r950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r954, %r946, %r951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r957, %r556, %r948, %r960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r960, %r961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r965, %r957, %r962;
	// end inline asm
	shr.u32 	%r970, %r948, 8;
	// begin inline asm
	lop3.b32 %r968, %r545, %r970, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r973, %r949, %r972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r976, %r968, %r973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r979, %r556, %r970, %r960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r984, %r960, %r983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r987, %r979, %r984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r990, %r201, %r816, %r728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r994, %r201, %r827, %r733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r998, %r201, %r838, %r738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1002, %r201, %r849, %r743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1006, %r201, %r862, %r748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1010, %r201, %r873, %r753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1014, %r201, %r884, %r758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1018, %r201, %r895, %r763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1022, %r201, %r908, %r768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1026, %r201, %r919, %r773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1030, %r201, %r930, %r778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1034, %r201, %r941, %r783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1038, %r201, %r954, %r788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1042, %r201, %r965, %r793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1046, %r201, %r976, %r798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1050, %r201, %r987, %r803;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1058, %r7807, -2004318072;
	// begin inline asm
	lop3.b32 %r1056, %r545, %r1058, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1059, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1067, %r556, %r1058, %r1070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1070, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	shr.u32 	%r1080, %r1058, 8;
	// begin inline asm
	lop3.b32 %r1078, %r545, %r1080, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1083, %r1059, %r1082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1086, %r1078, %r1083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1089, %r556, %r1080, %r1070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1070, %r1093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1097, %r1089, %r1094;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1104, %r7808, -2004318072;
	// begin inline asm
	lop3.b32 %r1102, %r545, %r1104, %r1105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1105, %r1106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1110, %r1102, %r1107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1113, %r556, %r1104, %r1116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1116, %r1117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1121, %r1113, %r1118;
	// end inline asm
	shr.u32 	%r1126, %r1104, 8;
	// begin inline asm
	lop3.b32 %r1124, %r545, %r1126, %r1105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1128, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1129, %r1105, %r1128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1132, %r1124, %r1129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1135, %r556, %r1126, %r1116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1139, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1140, %r1116, %r1139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1143, %r1135, %r1140;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1150, %r7809, -2004318072;
	// begin inline asm
	lop3.b32 %r1148, %r545, %r1150, %r1151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1153, %r1151, %r1152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1156, %r1148, %r1153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1159, %r556, %r1150, %r1162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1164, %r1162, %r1163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1167, %r1159, %r1164;
	// end inline asm
	shr.u32 	%r1172, %r1150, 8;
	// begin inline asm
	lop3.b32 %r1170, %r545, %r1172, %r1151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1174, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1175, %r1151, %r1174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1178, %r1170, %r1175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1181, %r556, %r1172, %r1162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1186, %r1162, %r1185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1189, %r1181, %r1186;
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1208, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1196, %r7810, -2004318072;
	// begin inline asm
	lop3.b32 %r1194, %r545, %r1196, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1199, %r1197, %r1198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1202, %r1194, %r1199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1205, %r556, %r1196, %r1208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1210, %r1208, %r1209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1213, %r1205, %r1210;
	// end inline asm
	shr.u32 	%r1218, %r1196, 8;
	// begin inline asm
	lop3.b32 %r1216, %r545, %r1218, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1221, %r1197, %r1220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1224, %r1216, %r1221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1227, %r556, %r1218, %r1208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1231, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1232, %r1208, %r1231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1235, %r1227, %r1232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1238, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1240, %r1238, %r1064, %r990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1246, %r1244, %r1075, %r994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1252, %r1250, %r1086, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1258, %r1256, %r1097, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1264, %r1262, %r1110, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1268, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1270, %r1268, %r1121, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1276, %r1274, %r1132, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1282, %r1280, %r1143, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1288, %r1286, %r1156, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1294, %r1292, %r1167, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1298, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1300, %r1298, %r1178, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1306, %r1304, %r1189, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1312, %r1310, %r1202, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1318, %r1316, %r1213, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1324, %r1322, %r1224, %r1046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1328, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1330, %r1328, %r1235, %r1050;
	// end inline asm
	// begin inline asm
	mov.b32 %r1339, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1350, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1338, %r7811, -2004318072;
	// begin inline asm
	lop3.b32 %r1336, %r545, %r1338, %r1339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1341, %r1339, %r1340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1344, %r1336, %r1341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1347, %r556, %r1338, %r1350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1351, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1352, %r1350, %r1351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1355, %r1347, %r1352;
	// end inline asm
	shr.u32 	%r1360, %r1338, 8;
	// begin inline asm
	lop3.b32 %r1358, %r545, %r1360, %r1339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1362, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1363, %r1339, %r1362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1366, %r1358, %r1363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1369, %r556, %r1360, %r1350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1373, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1374, %r1350, %r1373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1377, %r1369, %r1374;
	// end inline asm
	// begin inline asm
	mov.b32 %r1385, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1396, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1384, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r1382, %r545, %r1384, %r1385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1386, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1387, %r1385, %r1386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1390, %r1382, %r1387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1393, %r556, %r1384, %r1396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1398, %r1396, %r1397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1401, %r1393, %r1398;
	// end inline asm
	shr.u32 	%r1406, %r1384, 8;
	// begin inline asm
	lop3.b32 %r1404, %r545, %r1406, %r1385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1408, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1409, %r1385, %r1408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1412, %r1404, %r1409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1415, %r556, %r1406, %r1396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1419, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1420, %r1396, %r1419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1423, %r1415, %r1420;
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1430, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r1428, %r545, %r1430, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1433, %r1431, %r1432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1436, %r1428, %r1433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1439, %r556, %r1430, %r1442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1444, %r1442, %r1443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1447, %r1439, %r1444;
	// end inline asm
	shr.u32 	%r1452, %r1430, 8;
	// begin inline asm
	lop3.b32 %r1450, %r545, %r1452, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1455, %r1431, %r1454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1458, %r1450, %r1455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1461, %r556, %r1452, %r1442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1466, %r1442, %r1465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1469, %r1461, %r1466;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1476, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r1474, %r545, %r1476, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1477, %r1478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1482, %r1474, %r1479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1485, %r556, %r1476, %r1488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1488, %r1489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1493, %r1485, %r1490;
	// end inline asm
	shr.u32 	%r1498, %r1476, 8;
	// begin inline asm
	lop3.b32 %r1496, %r545, %r1498, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1501, %r1477, %r1500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1504, %r1496, %r1501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1507, %r556, %r1498, %r1488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1512, %r1488, %r1511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1515, %r1507, %r1512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1589, %r237, %r1344, %r1240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1586, %r237, %r1355, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1598, %r237, %r1366, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1595, %r237, %r1377, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1607, %r237, %r1390, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1604, %r237, %r1401, %r1270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1616, %r237, %r1412, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1613, %r237, %r1423, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1625, %r237, %r1436, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1622, %r237, %r1447, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1634, %r237, %r1458, %r1300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1631, %r237, %r1469, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1643, %r237, %r1482, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1640, %r237, %r1493, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1652, %r237, %r1504, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1649, %r237, %r1515, %r1330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1582, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1584, %r1582, %r1586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1587, %r283, %r1589, %r1584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1591, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1593, %r1591, %r1595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1596, %r283, %r1598, %r1593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1600, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1602, %r1600, %r1604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r283, %r1607, %r1602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1609, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1611, %r1609, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1614, %r283, %r1616, %r1611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1618, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1620, %r1618, %r1622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r283, %r1625, %r1620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1627, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1629, %r1627, %r1631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r283, %r1634, %r1629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1636, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1638, %r1636, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r283, %r1643, %r1638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1645, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1647, %r1645, %r1649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1650, %r283, %r1652, %r1647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1654, %r286, %r1589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1657, %r283, %r1586, %r1654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1661, %r286, %r1598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1664, %r283, %r1595, %r1661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1668, %r286, %r1607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1671, %r283, %r1604, %r1668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1675, %r286, %r1616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1678, %r283, %r1613, %r1675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1682, %r286, %r1625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1685, %r283, %r1622, %r1682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1689, %r286, %r1634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r283, %r1631, %r1689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1696, %r286, %r1643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1699, %r283, %r1640, %r1696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1703, %r286, %r1652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1706, %r283, %r1649, %r1703;
	// end inline asm
	mov.u32 	%r1718, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1797, %r1794}, {%r330, %r336, %r333, %r339}, {%r1587, %r1657}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1806, %r1803}, {%r330, %r336, %r333, %r339}, {%r1596, %r1664}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1815, %r1812}, {%r330, %r336, %r333, %r339}, {%r1605, %r1671}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1824, %r1821}, {%r330, %r336, %r333, %r339}, {%r1614, %r1678}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1833, %r1830}, {%r330, %r336, %r333, %r339}, {%r1623, %r1685}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1842, %r1839}, {%r330, %r336, %r333, %r339}, {%r1632, %r1692}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1851, %r1848}, {%r330, %r336, %r333, %r339}, {%r1641, %r1699}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1860, %r1857}, {%r330, %r336, %r333, %r339}, {%r1650, %r1706}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1790, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1792, %r1790, %r1794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r374, %r1797, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1799, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1801, %r1799, %r1803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r374, %r1806, %r1801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1808, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1810, %r1808, %r1812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1813, %r374, %r1815, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1817, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1819, %r1817, %r1821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r374, %r1824, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1826, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1828, %r1826, %r1830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r374, %r1833, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1835, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1837, %r1835, %r1839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r374, %r1842, %r1837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1844, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1846, %r1844, %r1848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1849, %r374, %r1851, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1853, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1855, %r1853, %r1857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r374, %r1860, %r1855;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1862, %r377, %r1797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1865, %r374, %r1794, %r1862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1869, %r377, %r1806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1872, %r374, %r1803, %r1869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1876, %r377, %r1815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r374, %r1812, %r1876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1883, %r377, %r1824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r374, %r1821, %r1883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1890, %r377, %r1833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1893, %r374, %r1830, %r1890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1897, %r377, %r1842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1900, %r374, %r1839, %r1897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1904, %r377, %r1851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1907, %r374, %r1848, %r1904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1911, %r377, %r1860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1914, %r374, %r1857, %r1911;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1918, %r1919}, {%r408, %r414, %r411, %r417}, {%r1795, %r1865}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1928, %r1929}, {%r408, %r414, %r411, %r417}, {%r1804, %r1872}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1938, %r1939}, {%r408, %r414, %r411, %r417}, {%r1813, %r1879}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1948, %r1949}, {%r408, %r414, %r411, %r417}, {%r1822, %r1886}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1958, %r1959}, {%r408, %r414, %r411, %r417}, {%r1831, %r1893}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1968, %r1969}, {%r408, %r414, %r411, %r417}, {%r1840, %r1900}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1978, %r1979}, {%r408, %r414, %r411, %r417}, {%r1849, %r1907}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1988, %r1989}, {%r408, %r414, %r411, %r417}, {%r1858, %r1914}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1998, %r16, %r1918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2001, %r16, %r1919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2004, %r16, %r1928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2007, %r16, %r1929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2010, %r16, %r1938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2013, %r16, %r1939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2016, %r16, %r1948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2019, %r16, %r1949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2022, %r16, %r1958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2025, %r16, %r1959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2028, %r16, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2031, %r16, %r1969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2034, %r16, %r1978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2037, %r16, %r1979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2040, %r16, %r1988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2043, %r16, %r1989;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2047, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2048, %r1998, %r2046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2051, %r2048, %r2047;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2056, %r2001, %r2054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2059, %r2056, %r2055;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2064, %r2004, %r2062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2067, %r2064, %r2063;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2071, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2072, %r2007, %r2070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2075, %r2072, %r2071;
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2080, %r2010, %r2078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2083, %r2080, %r2079;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2088, %r2013, %r2086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2091, %r2088, %r2087;
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2096, %r2016, %r2094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2099, %r2096, %r2095;
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2104, %r2019, %r2102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2107, %r2104, %r2103;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2112, %r2022, %r2110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2115, %r2112, %r2111;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2120, %r2025, %r2118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2123, %r2120, %r2119;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2128, %r2028, %r2126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2131, %r2128, %r2127;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2136, %r2031, %r2134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2139, %r2136, %r2135;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2144, %r2034, %r2142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2147, %r2144, %r2143;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2152, %r2037, %r2150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2155, %r2152, %r2151;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2160, %r2040, %r2158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2163, %r2160, %r2159;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2168, %r2043, %r2166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2171, %r2168, %r2167;
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2176, %r2177, %r2175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2051, %r2176;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2183, %r2177, %r2182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2186, %r2059, %r2183;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2177, %r2189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2067, %r2190;
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2197, %r2177, %r2196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2200, %r2075, %r2197;
	// end inline asm
	mov.u32 	%r2206, 25152;
	// begin inline asm
	prmt.b32 %r2203, %r2179, %r2193, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2207, %r2186, %r2200, %r2206;
	// end inline asm
	shl.b32 	%r2214, %r2207, 4;
	mov.u32 	%r2212, 252645135;
	// begin inline asm
	lop3.b32 %r2211, %r2212, %r2203, %r2214, 202;
	// end inline asm
	xor.b32  	%r7730, %r2211, -2004318072;
	// begin inline asm
	mov.b32 %r2218, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2217, %r2218, %r2216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2083, %r2217;
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2224, %r2218, %r2223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2091, %r2224;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2218, %r2230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2099, %r2231;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2238, %r2218, %r2237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2241, %r2107, %r2238;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2244, %r2220, %r2234, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2248, %r2227, %r2241, %r2206;
	// end inline asm
	shl.b32 	%r2255, %r2248, 4;
	// begin inline asm
	lop3.b32 %r2252, %r2212, %r2244, %r2255, 202;
	// end inline asm
	xor.b32  	%r7731, %r2252, -2004318072;
	// begin inline asm
	mov.b32 %r2259, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2259, %r2257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2261, %r2115, %r2258;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2265, %r2259, %r2264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2268, %r2123, %r2265;
	// end inline asm
	// begin inline asm
	mov.b32 %r2271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2272, %r2259, %r2271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2275, %r2131, %r2272;
	// end inline asm
	// begin inline asm
	mov.b32 %r2278, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2279, %r2259, %r2278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2282, %r2139, %r2279;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2285, %r2261, %r2275, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2289, %r2268, %r2282, %r2206;
	// end inline asm
	shl.b32 	%r2296, %r2289, 4;
	// begin inline asm
	lop3.b32 %r2293, %r2212, %r2285, %r2296, 202;
	// end inline asm
	xor.b32  	%r7732, %r2293, -2004318072;
	// begin inline asm
	mov.b32 %r2300, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2298, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2300, %r2298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2302, %r2147, %r2299;
	// end inline asm
	// begin inline asm
	mov.b32 %r2305, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2300, %r2305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2309, %r2155, %r2306;
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2300, %r2312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2316, %r2163, %r2313;
	// end inline asm
	// begin inline asm
	mov.b32 %r2319, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2320, %r2300, %r2319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2323, %r2171, %r2320;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2326, %r2302, %r2316, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2330, %r2309, %r2323, %r2206;
	// end inline asm
	shl.b32 	%r2337, %r2330, 4;
	// begin inline asm
	lop3.b32 %r2334, %r2212, %r2326, %r2337, 202;
	// end inline asm
	xor.b32  	%r7733, %r2334, -2004318072;
	add.s64 	%rd91, %rd109, %rd15;
	st.shared.u32 	[%rd91], %r7730;
	add.s64 	%rd92, %rd109, %rd14;
	st.shared.u32 	[%rd92], %r7731;
	add.s64 	%rd93, %rd109, %rd13;
	st.shared.u32 	[%rd93], %r7732;
	add.s64 	%rd94, %rd109, %rd12;
	st.shared.u32 	[%rd94], %r7733;
	ld.shared.u32 	%r7803, [%rd87];
	ld.shared.u32 	%r7804, [%rd88];
	ld.shared.u32 	%r7805, [%rd89];
	ld.shared.u32 	%r7806, [%rd90];
	// begin inline asm
	mov.b32 %r2343, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2354, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2342, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r2340, %r545, %r2342, %r2343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2343, %r2344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2348, %r2340, %r2345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2351, %r556, %r2342, %r2354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2355, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2356, %r2354, %r2355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2359, %r2351, %r2356;
	// end inline asm
	shr.u32 	%r2364, %r2342, 8;
	// begin inline asm
	lop3.b32 %r2362, %r545, %r2364, %r2343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2343, %r2366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2370, %r2362, %r2367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2373, %r556, %r2364, %r2354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2354, %r2377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2381, %r2373, %r2378;
	// end inline asm
	// begin inline asm
	mov.b32 %r2389, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2388, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r2386, %r545, %r2388, %r2389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2390, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2391, %r2389, %r2390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2394, %r2386, %r2391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2397, %r556, %r2388, %r2400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2401, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2402, %r2400, %r2401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2405, %r2397, %r2402;
	// end inline asm
	shr.u32 	%r2410, %r2388, 8;
	// begin inline asm
	lop3.b32 %r2408, %r545, %r2410, %r2389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2412, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2413, %r2389, %r2412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2416, %r2408, %r2413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2419, %r556, %r2410, %r2400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2423, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2424, %r2400, %r2423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2427, %r2419, %r2424;
	// end inline asm
	// begin inline asm
	mov.b32 %r2435, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2446, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2434, %r7805, -2004318072;
	// begin inline asm
	lop3.b32 %r2432, %r545, %r2434, %r2435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2436, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2437, %r2435, %r2436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2440, %r2432, %r2437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2443, %r556, %r2434, %r2446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2447, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2448, %r2446, %r2447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2451, %r2443, %r2448;
	// end inline asm
	shr.u32 	%r2456, %r2434, 8;
	// begin inline asm
	lop3.b32 %r2454, %r545, %r2456, %r2435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2458, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2459, %r2435, %r2458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2462, %r2454, %r2459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2465, %r556, %r2456, %r2446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2469, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2470, %r2446, %r2469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2473, %r2465, %r2470;
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2492, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2480, %r7806, -2004318072;
	// begin inline asm
	lop3.b32 %r2478, %r545, %r2480, %r2481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2483, %r2481, %r2482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2486, %r2478, %r2483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2489, %r556, %r2480, %r2492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2493, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2494, %r2492, %r2493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2497, %r2489, %r2494;
	// end inline asm
	shr.u32 	%r2502, %r2480, 8;
	// begin inline asm
	lop3.b32 %r2500, %r545, %r2502, %r2481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2504, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2505, %r2481, %r2504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2508, %r2500, %r2505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2511, %r556, %r2502, %r2492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2515, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2516, %r2492, %r2515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2519, %r2511, %r2516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2522, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2524, %r2522, %r2348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2527, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2529, %r2527, %r2359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2532, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2534, %r2532, %r2370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2537, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2539, %r2537, %r2381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2542, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2544, %r2542, %r2394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2547, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2549, %r2547, %r2405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2552, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2554, %r2552, %r2416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2557, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2559, %r2557, %r2427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2562, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2564, %r2562, %r2440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2567, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2569, %r2567, %r2451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2572, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2574, %r2572, %r2462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2577, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2579, %r2577, %r2473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2582, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2584, %r2582, %r2486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2587, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2589, %r2587, %r2497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2592, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2594, %r2592, %r2508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2597, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2599, %r2597, %r2519;
	// end inline asm
	// begin inline asm
	mov.b32 %r2607, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2618, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2604, %r545, %r1058, %r2607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2609, %r2607, %r2608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2612, %r2604, %r2609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2615, %r556, %r1058, %r2618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2620, %r2618, %r2619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2623, %r2615, %r2620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2626, %r545, %r1080, %r2607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2630, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2631, %r2607, %r2630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2634, %r2626, %r2631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2637, %r556, %r1080, %r2618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2642, %r2618, %r2641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2645, %r2637, %r2642;
	// end inline asm
	// begin inline asm
	mov.b32 %r2653, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2650, %r545, %r1104, %r2653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2655, %r2653, %r2654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2658, %r2650, %r2655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2661, %r556, %r1104, %r2664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2665, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2666, %r2664, %r2665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2669, %r2661, %r2666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2672, %r545, %r1126, %r2653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2676, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2677, %r2653, %r2676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2680, %r2672, %r2677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2683, %r556, %r1126, %r2664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2687, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2688, %r2664, %r2687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2691, %r2683, %r2688;
	// end inline asm
	// begin inline asm
	mov.b32 %r2699, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2696, %r545, %r1150, %r2699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2701, %r2699, %r2700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2704, %r2696, %r2701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2707, %r556, %r1150, %r2710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2712, %r2710, %r2711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2715, %r2707, %r2712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2718, %r545, %r1172, %r2699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2722, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2723, %r2699, %r2722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2726, %r2718, %r2723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2729, %r556, %r1172, %r2710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2733, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2734, %r2710, %r2733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2737, %r2729, %r2734;
	// end inline asm
	// begin inline asm
	mov.b32 %r2745, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2756, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2742, %r545, %r1196, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2747, %r2745, %r2746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2750, %r2742, %r2747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2753, %r556, %r1196, %r2756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2758, %r2756, %r2757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2761, %r2753, %r2758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2764, %r545, %r1218, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2768, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2769, %r2745, %r2768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2772, %r2764, %r2769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2775, %r556, %r1218, %r2756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2780, %r2756, %r2779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2783, %r2775, %r2780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2786, %r201, %r2612, %r2524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2790, %r201, %r2623, %r2529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2794, %r201, %r2634, %r2534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2798, %r201, %r2645, %r2539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2802, %r201, %r2658, %r2544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2806, %r201, %r2669, %r2549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2810, %r201, %r2680, %r2554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2814, %r201, %r2691, %r2559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2818, %r201, %r2704, %r2564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2822, %r201, %r2715, %r2569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2826, %r201, %r2726, %r2574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2830, %r201, %r2737, %r2579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2834, %r201, %r2750, %r2584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2838, %r201, %r2761, %r2589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2842, %r201, %r2772, %r2594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2846, %r201, %r2783, %r2599;
	// end inline asm
	// begin inline asm
	mov.b32 %r2855, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2866, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2852, %r545, %r1338, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2857, %r2855, %r2856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2860, %r2852, %r2857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2863, %r556, %r1338, %r2866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2867, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2868, %r2866, %r2867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2871, %r2863, %r2868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2874, %r545, %r1360, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2879, %r2855, %r2878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2882, %r2874, %r2879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2885, %r556, %r1360, %r2866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2890, %r2866, %r2889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2893, %r2885, %r2890;
	// end inline asm
	// begin inline asm
	mov.b32 %r2901, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2912, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2898, %r545, %r1384, %r2901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2902, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2903, %r2901, %r2902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2906, %r2898, %r2903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2909, %r556, %r1384, %r2912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2913, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2914, %r2912, %r2913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2917, %r2909, %r2914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2920, %r545, %r1406, %r2901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2924, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2925, %r2901, %r2924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2928, %r2920, %r2925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2931, %r556, %r1406, %r2912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2935, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2936, %r2912, %r2935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2939, %r2931, %r2936;
	// end inline asm
	// begin inline asm
	mov.b32 %r2947, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2958, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2944, %r545, %r1430, %r2947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2948, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2949, %r2947, %r2948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2952, %r2944, %r2949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2955, %r556, %r1430, %r2958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2959, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2960, %r2958, %r2959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2963, %r2955, %r2960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2966, %r545, %r1452, %r2947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2971, %r2947, %r2970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2974, %r2966, %r2971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2977, %r556, %r1452, %r2958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2982, %r2958, %r2981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2985, %r2977, %r2982;
	// end inline asm
	// begin inline asm
	mov.b32 %r2993, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3004, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2990, %r545, %r1476, %r2993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2995, %r2993, %r2994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2998, %r2990, %r2995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3001, %r556, %r1476, %r3004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3005, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3006, %r3004, %r3005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3009, %r3001, %r3006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3012, %r545, %r1498, %r2993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3017, %r2993, %r3016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3020, %r3012, %r3017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3023, %r556, %r1498, %r3004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3027, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3028, %r3004, %r3027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3031, %r3023, %r3028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3034, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r3034, %r2860, %r2786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3040, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r3040, %r2871, %r2790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3046, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r3046, %r2882, %r2794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3052, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r3052, %r2893, %r2798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3058, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r3058, %r2906, %r2802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3064, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r3064, %r2917, %r2806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3070, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r3070, %r2928, %r2810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3076, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r3076, %r2939, %r2814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3082, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r3082, %r2952, %r2818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3088, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r3088, %r2963, %r2822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3094, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3096, %r3094, %r2974, %r2826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3100, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r3100, %r2985, %r2830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3106, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3108, %r3106, %r2998, %r2834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3112, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3114, %r3112, %r3009, %r2838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3118, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r3118, %r3020, %r2842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3124, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r3124, %r3031, %r2846;
	// end inline asm
	// begin inline asm
	mov.b32 %r3135, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3146, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3132, %r545, %r546, %r3135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3136, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3137, %r3135, %r3136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3140, %r3132, %r3137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3143, %r556, %r546, %r3146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3147, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3148, %r3146, %r3147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3151, %r3143, %r3148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3154, %r545, %r568, %r3135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3158, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3159, %r3135, %r3158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3162, %r3154, %r3159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3165, %r556, %r568, %r3146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3170, %r3146, %r3169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3173, %r3165, %r3170;
	// end inline asm
	// begin inline asm
	mov.b32 %r3181, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3192, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3178, %r545, %r592, %r3181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3182, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3183, %r3181, %r3182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3186, %r3178, %r3183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3189, %r556, %r592, %r3192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3194, %r3192, %r3193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3197, %r3189, %r3194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3200, %r545, %r614, %r3181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3205, %r3181, %r3204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3208, %r3200, %r3205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3211, %r556, %r614, %r3192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3216, %r3192, %r3215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3219, %r3211, %r3216;
	// end inline asm
	// begin inline asm
	mov.b32 %r3227, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3238, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3224, %r545, %r638, %r3227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3229, %r3227, %r3228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3232, %r3224, %r3229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3235, %r556, %r638, %r3238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3240, %r3238, %r3239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3243, %r3235, %r3240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3246, %r545, %r660, %r3227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3251, %r3227, %r3250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3254, %r3246, %r3251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3257, %r556, %r660, %r3238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3262, %r3238, %r3261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3265, %r3257, %r3262;
	// end inline asm
	// begin inline asm
	mov.b32 %r3273, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3284, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3270, %r545, %r684, %r3273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3275, %r3273, %r3274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3278, %r3270, %r3275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3281, %r556, %r684, %r3284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3286, %r3284, %r3285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3289, %r3281, %r3286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3292, %r545, %r706, %r3273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3297, %r3273, %r3296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3300, %r3292, %r3297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3303, %r556, %r706, %r3284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3308, %r3284, %r3307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3311, %r3303, %r3308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3385, %r237, %r3140, %r3036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r237, %r3151, %r3042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3394, %r237, %r3162, %r3048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r237, %r3173, %r3054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r237, %r3186, %r3060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r237, %r3197, %r3066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r237, %r3208, %r3072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r237, %r3219, %r3078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r237, %r3232, %r3084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r237, %r3243, %r3090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r237, %r3254, %r3096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r237, %r3265, %r3102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r237, %r3278, %r3108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r237, %r3289, %r3114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r237, %r3300, %r3120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r237, %r3311, %r3126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3378, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3380, %r3378, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3383, %r283, %r3385, %r3380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3387, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3389, %r3387, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r283, %r3394, %r3389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3396, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3398, %r3396, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r283, %r3403, %r3398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3405, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3407, %r3405, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r283, %r3412, %r3407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3414, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3416, %r3414, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r283, %r3421, %r3416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3423, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3425, %r3423, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r283, %r3430, %r3425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3432, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3434, %r3432, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r283, %r3439, %r3434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3441, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3443, %r3441, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r283, %r3448, %r3443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3450, %r286, %r3385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3453, %r283, %r3382, %r3450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3457, %r286, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3460, %r283, %r3391, %r3457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3464, %r286, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3467, %r283, %r3400, %r3464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3471, %r286, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3474, %r283, %r3409, %r3471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r286, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r283, %r3418, %r3478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3485, %r286, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r283, %r3427, %r3485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3492, %r286, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3495, %r283, %r3436, %r3492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3499, %r286, %r3448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3502, %r283, %r3445, %r3499;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3593, %r3590}, {%r330, %r336, %r333, %r339}, {%r3383, %r3453}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3602, %r3599}, {%r330, %r336, %r333, %r339}, {%r3392, %r3460}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3611, %r3608}, {%r330, %r336, %r333, %r339}, {%r3401, %r3467}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3620, %r3617}, {%r330, %r336, %r333, %r339}, {%r3410, %r3474}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3629, %r3626}, {%r330, %r336, %r333, %r339}, {%r3419, %r3481}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3638, %r3635}, {%r330, %r336, %r333, %r339}, {%r3428, %r3488}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3647, %r3644}, {%r330, %r336, %r333, %r339}, {%r3437, %r3495}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3656, %r3653}, {%r330, %r336, %r333, %r339}, {%r3446, %r3502}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3586, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r3586, %r3590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r374, %r3593, %r3588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3595, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3597, %r3595, %r3599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3600, %r374, %r3602, %r3597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3604, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r3604, %r3608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r374, %r3611, %r3606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3613, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3615, %r3613, %r3617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3618, %r374, %r3620, %r3615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3622, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3624, %r3622, %r3626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3627, %r374, %r3629, %r3624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3631, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3633, %r3631, %r3635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3636, %r374, %r3638, %r3633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3640, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3642, %r3640, %r3644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3645, %r374, %r3647, %r3642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3649, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3651, %r3649, %r3653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3654, %r374, %r3656, %r3651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3658, %r377, %r3593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3661, %r374, %r3590, %r3658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3665, %r377, %r3602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3668, %r374, %r3599, %r3665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3672, %r377, %r3611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3675, %r374, %r3608, %r3672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3679, %r377, %r3620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3682, %r374, %r3617, %r3679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3686, %r377, %r3629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3689, %r374, %r3626, %r3686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3693, %r377, %r3638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3696, %r374, %r3635, %r3693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3700, %r377, %r3647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3703, %r374, %r3644, %r3700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3707, %r377, %r3656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3710, %r374, %r3653, %r3707;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3714, %r3715}, {%r408, %r414, %r411, %r417}, {%r3591, %r3661}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3724, %r3725}, {%r408, %r414, %r411, %r417}, {%r3600, %r3668}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3734, %r3735}, {%r408, %r414, %r411, %r417}, {%r3609, %r3675}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3744, %r3745}, {%r408, %r414, %r411, %r417}, {%r3618, %r3682}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3754, %r3755}, {%r408, %r414, %r411, %r417}, {%r3627, %r3689}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3764, %r3765}, {%r408, %r414, %r411, %r417}, {%r3636, %r3696}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3774, %r3775}, {%r408, %r414, %r411, %r417}, {%r3645, %r3703}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3784, %r3785}, {%r408, %r414, %r411, %r417}, {%r3654, %r3710}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3794, %r16, %r3714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3797, %r16, %r3715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3800, %r16, %r3724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3803, %r16, %r3725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3806, %r16, %r3734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3809, %r16, %r3735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3812, %r16, %r3744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3815, %r16, %r3745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3818, %r16, %r3754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3821, %r16, %r3755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3824, %r16, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3827, %r16, %r3765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3830, %r16, %r3774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3833, %r16, %r3775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3836, %r16, %r3784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3839, %r16, %r3785;
	// end inline asm
	// begin inline asm
	mov.b32 %r3842, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3843, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3844, %r3794, %r3842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3847, %r3844, %r3843;
	// end inline asm
	// begin inline asm
	mov.b32 %r3850, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3851, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3852, %r3797, %r3850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3855, %r3852, %r3851;
	// end inline asm
	// begin inline asm
	mov.b32 %r3858, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3859, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3860, %r3800, %r3858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3863, %r3860, %r3859;
	// end inline asm
	// begin inline asm
	mov.b32 %r3866, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3867, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3868, %r3803, %r3866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3871, %r3868, %r3867;
	// end inline asm
	// begin inline asm
	mov.b32 %r3874, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3875, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3876, %r3806, %r3874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3879, %r3876, %r3875;
	// end inline asm
	// begin inline asm
	mov.b32 %r3882, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3883, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3884, %r3809, %r3882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3887, %r3884, %r3883;
	// end inline asm
	// begin inline asm
	mov.b32 %r3890, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3891, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3892, %r3812, %r3890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3895, %r3892, %r3891;
	// end inline asm
	// begin inline asm
	mov.b32 %r3898, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3899, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3900, %r3815, %r3898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3903, %r3900, %r3899;
	// end inline asm
	// begin inline asm
	mov.b32 %r3906, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3907, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3908, %r3818, %r3906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3911, %r3908, %r3907;
	// end inline asm
	// begin inline asm
	mov.b32 %r3914, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3915, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3916, %r3821, %r3914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3919, %r3916, %r3915;
	// end inline asm
	// begin inline asm
	mov.b32 %r3922, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3923, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3924, %r3824, %r3922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3927, %r3924, %r3923;
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3931, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3932, %r3827, %r3930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3935, %r3932, %r3931;
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3939, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3940, %r3830, %r3938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3943, %r3940, %r3939;
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3948, %r3833, %r3946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3951, %r3948, %r3947;
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3956, %r3836, %r3954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3959, %r3956, %r3955;
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3964, %r3839, %r3962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3967, %r3964, %r3963;
	// end inline asm
	// begin inline asm
	mov.b32 %r3973, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3973, %r3971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3847, %r3972;
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3979, %r3973, %r3978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3982, %r3855, %r3979;
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3986, %r3973, %r3985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3989, %r3863, %r3986;
	// end inline asm
	// begin inline asm
	mov.b32 %r3992, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3993, %r3973, %r3992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3996, %r3871, %r3993;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3999, %r3975, %r3989, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4003, %r3982, %r3996, %r2206;
	// end inline asm
	shl.b32 	%r4010, %r4003, 4;
	// begin inline asm
	lop3.b32 %r4007, %r2212, %r3999, %r4010, 202;
	// end inline asm
	xor.b32  	%r7734, %r4007, -2004318072;
	// begin inline asm
	mov.b32 %r4014, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4012, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4013, %r4014, %r4012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4016, %r3879, %r4013;
	// end inline asm
	// begin inline asm
	mov.b32 %r4019, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4020, %r4014, %r4019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4023, %r3887, %r4020;
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4027, %r4014, %r4026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4030, %r3895, %r4027;
	// end inline asm
	// begin inline asm
	mov.b32 %r4033, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4034, %r4014, %r4033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4037, %r3903, %r4034;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4040, %r4016, %r4030, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4044, %r4023, %r4037, %r2206;
	// end inline asm
	shl.b32 	%r4051, %r4044, 4;
	// begin inline asm
	lop3.b32 %r4048, %r2212, %r4040, %r4051, 202;
	// end inline asm
	xor.b32  	%r7735, %r4048, -2004318072;
	// begin inline asm
	mov.b32 %r4055, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4054, %r4055, %r4053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4057, %r3911, %r4054;
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4061, %r4055, %r4060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4064, %r3919, %r4061;
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4068, %r4055, %r4067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4071, %r3927, %r4068;
	// end inline asm
	// begin inline asm
	mov.b32 %r4074, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4075, %r4055, %r4074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4078, %r3935, %r4075;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4081, %r4057, %r4071, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4085, %r4064, %r4078, %r2206;
	// end inline asm
	shl.b32 	%r4092, %r4085, 4;
	// begin inline asm
	lop3.b32 %r4089, %r2212, %r4081, %r4092, 202;
	// end inline asm
	xor.b32  	%r7736, %r4089, -2004318072;
	// begin inline asm
	mov.b32 %r4096, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r4096, %r4094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4098, %r3943, %r4095;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r4096, %r4101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4105, %r3951, %r4102;
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4109, %r4096, %r4108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4112, %r3959, %r4109;
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4116, %r4096, %r4115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4119, %r3967, %r4116;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4122, %r4098, %r4112, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4126, %r4105, %r4119, %r2206;
	// end inline asm
	shl.b32 	%r4133, %r4126, 4;
	// begin inline asm
	lop3.b32 %r4130, %r2212, %r4122, %r4133, 202;
	// end inline asm
	xor.b32  	%r7737, %r4130, -2004318072;
	st.shared.u32 	[%rd91], %r7734;
	st.shared.u32 	[%rd92], %r7735;
	st.shared.u32 	[%rd93], %r7736;
	st.shared.u32 	[%rd94], %r7737;
	ld.shared.u32 	%r7807, [%rd87];
	ld.shared.u32 	%r7808, [%rd88];
	ld.shared.u32 	%r7809, [%rd89];
	ld.shared.u32 	%r7810, [%rd90];
	// begin inline asm
	mov.b32 %r4139, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4138, %r7807, -2004318072;
	// begin inline asm
	lop3.b32 %r4136, %r545, %r4138, %r4139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4141, %r4139, %r4140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4144, %r4136, %r4141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4147, %r556, %r4138, %r4150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4152, %r4150, %r4151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4155, %r4147, %r4152;
	// end inline asm
	shr.u32 	%r4160, %r4138, 8;
	// begin inline asm
	lop3.b32 %r4158, %r545, %r4160, %r4139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4163, %r4139, %r4162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4166, %r4158, %r4163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4169, %r556, %r4160, %r4150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4174, %r4150, %r4173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4177, %r4169, %r4174;
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4184, %r7808, -2004318072;
	// begin inline asm
	lop3.b32 %r4182, %r545, %r4184, %r4185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4187, %r4185, %r4186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4190, %r4182, %r4187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4193, %r556, %r4184, %r4196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4198, %r4196, %r4197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4201, %r4193, %r4198;
	// end inline asm
	shr.u32 	%r4206, %r4184, 8;
	// begin inline asm
	lop3.b32 %r4204, %r545, %r4206, %r4185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4209, %r4185, %r4208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4212, %r4204, %r4209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4215, %r556, %r4206, %r4196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4220, %r4196, %r4219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4223, %r4215, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4230, %r7809, -2004318072;
	// begin inline asm
	lop3.b32 %r4228, %r545, %r4230, %r4231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4233, %r4231, %r4232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4236, %r4228, %r4233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4239, %r556, %r4230, %r4242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4244, %r4242, %r4243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4247, %r4239, %r4244;
	// end inline asm
	shr.u32 	%r4252, %r4230, 8;
	// begin inline asm
	lop3.b32 %r4250, %r545, %r4252, %r4231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4255, %r4231, %r4254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4258, %r4250, %r4255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4261, %r556, %r4252, %r4242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4266, %r4242, %r4265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4269, %r4261, %r4266;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4276, %r7810, -2004318072;
	// begin inline asm
	lop3.b32 %r4274, %r545, %r4276, %r4277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4279, %r4277, %r4278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4282, %r4274, %r4279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4285, %r556, %r4276, %r4288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4290, %r4288, %r4289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4293, %r4285, %r4290;
	// end inline asm
	shr.u32 	%r4298, %r4276, 8;
	// begin inline asm
	lop3.b32 %r4296, %r545, %r4298, %r4277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4301, %r4277, %r4300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4304, %r4296, %r4301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4307, %r556, %r4298, %r4288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4312, %r4288, %r4311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4315, %r4307, %r4312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4318, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4320, %r4318, %r4144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4323, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4325, %r4323, %r4155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4328, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4330, %r4328, %r4166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4333, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4335, %r4333, %r4177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4338, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4340, %r4338, %r4190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4343, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4345, %r4343, %r4201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4348, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4350, %r4348, %r4212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4353, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4355, %r4353, %r4223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4358, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4360, %r4358, %r4236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4363, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4365, %r4363, %r4247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4368, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4370, %r4368, %r4258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4373, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4375, %r4373, %r4269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4378, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4380, %r4378, %r4282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4383, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4385, %r4383, %r4293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4388, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4390, %r4388, %r4304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4393, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4395, %r4393, %r4315;
	// end inline asm
	// begin inline asm
	mov.b32 %r4403, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4414, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4400, %r545, %r1338, %r4403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4403, %r4404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4408, %r4400, %r4405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4411, %r556, %r1338, %r4414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4415, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4414, %r4415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4419, %r4411, %r4416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4422, %r545, %r1360, %r4403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4426, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4403, %r4426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4430, %r4422, %r4427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4433, %r556, %r1360, %r4414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4437, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4414, %r4437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4441, %r4433, %r4438;
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4460, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4446, %r545, %r1384, %r4449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4449, %r4450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4454, %r4446, %r4451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4457, %r556, %r1384, %r4460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4460, %r4461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4465, %r4457, %r4462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4468, %r545, %r1406, %r4449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4472, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4449, %r4472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4476, %r4468, %r4473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4479, %r556, %r1406, %r4460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4460, %r4483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4487, %r4479, %r4484;
	// end inline asm
	// begin inline asm
	mov.b32 %r4495, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4492, %r545, %r1430, %r4495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4495, %r4496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4500, %r4492, %r4497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4503, %r556, %r1430, %r4506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4508, %r4506, %r4507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4511, %r4503, %r4508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4514, %r545, %r1452, %r4495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4518, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4519, %r4495, %r4518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4522, %r4514, %r4519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4525, %r556, %r1452, %r4506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4529, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4506, %r4529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4533, %r4525, %r4530;
	// end inline asm
	// begin inline asm
	mov.b32 %r4541, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4552, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4538, %r545, %r1476, %r4541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4541, %r4542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4546, %r4538, %r4543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4549, %r556, %r1476, %r4552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4552, %r4553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4557, %r4549, %r4554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4560, %r545, %r1498, %r4541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4564, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4541, %r4564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4568, %r4560, %r4565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4571, %r556, %r1498, %r4552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4552, %r4575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4579, %r4571, %r4576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4582, %r201, %r4408, %r4320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4586, %r201, %r4419, %r4325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4590, %r201, %r4430, %r4330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4594, %r201, %r4441, %r4335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4598, %r201, %r4454, %r4340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4602, %r201, %r4465, %r4345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4606, %r201, %r4476, %r4350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4610, %r201, %r4487, %r4355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4614, %r201, %r4500, %r4360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4618, %r201, %r4511, %r4365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4622, %r201, %r4522, %r4370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4626, %r201, %r4533, %r4375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4630, %r201, %r4546, %r4380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4634, %r201, %r4557, %r4385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4638, %r201, %r4568, %r4390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4642, %r201, %r4579, %r4395;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4648, %r545, %r546, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4651, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4659, %r556, %r546, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4662, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4670, %r545, %r568, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4651, %r4674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4678, %r4670, %r4675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4681, %r556, %r568, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4662, %r4685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4689, %r4681, %r4686;
	// end inline asm
	// begin inline asm
	mov.b32 %r4697, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4694, %r545, %r592, %r4697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4697, %r4698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4702, %r4694, %r4699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4705, %r556, %r592, %r4708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4709, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4710, %r4708, %r4709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4713, %r4705, %r4710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4716, %r545, %r614, %r4697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4720, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4721, %r4697, %r4720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4724, %r4716, %r4721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4727, %r556, %r614, %r4708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4732, %r4708, %r4731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4735, %r4727, %r4732;
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4740, %r545, %r638, %r4743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4745, %r4743, %r4744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4748, %r4740, %r4745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4751, %r556, %r638, %r4754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4756, %r4754, %r4755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4759, %r4751, %r4756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4762, %r545, %r660, %r4743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4767, %r4743, %r4766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4770, %r4762, %r4767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4773, %r556, %r660, %r4754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4778, %r4754, %r4777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4781, %r4773, %r4778;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4786, %r545, %r684, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4789, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4797, %r556, %r684, %r4800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4802, %r4800, %r4801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4805, %r4797, %r4802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4808, %r545, %r706, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4813, %r4789, %r4812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4816, %r4808, %r4813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4819, %r556, %r706, %r4800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4824, %r4800, %r4823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4827, %r4819, %r4824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4830, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4832, %r4830, %r4656, %r4582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4836, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4838, %r4836, %r4667, %r4586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4842, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4844, %r4842, %r4678, %r4590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4848, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4850, %r4848, %r4689, %r4594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4854, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4856, %r4854, %r4702, %r4598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4860, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4862, %r4860, %r4713, %r4602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4866, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4868, %r4866, %r4724, %r4606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4872, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4874, %r4872, %r4735, %r4610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4878, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4880, %r4878, %r4748, %r4614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4884, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4886, %r4884, %r4759, %r4618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4890, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4892, %r4890, %r4770, %r4622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4896, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4898, %r4896, %r4781, %r4626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4902, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4904, %r4902, %r4794, %r4630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4908, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4910, %r4908, %r4805, %r4634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4914, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4916, %r4914, %r4816, %r4638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4920, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4922, %r4920, %r4827, %r4642;
	// end inline asm
	// begin inline asm
	mov.b32 %r4931, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4942, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4928, %r545, %r2342, %r4931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4933, %r4931, %r4932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4936, %r4928, %r4933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4939, %r556, %r2342, %r4942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4944, %r4942, %r4943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4947, %r4939, %r4944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4950, %r545, %r2364, %r4931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4954, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4955, %r4931, %r4954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4958, %r4950, %r4955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4961, %r556, %r2364, %r4942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4966, %r4942, %r4965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4969, %r4961, %r4966;
	// end inline asm
	// begin inline asm
	mov.b32 %r4977, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4988, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4974, %r545, %r2388, %r4977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4979, %r4977, %r4978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4982, %r4974, %r4979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4985, %r556, %r2388, %r4988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4990, %r4988, %r4989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4993, %r4985, %r4990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4996, %r545, %r2410, %r4977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5001, %r4977, %r5000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5004, %r4996, %r5001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5007, %r556, %r2410, %r4988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5012, %r4988, %r5011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5015, %r5007, %r5012;
	// end inline asm
	// begin inline asm
	mov.b32 %r5023, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5034, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5020, %r545, %r2434, %r5023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5025, %r5023, %r5024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5028, %r5020, %r5025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5031, %r556, %r2434, %r5034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5035, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5036, %r5034, %r5035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5039, %r5031, %r5036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5042, %r545, %r2456, %r5023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5046, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5047, %r5023, %r5046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5050, %r5042, %r5047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5053, %r556, %r2456, %r5034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5057, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5058, %r5034, %r5057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5061, %r5053, %r5058;
	// end inline asm
	// begin inline asm
	mov.b32 %r5069, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5080, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5066, %r545, %r2480, %r5069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5071, %r5069, %r5070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5074, %r5066, %r5071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5077, %r556, %r2480, %r5080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5081, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5082, %r5080, %r5081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5085, %r5077, %r5082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5088, %r545, %r2502, %r5069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5093, %r5069, %r5092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5096, %r5088, %r5093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5099, %r556, %r2502, %r5080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5104, %r5080, %r5103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5107, %r5099, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5181, %r237, %r4936, %r4832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5178, %r237, %r4947, %r4838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5190, %r237, %r4958, %r4844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5187, %r237, %r4969, %r4850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5199, %r237, %r4982, %r4856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5196, %r237, %r4993, %r4862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5208, %r237, %r5004, %r4868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5205, %r237, %r5015, %r4874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5217, %r237, %r5028, %r4880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5214, %r237, %r5039, %r4886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5226, %r237, %r5050, %r4892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5223, %r237, %r5061, %r4898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5235, %r237, %r5074, %r4904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5232, %r237, %r5085, %r4910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5244, %r237, %r5096, %r4916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5241, %r237, %r5107, %r4922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5174, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5176, %r5174, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5179, %r283, %r5181, %r5176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r5187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5188, %r283, %r5190, %r5185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5192, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5194, %r5192, %r5196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5197, %r283, %r5199, %r5194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r5205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5206, %r283, %r5208, %r5203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5210, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5212, %r5210, %r5214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r283, %r5217, %r5212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5219, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5221, %r5219, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r283, %r5226, %r5221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5228, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5230, %r5228, %r5232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r283, %r5235, %r5230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5237, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5239, %r5237, %r5241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5242, %r283, %r5244, %r5239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5246, %r286, %r5181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5249, %r283, %r5178, %r5246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5253, %r286, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5256, %r283, %r5187, %r5253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5260, %r286, %r5199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5263, %r283, %r5196, %r5260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5267, %r286, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5270, %r283, %r5205, %r5267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5274, %r286, %r5217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5277, %r283, %r5214, %r5274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5281, %r286, %r5226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5284, %r283, %r5223, %r5281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5288, %r286, %r5235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5291, %r283, %r5232, %r5288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5295, %r286, %r5244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5298, %r283, %r5241, %r5295;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5389, %r5386}, {%r330, %r336, %r333, %r339}, {%r5179, %r5249}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5398, %r5395}, {%r330, %r336, %r333, %r339}, {%r5188, %r5256}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5407, %r5404}, {%r330, %r336, %r333, %r339}, {%r5197, %r5263}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5416, %r5413}, {%r330, %r336, %r333, %r339}, {%r5206, %r5270}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5425, %r5422}, {%r330, %r336, %r333, %r339}, {%r5215, %r5277}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5434, %r5431}, {%r330, %r336, %r333, %r339}, {%r5224, %r5284}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5443, %r5440}, {%r330, %r336, %r333, %r339}, {%r5233, %r5291}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5452, %r5449}, {%r330, %r336, %r333, %r339}, {%r5242, %r5298}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5382, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5384, %r5382, %r5386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5387, %r374, %r5389, %r5384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5391, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5393, %r5391, %r5395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5396, %r374, %r5398, %r5393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5400, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5402, %r5400, %r5404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5405, %r374, %r5407, %r5402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5409, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5411, %r5409, %r5413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5414, %r374, %r5416, %r5411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5418, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5420, %r5418, %r5422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5423, %r374, %r5425, %r5420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5427, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5429, %r5427, %r5431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5432, %r374, %r5434, %r5429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5436, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5438, %r5436, %r5440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5441, %r374, %r5443, %r5438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5445, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5447, %r5445, %r5449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5450, %r374, %r5452, %r5447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5454, %r377, %r5389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5457, %r374, %r5386, %r5454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5461, %r377, %r5398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5464, %r374, %r5395, %r5461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5468, %r377, %r5407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5471, %r374, %r5404, %r5468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5475, %r377, %r5416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5478, %r374, %r5413, %r5475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5482, %r377, %r5425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5485, %r374, %r5422, %r5482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5489, %r377, %r5434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5492, %r374, %r5431, %r5489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5496, %r377, %r5443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5499, %r374, %r5440, %r5496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5503, %r377, %r5452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5506, %r374, %r5449, %r5503;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5510, %r5511}, {%r408, %r414, %r411, %r417}, {%r5387, %r5457}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5520, %r5521}, {%r408, %r414, %r411, %r417}, {%r5396, %r5464}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5530, %r5531}, {%r408, %r414, %r411, %r417}, {%r5405, %r5471}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5540, %r5541}, {%r408, %r414, %r411, %r417}, {%r5414, %r5478}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5550, %r5551}, {%r408, %r414, %r411, %r417}, {%r5423, %r5485}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5560, %r5561}, {%r408, %r414, %r411, %r417}, {%r5432, %r5492}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5570, %r5571}, {%r408, %r414, %r411, %r417}, {%r5441, %r5499}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5580, %r5581}, {%r408, %r414, %r411, %r417}, {%r5450, %r5506}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5590, %r16, %r5510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5593, %r16, %r5511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5596, %r16, %r5520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5599, %r16, %r5521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5602, %r16, %r5530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5605, %r16, %r5531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5608, %r16, %r5540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5611, %r16, %r5541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5614, %r16, %r5550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5617, %r16, %r5551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5620, %r16, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5623, %r16, %r5561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5626, %r16, %r5570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5629, %r16, %r5571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5632, %r16, %r5580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5635, %r16, %r5581;
	// end inline asm
	// begin inline asm
	mov.b32 %r5638, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5639, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5640, %r5590, %r5638;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5643, %r5640, %r5639;
	// end inline asm
	// begin inline asm
	mov.b32 %r5646, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5647, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5648, %r5593, %r5646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5651, %r5648, %r5647;
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5655, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5656, %r5596, %r5654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5659, %r5656, %r5655;
	// end inline asm
	// begin inline asm
	mov.b32 %r5662, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5663, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5664, %r5599, %r5662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5667, %r5664, %r5663;
	// end inline asm
	// begin inline asm
	mov.b32 %r5670, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5671, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5672, %r5602, %r5670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5675, %r5672, %r5671;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5679, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5680, %r5605, %r5678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5683, %r5680, %r5679;
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5688, %r5608, %r5686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5691, %r5688, %r5687;
	// end inline asm
	// begin inline asm
	mov.b32 %r5694, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5696, %r5611, %r5694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5699, %r5696, %r5695;
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5703, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5704, %r5614, %r5702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5707, %r5704, %r5703;
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5712, %r5617, %r5710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5715, %r5712, %r5711;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5720, %r5620, %r5718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5723, %r5720, %r5719;
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5728, %r5623, %r5726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5731, %r5728, %r5727;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5736, %r5626, %r5734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5739, %r5736, %r5735;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5744, %r5629, %r5742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5747, %r5744, %r5743;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5752, %r5632, %r5750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5755, %r5752, %r5751;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5760, %r5635, %r5758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5763, %r5760, %r5759;
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5768, %r5769, %r5767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5643, %r5768;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5775, %r5769, %r5774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5651, %r5775;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5769, %r5781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5785, %r5659, %r5782;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5789, %r5769, %r5788;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5792, %r5667, %r5789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5795, %r5771, %r5785, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5799, %r5778, %r5792, %r2206;
	// end inline asm
	shl.b32 	%r5806, %r5799, 4;
	// begin inline asm
	lop3.b32 %r5803, %r2212, %r5795, %r5806, 202;
	// end inline asm
	xor.b32  	%r7738, %r5803, -2004318072;
	// begin inline asm
	mov.b32 %r5810, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5810, %r5808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5675, %r5809;
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5816, %r5810, %r5815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5683, %r5816;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5823, %r5810, %r5822;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5691, %r5823;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5830, %r5810, %r5829;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5833, %r5699, %r5830;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5836, %r5812, %r5826, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5840, %r5819, %r5833, %r2206;
	// end inline asm
	shl.b32 	%r5847, %r5840, 4;
	// begin inline asm
	lop3.b32 %r5844, %r2212, %r5836, %r5847, 202;
	// end inline asm
	xor.b32  	%r7739, %r5844, -2004318072;
	// begin inline asm
	mov.b32 %r5851, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5851, %r5849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5853, %r5707, %r5850;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5851, %r5856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5715, %r5857;
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5864, %r5851, %r5863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5723, %r5864;
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5871, %r5851, %r5870;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5731, %r5871;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5877, %r5853, %r5867, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5881, %r5860, %r5874, %r2206;
	// end inline asm
	shl.b32 	%r5888, %r5881, 4;
	// begin inline asm
	lop3.b32 %r5885, %r2212, %r5877, %r5888, 202;
	// end inline asm
	xor.b32  	%r7740, %r5885, -2004318072;
	// begin inline asm
	mov.b32 %r5892, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5892, %r5890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5739, %r5891;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5892, %r5897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5747, %r5898;
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5892, %r5904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5755, %r5905;
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5912, %r5892, %r5911;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5915, %r5763, %r5912;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5918, %r5894, %r5908, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5922, %r5901, %r5915, %r2206;
	// end inline asm
	shl.b32 	%r5929, %r5922, 4;
	// begin inline asm
	lop3.b32 %r5926, %r2212, %r5918, %r5929, 202;
	// end inline asm
	xor.b32  	%r7741, %r5926, -2004318072;
	st.shared.u32 	[%rd91], %r7738;
	st.shared.u32 	[%rd92], %r7739;
	st.shared.u32 	[%rd93], %r7740;
	st.shared.u32 	[%rd94], %r7741;
	ld.shared.u32 	%r7811, [%rd87];
	ld.shared.u32 	%r7812, [%rd88];
	ld.shared.u32 	%r7813, [%rd89];
	ld.shared.u32 	%r7814, [%rd90];
	// begin inline asm
	mov.b32 %r5935, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5934, %r7811, -2004318072;
	// begin inline asm
	lop3.b32 %r5932, %r545, %r5934, %r5935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5935, %r5936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5940, %r5932, %r5937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5943, %r556, %r5934, %r5946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5947, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5948, %r5946, %r5947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5951, %r5943, %r5948;
	// end inline asm
	shr.u32 	%r5956, %r5934, 8;
	// begin inline asm
	lop3.b32 %r5954, %r545, %r5956, %r5935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5935, %r5958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5962, %r5954, %r5959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5965, %r556, %r5956, %r5946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5946, %r5969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5973, %r5965, %r5970;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5980, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r5978, %r545, %r5980, %r5981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5983, %r5981, %r5982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5986, %r5978, %r5983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5989, %r556, %r5980, %r5992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5993, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5994, %r5992, %r5993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5997, %r5989, %r5994;
	// end inline asm
	shr.u32 	%r6002, %r5980, 8;
	// begin inline asm
	lop3.b32 %r6000, %r545, %r6002, %r5981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6005, %r5981, %r6004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6008, %r6000, %r6005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6011, %r556, %r6002, %r5992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6016, %r5992, %r6015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6019, %r6011, %r6016;
	// end inline asm
	// begin inline asm
	mov.b32 %r6027, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6026, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r6024, %r545, %r6026, %r6027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6028, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6029, %r6027, %r6028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6032, %r6024, %r6029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6035, %r556, %r6026, %r6038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6039, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6040, %r6038, %r6039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6043, %r6035, %r6040;
	// end inline asm
	shr.u32 	%r6048, %r6026, 8;
	// begin inline asm
	lop3.b32 %r6046, %r545, %r6048, %r6027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6050, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6051, %r6027, %r6050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6054, %r6046, %r6051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6057, %r556, %r6048, %r6038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6061, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6062, %r6038, %r6061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6065, %r6057, %r6062;
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6084, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6072, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r6070, %r545, %r6072, %r6073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6074, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6075, %r6073, %r6074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6078, %r6070, %r6075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6081, %r556, %r6072, %r6084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6085, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6086, %r6084, %r6085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6089, %r6081, %r6086;
	// end inline asm
	shr.u32 	%r6094, %r6072, 8;
	// begin inline asm
	lop3.b32 %r6092, %r545, %r6094, %r6073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6097, %r6073, %r6096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6100, %r6092, %r6097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6103, %r556, %r6094, %r6084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6107, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6108, %r6084, %r6107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6111, %r6103, %r6108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6116, %r6114, %r5940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6121, %r6119, %r5951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6126, %r6124, %r5962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6131, %r6129, %r5973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6136, %r6134, %r5986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6141, %r6139, %r5997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6146, %r6144, %r6008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6151, %r6149, %r6019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6156, %r6154, %r6032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6161, %r6159, %r6043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6166, %r6164, %r6054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6171, %r6169, %r6065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6176, %r6174, %r6078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6181, %r6179, %r6089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6186, %r6184, %r6100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6191, %r6189, %r6111;
	// end inline asm
	// begin inline asm
	mov.b32 %r6199, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6210, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6196, %r545, %r546, %r6199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6201, %r6199, %r6200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6204, %r6196, %r6201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6207, %r556, %r546, %r6210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6212, %r6210, %r6211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6215, %r6207, %r6212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6218, %r545, %r568, %r6199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6223, %r6199, %r6222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6226, %r6218, %r6223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6229, %r556, %r568, %r6210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6233, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6234, %r6210, %r6233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6237, %r6229, %r6234;
	// end inline asm
	// begin inline asm
	mov.b32 %r6245, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6256, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6242, %r545, %r592, %r6245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6247, %r6245, %r6246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6250, %r6242, %r6247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6253, %r556, %r592, %r6256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6258, %r6256, %r6257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6261, %r6253, %r6258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6264, %r545, %r614, %r6245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6268, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6269, %r6245, %r6268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6272, %r6264, %r6269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6275, %r556, %r614, %r6256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6279, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6280, %r6256, %r6279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6283, %r6275, %r6280;
	// end inline asm
	// begin inline asm
	mov.b32 %r6291, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6302, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6288, %r545, %r638, %r6291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6292, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6293, %r6291, %r6292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6296, %r6288, %r6293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6299, %r556, %r638, %r6302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6304, %r6302, %r6303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6307, %r6299, %r6304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6310, %r545, %r660, %r6291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6314, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6315, %r6291, %r6314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6318, %r6310, %r6315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6321, %r556, %r660, %r6302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6325, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6326, %r6302, %r6325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6329, %r6321, %r6326;
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6334, %r545, %r684, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6339, %r6337, %r6338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6342, %r6334, %r6339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6345, %r556, %r684, %r6348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6350, %r6348, %r6349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6353, %r6345, %r6350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6356, %r545, %r706, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6361, %r6337, %r6360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6364, %r6356, %r6361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6367, %r556, %r706, %r6348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6371, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6372, %r6348, %r6371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6375, %r6367, %r6372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6378, %r201, %r6204, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6382, %r201, %r6215, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6386, %r201, %r6226, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6390, %r201, %r6237, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6394, %r201, %r6250, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6398, %r201, %r6261, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6402, %r201, %r6272, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6406, %r201, %r6283, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6410, %r201, %r6296, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6414, %r201, %r6307, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6418, %r201, %r6318, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6422, %r201, %r6329, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6426, %r201, %r6342, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6430, %r201, %r6353, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6434, %r201, %r6364, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6438, %r201, %r6375, %r6191;
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r545, %r2342, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6447, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r556, %r2342, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6458, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6466, %r545, %r2364, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6471, %r6447, %r6470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6474, %r6466, %r6471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r556, %r2364, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6458, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	mov.b32 %r6493, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6504, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6490, %r545, %r2388, %r6493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6495, %r6493, %r6494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6498, %r6490, %r6495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6501, %r556, %r2388, %r6504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6505, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6506, %r6504, %r6505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6509, %r6501, %r6506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6512, %r545, %r2410, %r6493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6516, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6517, %r6493, %r6516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6520, %r6512, %r6517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6523, %r556, %r2410, %r6504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6528, %r6504, %r6527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6531, %r6523, %r6528;
	// end inline asm
	// begin inline asm
	mov.b32 %r6539, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6550, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6536, %r545, %r2434, %r6539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6541, %r6539, %r6540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6544, %r6536, %r6541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6547, %r556, %r2434, %r6550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6552, %r6550, %r6551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6555, %r6547, %r6552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6558, %r545, %r2456, %r6539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6562, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6563, %r6539, %r6562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6566, %r6558, %r6563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6569, %r556, %r2456, %r6550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6573, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6574, %r6550, %r6573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6577, %r6569, %r6574;
	// end inline asm
	// begin inline asm
	mov.b32 %r6585, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6596, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6582, %r545, %r2480, %r6585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6587, %r6585, %r6586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6590, %r6582, %r6587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6593, %r556, %r2480, %r6596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6598, %r6596, %r6597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6601, %r6593, %r6598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6604, %r545, %r2502, %r6585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6609, %r6585, %r6608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6612, %r6604, %r6609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6615, %r556, %r2502, %r6596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6619, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6620, %r6596, %r6619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6623, %r6615, %r6620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6626, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6628, %r6626, %r6452, %r6378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6632, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6634, %r6632, %r6463, %r6382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6638, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6640, %r6638, %r6474, %r6386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6644, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6646, %r6644, %r6485, %r6390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6650, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6652, %r6650, %r6498, %r6394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6656, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6658, %r6656, %r6509, %r6398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6662, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6664, %r6662, %r6520, %r6402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6668, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6670, %r6668, %r6531, %r6406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6674, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6676, %r6674, %r6544, %r6410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6680, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6682, %r6680, %r6555, %r6414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6686, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6688, %r6686, %r6566, %r6418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6692, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6694, %r6692, %r6577, %r6422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6698, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6700, %r6698, %r6590, %r6426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6704, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6706, %r6704, %r6601, %r6430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6710, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6712, %r6710, %r6612, %r6434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6716, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6718, %r6716, %r6623, %r6438;
	// end inline asm
	// begin inline asm
	mov.b32 %r6727, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6738, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6724, %r545, %r4138, %r6727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6728, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6729, %r6727, %r6728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6732, %r6724, %r6729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6735, %r556, %r4138, %r6738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6740, %r6738, %r6739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6743, %r6735, %r6740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6746, %r545, %r4160, %r6727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6750, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6751, %r6727, %r6750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6754, %r6746, %r6751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6757, %r556, %r4160, %r6738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6762, %r6738, %r6761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6765, %r6757, %r6762;
	// end inline asm
	// begin inline asm
	mov.b32 %r6773, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6784, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6770, %r545, %r4184, %r6773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6774, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6775, %r6773, %r6774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6778, %r6770, %r6775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6781, %r556, %r4184, %r6784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6786, %r6784, %r6785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6789, %r6781, %r6786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6792, %r545, %r4206, %r6773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6797, %r6773, %r6796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6800, %r6792, %r6797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6803, %r556, %r4206, %r6784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6808, %r6784, %r6807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6811, %r6803, %r6808;
	// end inline asm
	// begin inline asm
	mov.b32 %r6819, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6830, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6816, %r545, %r4230, %r6819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6821, %r6819, %r6820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6824, %r6816, %r6821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6827, %r556, %r4230, %r6830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6831, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6832, %r6830, %r6831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6835, %r6827, %r6832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6838, %r545, %r4252, %r6819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6842, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6843, %r6819, %r6842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6846, %r6838, %r6843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6849, %r556, %r4252, %r6830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6853, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6854, %r6830, %r6853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6857, %r6849, %r6854;
	// end inline asm
	// begin inline asm
	mov.b32 %r6865, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6876, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6862, %r545, %r4276, %r6865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6867, %r6865, %r6866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6870, %r6862, %r6867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6873, %r556, %r4276, %r6876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6877, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6878, %r6876, %r6877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6881, %r6873, %r6878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6884, %r545, %r4298, %r6865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6889, %r6865, %r6888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6892, %r6884, %r6889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6895, %r556, %r4298, %r6876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6899, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6900, %r6876, %r6899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6903, %r6895, %r6900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r237, %r6732, %r6628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r237, %r6743, %r6634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6986, %r237, %r6754, %r6640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r237, %r6765, %r6646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r237, %r6778, %r6652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6992, %r237, %r6789, %r6658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7004, %r237, %r6800, %r6664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7001, %r237, %r6811, %r6670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r237, %r6824, %r6676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r237, %r6835, %r6682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7022, %r237, %r6846, %r6688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r237, %r6857, %r6694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r237, %r6870, %r6700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7028, %r237, %r6881, %r6706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7040, %r237, %r6892, %r6712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7037, %r237, %r6903, %r6718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6970, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6972, %r6970, %r6974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r283, %r6977, %r6972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6979, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r6979, %r6983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r283, %r6986, %r6981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6988, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6990, %r6988, %r6992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r283, %r6995, %r6990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6997, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r6997, %r7001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r283, %r7004, %r6999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7006, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7008, %r7006, %r7010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r283, %r7013, %r7008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7015, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7017, %r7015, %r7019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r283, %r7022, %r7017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7024, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7026, %r7024, %r7028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r283, %r7031, %r7026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7033, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7035, %r7033, %r7037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r283, %r7040, %r7035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7042, %r286, %r6977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7045, %r283, %r6974, %r7042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7049, %r286, %r6986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7052, %r283, %r6983, %r7049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7056, %r286, %r6995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7059, %r283, %r6992, %r7056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7063, %r286, %r7004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7066, %r283, %r7001, %r7063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7070, %r286, %r7013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7073, %r283, %r7010, %r7070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7077, %r286, %r7022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7080, %r283, %r7019, %r7077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7084, %r286, %r7031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7087, %r283, %r7028, %r7084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7091, %r286, %r7040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7094, %r283, %r7037, %r7091;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7185, %r7182}, {%r330, %r336, %r333, %r339}, {%r6975, %r7045}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7194, %r7191}, {%r330, %r336, %r333, %r339}, {%r6984, %r7052}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7203, %r7200}, {%r330, %r336, %r333, %r339}, {%r6993, %r7059}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7212, %r7209}, {%r330, %r336, %r333, %r339}, {%r7002, %r7066}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7221, %r7218}, {%r330, %r336, %r333, %r339}, {%r7011, %r7073}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7230, %r7227}, {%r330, %r336, %r333, %r339}, {%r7020, %r7080}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7239, %r7236}, {%r330, %r336, %r333, %r339}, {%r7029, %r7087}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7248, %r7245}, {%r330, %r336, %r333, %r339}, {%r7038, %r7094}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7178, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7180, %r7178, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7183, %r374, %r7185, %r7180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7187, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7189, %r7187, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7192, %r374, %r7194, %r7189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7196, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7198, %r7196, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7201, %r374, %r7203, %r7198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7205, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7207, %r7205, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7210, %r374, %r7212, %r7207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7214, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7216, %r7214, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7219, %r374, %r7221, %r7216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7223, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7225, %r7223, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7228, %r374, %r7230, %r7225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7232, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r7232, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r374, %r7239, %r7234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7241, %r377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7243, %r7241, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7246, %r374, %r7248, %r7243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r377, %r7185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r374, %r7182, %r7250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7257, %r377, %r7194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7260, %r374, %r7191, %r7257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7264, %r377, %r7203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7267, %r374, %r7200, %r7264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7271, %r377, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7274, %r374, %r7209, %r7271;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7278, %r377, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7281, %r374, %r7218, %r7278;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r377, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r374, %r7227, %r7285;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r377, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r374, %r7236, %r7292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7299, %r377, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7302, %r374, %r7245, %r7299;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7306, %r7307}, {%r408, %r414, %r411, %r417}, {%r7183, %r7253}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7316, %r7317}, {%r408, %r414, %r411, %r417}, {%r7192, %r7260}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7327}, {%r408, %r414, %r411, %r417}, {%r7201, %r7267}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7337}, {%r408, %r414, %r411, %r417}, {%r7210, %r7274}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7346, %r7347}, {%r408, %r414, %r411, %r417}, {%r7219, %r7281}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7356, %r7357}, {%r408, %r414, %r411, %r417}, {%r7228, %r7288}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7366, %r7367}, {%r408, %r414, %r411, %r417}, {%r7237, %r7295}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7376, %r7377}, {%r408, %r414, %r411, %r417}, {%r7246, %r7302}, {%r1718, %r1718};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r16, %r7306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7389, %r16, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7392, %r16, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7395, %r16, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r16, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r16, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r16, %r7336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7407, %r16, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7410, %r16, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7413, %r16, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7416, %r16, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7419, %r16, %r7357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r16, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7425, %r16, %r7367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7428, %r16, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7431, %r16, %r7377;
	// end inline asm
	// begin inline asm
	mov.b32 %r7434, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7435, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7436, %r7386, %r7434;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7439, %r7436, %r7435;
	// end inline asm
	// begin inline asm
	mov.b32 %r7442, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7443, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7444, %r7389, %r7442;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7447, %r7444, %r7443;
	// end inline asm
	// begin inline asm
	mov.b32 %r7450, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7451, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7452, %r7392, %r7450;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7455, %r7452, %r7451;
	// end inline asm
	// begin inline asm
	mov.b32 %r7458, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7459, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7460, %r7395, %r7458;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7463, %r7460, %r7459;
	// end inline asm
	// begin inline asm
	mov.b32 %r7466, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7467, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7468, %r7398, %r7466;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7471, %r7468, %r7467;
	// end inline asm
	// begin inline asm
	mov.b32 %r7474, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7475, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7476, %r7401, %r7474;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7479, %r7476, %r7475;
	// end inline asm
	// begin inline asm
	mov.b32 %r7482, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7483, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7484, %r7404, %r7482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7487, %r7484, %r7483;
	// end inline asm
	// begin inline asm
	mov.b32 %r7490, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7491, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7492, %r7407, %r7490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7495, %r7492, %r7491;
	// end inline asm
	// begin inline asm
	mov.b32 %r7498, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7499, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7500, %r7410, %r7498;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7503, %r7500, %r7499;
	// end inline asm
	// begin inline asm
	mov.b32 %r7506, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7507, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7508, %r7413, %r7506;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7511, %r7508, %r7507;
	// end inline asm
	// begin inline asm
	mov.b32 %r7514, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7515, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7516, %r7416, %r7514;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7519, %r7516, %r7515;
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7523, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7524, %r7419, %r7522;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7527, %r7524, %r7523;
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7531, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7532, %r7422, %r7530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7535, %r7532, %r7531;
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7540, %r7425, %r7538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7543, %r7540, %r7539;
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7548, %r7428, %r7546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7551, %r7548, %r7547;
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7556, %r7431, %r7554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7559, %r7556, %r7555;
	// end inline asm
	// begin inline asm
	mov.b32 %r7565, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7564, %r7565, %r7563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7567, %r7439, %r7564;
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7571, %r7565, %r7570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7574, %r7447, %r7571;
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7578, %r7565, %r7577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7581, %r7455, %r7578;
	// end inline asm
	// begin inline asm
	mov.b32 %r7584, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7585, %r7565, %r7584;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7588, %r7463, %r7585;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7591, %r7567, %r7581, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7595, %r7574, %r7588, %r2206;
	// end inline asm
	shl.b32 	%r7602, %r7595, 4;
	// begin inline asm
	lop3.b32 %r7599, %r2212, %r7591, %r7602, 202;
	// end inline asm
	xor.b32  	%r7742, %r7599, -2004318072;
	// begin inline asm
	mov.b32 %r7606, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7605, %r7606, %r7604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7608, %r7471, %r7605;
	// end inline asm
	// begin inline asm
	mov.b32 %r7611, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7612, %r7606, %r7611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7615, %r7479, %r7612;
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7619, %r7606, %r7618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7622, %r7487, %r7619;
	// end inline asm
	// begin inline asm
	mov.b32 %r7625, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7626, %r7606, %r7625;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7629, %r7495, %r7626;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7632, %r7608, %r7622, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7636, %r7615, %r7629, %r2206;
	// end inline asm
	shl.b32 	%r7643, %r7636, 4;
	// begin inline asm
	lop3.b32 %r7640, %r2212, %r7632, %r7643, 202;
	// end inline asm
	xor.b32  	%r7743, %r7640, -2004318072;
	// begin inline asm
	mov.b32 %r7647, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7645, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7646, %r7647, %r7645;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7649, %r7503, %r7646;
	// end inline asm
	// begin inline asm
	mov.b32 %r7652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7653, %r7647, %r7652;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7656, %r7511, %r7653;
	// end inline asm
	// begin inline asm
	mov.b32 %r7659, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7647, %r7659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7519, %r7660;
	// end inline asm
	// begin inline asm
	mov.b32 %r7666, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7667, %r7647, %r7666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7527, %r7667;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7673, %r7649, %r7663, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7677, %r7656, %r7670, %r2206;
	// end inline asm
	shl.b32 	%r7684, %r7677, 4;
	// begin inline asm
	lop3.b32 %r7681, %r2212, %r7673, %r7684, 202;
	// end inline asm
	xor.b32  	%r7744, %r7681, -2004318072;
	// begin inline asm
	mov.b32 %r7688, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7686, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7688, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7535, %r7687;
	// end inline asm
	// begin inline asm
	mov.b32 %r7693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7688, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7543, %r7694;
	// end inline asm
	// begin inline asm
	mov.b32 %r7700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7688, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7551, %r7701;
	// end inline asm
	// begin inline asm
	mov.b32 %r7707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7708, %r7688, %r7707;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7711, %r7559, %r7708;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7714, %r7690, %r7704, %r2206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7718, %r7697, %r7711, %r2206;
	// end inline asm
	shl.b32 	%r7725, %r7718, 4;
	// begin inline asm
	lop3.b32 %r7722, %r2212, %r7714, %r7725, 202;
	// end inline asm
	xor.b32  	%r7745, %r7722, -2004318072;
	st.shared.u32 	[%rd91], %r7742;
	st.shared.u32 	[%rd92], %r7743;
	st.shared.u32 	[%rd93], %r7744;
	st.shared.u32 	[%rd94], %r7745;
	add.s32 	%r7802, %r7802, -64;
	add.s64 	%rd109, %rd109, 8324;
	setp.eq.s32 	%p229, %r7802, 0;
	@%p229 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass10545
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7751, [%rd9];
	ld.shared.u32 	%r7752, [%rd10+128];
	ld.shared.u32 	%r7759, [%rd10+4];
	ld.shared.u32 	%r7760, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7746, %r7751, %r7752, %r516;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7750, %r7751, %r7752, %r520;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7754, %r7759, %r7760, %r516;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7758, %r7759, %r7760, %r520;
	// end inline asm
	selp.b32 	%r7762, %r7750, %r7746, %p225;
	shfl.sync.bfly.b32	%r163, %r7762, 8, 31, -1;
	selp.b32 	%r7763, %r7758, %r7754, %p225;
	shfl.sync.bfly.b32	%r164, %r7763, 8, 31, -1;
	and.b32  	%r7764, %r7789, 256;
	setp.eq.s32 	%p231, %r7764, 0;
	@%p231 bra 	LBB0_121;
// %bb.120:                             // %L29355
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7765, %r164, %r7758, %p225;
	selp.b32 	%r7766, %r7754, %r164, %p225;
	selp.b32 	%r7767, %r163, %r7750, %p225;
	selp.b32 	%r7768, %r7746, %r163, %p225;
	shl.b32 	%r7769, %r7789, 12;
	or.b32  	%r7770, %r7769, %r95;
	or.b32  	%r7771, %r7770, %r96;
	or.b32  	%r7772, %r7771, %r100;
	cvt.u64.u32 	%rd95, %r7772;
	add.s64 	%rd96, %rd95, %rd11;
	shr.u64 	%rd97, %rd96, 35;
	add.s64 	%rd98, %rd96, %rd97;
	shr.s64 	%rd99, %rd98, 29;
	setp.lt.s64 	%p233, %rd96, 0;
	and.b64  	%rd100, %rd98, -536870912;
	setp.ne.s64 	%p234, %rd100, %rd96;
	and.pred  	%p235, %p233, %p234;
	selp.u64 	%rd101, 1, 0, %p235;
	sub.s64 	%rd102, %rd101, %rd99;
	shl.b64 	%rd103, %rd102, 29;
	add.s64 	%rd104, %rd103, %rd96;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd106, %rd3, %rd105;
	st.global.v4.u32 	[%rd106], {%r7768, %r7766, %r7767, %r7765};
	bra.uni 	LBB0_121;
LBB0_122:                               // %L29585
	st.global.u32 	[%rd4], %r7776;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r7775, 2;
	st.global.u32 	[%rd4], %r7775;
	mov.u64 	%rd107, exception2333;
	cvta.global.u64 	%rd108, %rd107;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd108;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd43, exception12354;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_124:                               // %L29685
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_10449, 
	(
	);
	} // callseq 3
	mov.u64 	%rd52, exception12354;
	cvta.global.u64 	%rd53, %rd52;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd53;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_123:                               // %L29682
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_10449, 
	(
	);
	} // callseq 7
	mov.u64 	%rd58, exception12354;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd59;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_149:                               // %L29679
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_10449, 
	(
	);
	} // callseq 13
	mov.u64 	%rd72, exception12354;
	cvta.global.u64 	%rd73, %rd72;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd73;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 14
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 15
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
