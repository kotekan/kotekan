// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan64(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2065[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<187>;
	.reg .b16 	%rs<272>;
	.reg .b32 	%r<2546>;
	.reg .f32 	%f<721>;
	.reg .b64 	%rd<152>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r105, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd37, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r112, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r112, 33407;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r113, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p2, %r113, 33407;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r106, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd4, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r114, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r115, %r114, %r1;
	or.b32  	%r116, %r115, %r4;
	mul.wide.u32 	%rd42, %r116, 4;
	add.s64 	%rd5, %rd4, %rd42;
	mov.u32 	%r117, 1;
	st.global.u32 	[%rd5], %r117;
	setp.gt.u32 	%p3, %r106, 32767;
	@%p3 bra 	$L__BB0_9;
// %bb.5:                               // %L133
	ld.param.u32 	%r107, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p4, %r107, %r106;
	setp.gt.s32 	%p5, %r107, 65535;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_9;
// %bb.6:                               // %L140
	ld.param.u32 	%r108, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r118, %r107, %r106;
	and.b32  	%r119, %r118, 255;
	setp.ne.s32 	%p7, %r119, 0;
	setp.gt.u32 	%p8, %r108, 511;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_9;
// %bb.7:                               // %L151
	ld.param.u32 	%r109, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p10, %r109, %r108;
	setp.gt.s32 	%p11, %r109, 1023;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_9;
// %bb.8:                               // %L158
	not.b32 	%r120, %r108;
	add.s32 	%r121, %r120, %r109;
	and.b32  	%r122, %r121, 3;
	setp.eq.s32 	%p13, %r122, 0;
	@%p13 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %L273
	ld.param.u32 	%r110, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p14, %r110, 0;
	@%p14 bra 	$L__BB0_12;
// %bb.11:                              // %L275
	ld.param.u32 	%r111, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p15, %r110, %r111;
	setp.lt.s32 	%p16, %r111, 49;
	and.pred  	%p17, %p15, %p16;
	@%p17 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %pass191
	bfe.u32 	%r78, %r1, 2, 1;
	shr.u32 	%r79, %r1, 4;
	shl.b32 	%r131, %r79, 1;
	shl.b32 	%r132, %r78, 2;
	shl.b32 	%r80, %r1, 3;
	and.b32  	%r133, %r80, 24;
	or.b32  	%r134, %r132, %r133;
	or.b32  	%r135, %r131, %r134;
	bfe.u32 	%r136, %r1, 3, 1;
	or.b32  	%r82, %r136, %r135;
	shl.b32 	%r83, %r82, 1;
	or.b32  	%r137, %r83, -255;
	cvt.rn.f32.s32 	%f46, %r137;
	mov.f32 	%f47, 0f44008000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p23, %f44, 0f00000000;
	mov.f32 	%f720, 0f3F800000;
	mov.f32 	%f713, %f720;
	@%p23 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             // %L612
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r145, %f74;
	and.b32  	%r146, %r145, -2147483648;
	or.b32  	%r147, %r146, 1056964608;
	mov.b32 	%f75, %r147;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p24, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p24;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p25, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p25;
	cvt.rzi.s32.f32 	%r148, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r149, %r148, 1;
	setp.eq.b32 	%p26, %r149, 1;
	selp.f32 	%f93, %f91, %f92, %p26;
	and.b32  	%r150, %r148, 2;
	setp.eq.s32 	%p27, %r150, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p27;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p28, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p28;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f713, %f99, %f100;
$L__BB0_15:                             // %L616
	or.b32  	%r151, %r83, -191;
	cvt.rn.f32.s32 	%f104, %r151;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p34, %f6, 0f00000000;
	mov.f32 	%f714, %f720;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L630
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r159, %f132;
	and.b32  	%r160, %r159, -2147483648;
	or.b32  	%r161, %r160, 1056964608;
	mov.b32 	%f133, %r161;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p35, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p35;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p36, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p36;
	cvt.rzi.s32.f32 	%r162, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r163, %r162, 1;
	setp.eq.b32 	%p37, %r163, 1;
	selp.f32 	%f151, %f149, %f150, %p37;
	and.b32  	%r164, %r162, 2;
	setp.eq.s32 	%p38, %r164, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p38;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p39, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p39;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f714, %f157, %f158;
$L__BB0_17:                             // %L634
	or.b32  	%r168, %r83, -127;
	cvt.rn.f32.s32 	%f163, %r168;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p45, %f11, 0f00000000;
	mov.f32 	%f715, %f720;
	@%p45 bra 	$L__BB0_19;
// %bb.18:                              // %L710
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r176, %f191;
	and.b32  	%r177, %r176, -2147483648;
	or.b32  	%r178, %r177, 1056964608;
	mov.b32 	%f192, %r178;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p46, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p46;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p47, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p47;
	cvt.rzi.s32.f32 	%r179, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r180, %r179, 1;
	setp.eq.b32 	%p48, %r180, 1;
	selp.f32 	%f210, %f208, %f209, %p48;
	and.b32  	%r181, %r179, 2;
	setp.eq.s32 	%p49, %r181, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p49;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p50, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p50;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f715, %f216, %f217;
$L__BB0_19:                             // %L714
	or.b32  	%r182, %r83, -63;
	cvt.rn.f32.s32 	%f221, %r182;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p56, %f17, 0f00000000;
	mov.f32 	%f716, %f720;
	@%p56 bra 	$L__BB0_21;
// %bb.20:                              // %L728
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r190, %f249;
	and.b32  	%r191, %r190, -2147483648;
	or.b32  	%r192, %r191, 1056964608;
	mov.b32 	%f250, %r192;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p57, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p57;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p58, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p58;
	cvt.rzi.s32.f32 	%r193, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r194, %r193, 1;
	setp.eq.b32 	%p59, %r194, 1;
	selp.f32 	%f268, %f266, %f267, %p59;
	and.b32  	%r195, %r193, 2;
	setp.eq.s32 	%p60, %r195, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p60;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p61, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p61;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f716, %f274, %f275;
$L__BB0_21:                             // %L732
	or.b32  	%r199, %r83, 1;
	cvt.rn.f32.s32 	%f280, %r199;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p67, %f22, 0f00000000;
	mov.f32 	%f717, %f720;
	@%p67 bra 	$L__BB0_23;
// %bb.22:                              // %L808
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r207, %f308;
	and.b32  	%r208, %r207, -2147483648;
	or.b32  	%r209, %r208, 1056964608;
	mov.b32 	%f309, %r209;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p68, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p68;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p69, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p69;
	cvt.rzi.s32.f32 	%r210, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r211, %r210, 1;
	setp.eq.b32 	%p70, %r211, 1;
	selp.f32 	%f327, %f325, %f326, %p70;
	and.b32  	%r212, %r210, 2;
	setp.eq.s32 	%p71, %r212, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p71;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p72, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p72;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f717, %f333, %f334;
$L__BB0_23:                             // %L812
	or.b32  	%r213, %r83, 65;
	cvt.rn.f32.s32 	%f338, %r213;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p78, %f28, 0f00000000;
	mov.f32 	%f718, %f720;
	@%p78 bra 	$L__BB0_25;
// %bb.24:                              // %L826
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r221, %f366;
	and.b32  	%r222, %r221, -2147483648;
	or.b32  	%r223, %r222, 1056964608;
	mov.b32 	%f367, %r223;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p79, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p79;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p80, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p80;
	cvt.rzi.s32.f32 	%r224, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r225, %r224, 1;
	setp.eq.b32 	%p81, %r225, 1;
	selp.f32 	%f385, %f383, %f384, %p81;
	and.b32  	%r226, %r224, 2;
	setp.eq.s32 	%p82, %r226, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p82;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p83, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p83;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f718, %f391, %f392;
$L__BB0_25:                             // %L830
	or.b32  	%r230, %r83, 129;
	cvt.rn.f32.s32 	%f397, %r230;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p89, %f33, 0f00000000;
	mov.f32 	%f719, %f720;
	@%p89 bra 	$L__BB0_27;
// %bb.26:                              // %L906
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r238, %f425;
	and.b32  	%r239, %r238, -2147483648;
	or.b32  	%r240, %r239, 1056964608;
	mov.b32 	%f426, %r240;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p90, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p90;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p91, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p91;
	cvt.rzi.s32.f32 	%r241, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r242, %r241, 1;
	setp.eq.b32 	%p92, %r242, 1;
	selp.f32 	%f444, %f442, %f443, %p92;
	and.b32  	%r243, %r241, 2;
	setp.eq.s32 	%p93, %r243, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p93;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p94, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p94;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f719, %f450, %f451;
$L__BB0_27:                             // %L910
	or.b32  	%r244, %r83, 193;
	cvt.rn.f32.s32 	%f455, %r244;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p100, %f39, 0f00000000;
	@%p100 bra 	$L__BB0_29;
// %bb.28:                              // %L924
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r252, %f483;
	and.b32  	%r253, %r252, -2147483648;
	or.b32  	%r254, %r253, 1056964608;
	mov.b32 	%f484, %r254;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p101, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p101;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p102, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p102;
	cvt.rzi.s32.f32 	%r255, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r256, %r255, 1;
	setp.eq.b32 	%p103, %r256, 1;
	selp.f32 	%f502, %f500, %f501, %p103;
	and.b32  	%r257, %r255, 2;
	setp.eq.s32 	%p104, %r257, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p104;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p105, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p105;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f720, %f508, %f509;
$L__BB0_29:                             // %L928
	setp.le.s32 	%p148, %r107, %r106;
	mov.u32 	%r2517, 0;
	@%p148 bra 	$L__BB0_40;
// %bb.30:                              // %L1523.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p18, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p29, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p40, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p51, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p62, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p73, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p18;
	selp.f32 	%f108, %f107, %f4, %p29;
	selp.f32 	%f167, %f166, %f9, %p40;
	selp.f32 	%f225, %f224, %f15, %p51;
	selp.f32 	%f284, %f283, %f20, %p62;
	selp.f32 	%f342, %f341, %f26, %p73;
	setp.gt.f32 	%p84, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p84;
	abs.f32 	%f457, %f37;
	mov.b32 	%r138, %f51;
	mov.b32 	%r152, %f109;
	mov.b32 	%r169, %f168;
	mov.b32 	%r183, %f226;
	mov.b32 	%r200, %f285;
	mov.b32 	%r214, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p95, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r139, %r138, -2147483648;
	and.b32  	%r153, %r152, -2147483648;
	and.b32  	%r170, %r169, -2147483648;
	and.b32  	%r184, %r183, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r215, %r214, -2147483648;
	mov.b32 	%r231, %f402;
	selp.f32 	%f459, %f458, %f37, %p95;
	or.b32  	%r140, %r139, 1056964608;
	or.b32  	%r154, %r153, 1056964608;
	or.b32  	%r171, %r170, 1056964608;
	or.b32  	%r185, %r184, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r216, %r215, 1056964608;
	and.b32  	%r232, %r231, -2147483648;
	add.f32 	%f460, %f459, %f459;
	shr.u32 	%r123, %r2, 3;
	mov.b32 	%f52, %r140;
	mov.b32 	%f110, %r154;
	mov.b32 	%f169, %r171;
	mov.b32 	%f227, %r185;
	mov.b32 	%f286, %r202;
	mov.b32 	%f344, %r216;
	or.b32  	%r233, %r232, 1056964608;
	mov.b32 	%r245, %f460;
	cvt.u16.u32 	%rs1, %r123;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r233;
	and.b32  	%r246, %r245, -2147483648;
	and.b16  	%rs2, %rs1, 255;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p19, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p30, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p41, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p52, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p63, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p74, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r247, %r246, 1056964608;
	mul.lo.s16 	%rs3, %rs2, 171;
	selp.f32 	%f56, %f51, %f54, %p19;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p20, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p30;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p31, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p41;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p42, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p52;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p53, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p63;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p64, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p74;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p75, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p85, %f406, 0f4B000000;
	mov.b32 	%f461, %r247;
	shr.u16 	%rs4, %rs3, 13;
	selp.f32 	%f58, %f57, %f56, %p20;
	selp.f32 	%f116, %f115, %f114, %p31;
	selp.f32 	%f175, %f174, %f173, %p42;
	selp.f32 	%f233, %f232, %f231, %p53;
	selp.f32 	%f292, %f291, %f290, %p64;
	selp.f32 	%f350, %f349, %f348, %p75;
	selp.f32 	%f407, %f402, %f405, %p85;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p86, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	mul.lo.s16 	%rs5, %rs4, 48;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p86;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p96, %f464, 0f4B000000;
	sub.s16 	%rs6, %rs1, %rs5;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p96;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p97, %f464, 0f3F000000;
	shl.b32 	%r67, %r1, 2;
	and.b16  	%rs7, %rs6, 255;
	cvt.rzi.s32.f32 	%r141, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r155, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r172, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r186, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r217, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p97;
	and.b32  	%r68, %r67, 32;
	mul.wide.u16 	%r70, %rs7, 64;
	shl.b32 	%r71, %r1, 1;
	add.s32 	%r142, %r141, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r156, %r155, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r173, %r172, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r187, %r186, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r218, %r217, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r234, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	or.b32  	%r125, %r70, %r68;
	and.b32  	%r72, %r71, 8;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r143, %r142, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r157, %r156, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r174, %r173, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r188, %r187, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r219, %r218, 1;
	add.s32 	%r235, %r234, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	or.b32  	%r126, %r125, %r72;
	and.b32  	%r73, %r1, 16;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p21, %r143, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p32, %r157, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p43, %r174, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p54, %r188, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p65, %r205, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p76, %r219, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r236, %r235, 1;
	cvt.rzi.s32.f32 	%r248, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r127, %r126, %r73;
	and.b32  	%r74, %r67, 4;
	selp.f32 	%f70, %f68, %f69, %p21;
	and.b32  	%r144, %r142, 2;
	selp.f32 	%f128, %f126, %f127, %p32;
	and.b32  	%r158, %r156, 2;
	selp.f32 	%f187, %f185, %f186, %p43;
	and.b32  	%r175, %r173, 2;
	selp.f32 	%f245, %f243, %f244, %p54;
	and.b32  	%r189, %r187, 2;
	selp.f32 	%f304, %f302, %f303, %p65;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f362, %f360, %f361, %p76;
	and.b32  	%r220, %r218, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p87, %r236, 1;
	add.s32 	%r249, %r248, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	or.b32  	%r128, %r127, %r74;
	and.b32  	%r75, %r1, 2;
	setp.eq.s32 	%p22, %r144, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p33, %r158, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p44, %r175, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p55, %r189, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p66, %r206, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p77, %r220, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p87;
	and.b32  	%r237, %r235, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r250, %r249, 1;
	or.b32  	%r129, %r128, %r75;
	selp.f32 	%f73, %f70, %f72, %p22;
	selp.f32 	%f131, %f128, %f130, %p33;
	selp.f32 	%f190, %f187, %f189, %p44;
	selp.f32 	%f248, %f245, %f247, %p55;
	selp.f32 	%f307, %f304, %f306, %p66;
	selp.f32 	%f365, %f362, %f364, %p77;
	setp.eq.s32 	%p88, %r237, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p98, %r250, 1;
	bfe.u32 	%r130, %r129, 1, 7;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p88;
	selp.f32 	%f479, %f477, %f478, %p98;
	and.b32  	%r251, %r249, 2;
	ld.param.u64 	%rd1, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd43, %r130, 4;
	mul.f32 	%f102, %f713, %f43;
	mov.f32 	%f103, 0f42800000;
	mul.f32 	%f160, %f714, %f5;
	mul.f32 	%f219, %f715, %f10;
	mul.f32 	%f277, %f716, %f16;
	mul.f32 	%f336, %f717, %f21;
	mul.f32 	%f394, %f718, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p99, %r251, 0;
	sub.f32 	%f481, %f71, %f479;
	cvt.u32.u16 	%r124, %rs6;
	add.s64 	%rd44, %rd1, %rd43;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f719, %f32;
	selp.f32 	%f482, %f479, %f481, %p99;
	ld.param.u64 	%rd2, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r69, %r124, 255;
	ld.global.u32 	%r76, [%rd44];
	shr.u32 	%r77, %r1, 1;
	shr.u32 	%r81, %r1, 3;
	mov.b32 	%r167, %f162;
	mov.b32 	%r166, %f3;
	mov.b32 	%r198, %f279;
	mov.b32 	%r197, %f14;
	mov.b32 	%r229, %f396;
	mov.b32 	%r228, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r165, %r167, %r166;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r227, %r229, %r228;
	// end inline asm
	mul.f32 	%f510, %f720, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r260, %f512;
	mov.b32 	%r259, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r258, %r260, %r259;
	// end inline asm
	mul.lo.s32 	%r297, %r82, 63;
	and.b32  	%r298, %r297, 127;
	cvt.rn.f32.s32 	%f513, %r298;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r299, %f515;
	and.b32  	%r300, %r299, -2147483648;
	or.b32  	%r301, %r300, 1056964608;
	mov.b32 	%f516, %r301;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p106, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p106;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p107, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p107;
	cvt.rzi.s32.f32 	%r302, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r303, %r302, 1;
	setp.eq.b32 	%p108, %r303, 1;
	selp.f32 	%f534, %f532, %f533, %p108;
	selp.f32 	%f535, %f533, %f532, %p108;
	and.b32  	%r304, %r302, 2;
	setp.eq.s32 	%p109, %r304, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p109;
	add.s32 	%r305, %r302, 1;
	and.b32  	%r306, %r305, 2;
	setp.eq.s32 	%p110, %r306, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p110;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p111, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p111;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p112, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p112;
	add.s32 	%r307, %r297, 96;
	and.b32  	%r308, %r307, 127;
	cvt.rn.f32.s32 	%f547, %r308;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r309, %f549;
	and.b32  	%r310, %r309, -2147483648;
	or.b32  	%r311, %r310, 1056964608;
	mov.b32 	%f550, %r311;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p113, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p113;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p114, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p114;
	cvt.rzi.s32.f32 	%r312, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r313, %r312, 1;
	setp.eq.b32 	%p115, %r313, 1;
	selp.f32 	%f568, %f566, %f567, %p115;
	selp.f32 	%f569, %f567, %f566, %p115;
	and.b32  	%r314, %r312, 2;
	setp.eq.s32 	%p116, %r314, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p116;
	add.s32 	%r315, %r312, 1;
	and.b32  	%r316, %r315, 2;
	setp.eq.s32 	%p117, %r316, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p117;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p118, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p118;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p119, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p119;
	mov.b32 	%r262, %f546;
	mov.b32 	%r263, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r261, %r263, %r262;
	// end inline asm
	mov.b32 	%r265, %f543;
	mov.b32 	%r266, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r264, %r266, %r265;
	// end inline asm
	and.b32  	%r317, %r81, 2;
	and.b32  	%r318, %r77, 4;
	or.b32  	%r319, %r78, %r317;
	or.b32  	%r320, %r319, %r318;
	and.b32  	%r321, %r71, 6;
	mul.lo.s32 	%r322, %r320, %r321;
	and.b32  	%r323, %r322, 14;
	cvt.rn.f32.s32 	%f580, %r323;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r324, %f583;
	and.b32  	%r325, %r324, -2147483648;
	or.b32  	%r326, %r325, 1056964608;
	mov.b32 	%f584, %r326;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p120, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p120;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p121, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p121;
	cvt.rzi.s32.f32 	%r327, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r328, %r327, 1;
	setp.eq.b32 	%p122, %r328, 1;
	selp.f32 	%f602, %f600, %f601, %p122;
	selp.f32 	%f603, %f601, %f600, %p122;
	and.b32  	%r329, %r327, 2;
	setp.eq.s32 	%p123, %r329, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p123;
	add.s32 	%r330, %r327, 1;
	and.b32  	%r331, %r330, 2;
	setp.eq.s32 	%p124, %r331, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p124;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p125, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p125;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p126, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p126;
	or.b32  	%r332, %r71, 8;
	mul.lo.s32 	%r333, %r320, %r332;
	and.b32  	%r334, %r333, 14;
	cvt.rn.f32.s32 	%f614, %r334;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r335, %f616;
	and.b32  	%r336, %r335, -2147483648;
	or.b32  	%r337, %r336, 1056964608;
	mov.b32 	%f617, %r337;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p127, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p127;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p128, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p128;
	cvt.rzi.s32.f32 	%r338, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r339, %r338, 1;
	setp.eq.b32 	%p129, %r339, 1;
	selp.f32 	%f635, %f633, %f634, %p129;
	selp.f32 	%f636, %f634, %f633, %p129;
	and.b32  	%r340, %r338, 2;
	setp.eq.s32 	%p130, %r340, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p130;
	add.s32 	%r341, %r338, 1;
	and.b32  	%r342, %r341, 2;
	setp.eq.s32 	%p131, %r342, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p131;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p132, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p132;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p133, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p133;
	mov.b32 	%r268, %f613;
	mov.b32 	%r269, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	mov.b32 	%r271, %f610;
	mov.b32 	%r272, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	xor.b32  	%r292, %r271, -2147483648;
	xor.b32  	%r293, %r272, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r293, %r292;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r269, %r268;
	// end inline asm
	cvt.rn.f32.s32 	%f647, %r322;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r343, %f649;
	and.b32  	%r344, %r343, -2147483648;
	or.b32  	%r345, %r344, 1056964608;
	mov.b32 	%f650, %r345;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p134, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p134;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p135, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p135;
	cvt.rzi.s32.f32 	%r346, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r347, %r346, 1;
	setp.eq.b32 	%p136, %r347, 1;
	selp.f32 	%f668, %f666, %f667, %p136;
	selp.f32 	%f669, %f667, %f666, %p136;
	and.b32  	%r348, %r346, 2;
	setp.eq.s32 	%p137, %r348, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p137;
	add.s32 	%r349, %r346, 1;
	and.b32  	%r350, %r349, 2;
	setp.eq.s32 	%p138, %r350, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p138;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p139, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p139;
	mov.b32 	%r351, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p140, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p140;
	shl.b32 	%r352, %r320, 3;
	add.s32 	%r353, %r322, %r352;
	cvt.rn.f32.s32 	%f680, %r353;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r354, %f682;
	and.b32  	%r355, %r354, -2147483648;
	or.b32  	%r356, %r355, 1056964608;
	mov.b32 	%f683, %r356;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p141, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p141;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p142, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p142;
	cvt.rzi.s32.f32 	%r357, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r358, %r357, 1;
	setp.eq.b32 	%p143, %r358, 1;
	selp.f32 	%f701, %f699, %f700, %p143;
	selp.f32 	%f702, %f700, %f699, %p143;
	and.b32  	%r359, %r357, 2;
	setp.eq.s32 	%p144, %r359, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p144;
	add.s32 	%r360, %r357, 1;
	and.b32  	%r361, %r360, 2;
	setp.eq.s32 	%p145, %r361, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p145;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p146, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p146;
	mov.b32 	%r362, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p147, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p147;
	mov.b32 	%r281, %f712;
	mov.b32 	%r280, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	xor.b32  	%r284, %r362, -2147483648;
	xor.b32  	%r283, %r351, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r284, %r283;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r269, %r268;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r291, %r293, %r292;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r294, %r269, %r268;
	// end inline asm
	shl.b32 	%r364, %r110, 8;
	shl.b32 	%r365, %r2, 5;
	and.b32  	%r366, %r67, 28;
	and.b32  	%r367, %r365, 96;
	or.b32  	%r368, %r367, %r366;
	shl.b32 	%r369, %r69, 8;
	or.b32  	%r370, %r73, %r3;
	or.b32  	%r21, %r370, %r68;
	and.b32  	%r371, %r365, 128;
	or.b32  	%r372, %r368, %r371;
	or.b32  	%r373, %r372, %r369;
	add.s32 	%r22, %r373, %r364;
	bfe.s32 	%r374, %r1, 3, 1;
	and.b32  	%r23, %r1, 8;
	shl.b32 	%r375, %r1, 4;
	or.b32  	%r376, %r23, %r375;
	shr.u32 	%r377, %r376, 2;
	and.b32  	%r378, %r377, 30;
	shr.u32 	%r379, %r3, 1;
	and.b32  	%r380, %r4, 32;
	or.b32  	%r381, %r380, %r379;
	or.b32  	%r382, %r70, %r73;
	or.b32  	%r383, %r382, %r68;
	or.b32  	%r384, %r383, %r72;
	or.b32  	%r385, %r384, %r74;
	or.b32  	%r386, %r385, %r75;
	bfe.u32 	%r387, %r386, 1, 5;
	mul.lo.s32 	%r388, %r387, 65;
	add.s32 	%r389, %r381, %r388;
	or.b32  	%r390, %r381, 8;
	add.s32 	%r391, %r390, %r388;
	or.b32  	%r392, %r381, 16;
	add.s32 	%r393, %r392, %r388;
	or.b32  	%r394, %r381, 24;
	add.s32 	%r395, %r394, %r388;
	shl.b32 	%r396, %r3, 1;
	or.b32  	%r397, %r79, %r396;
	mul.lo.s32 	%r398, %r397, 65;
	add.s32 	%r399, %r378, %r398;
	mul.wide.u32 	%rd45, %r399, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd6, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r378;
	cvt.u64.u32 	%rd48, %r398;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd7, %rd46, %rd50;
	shl.b32 	%r400, %r108, 16;
	add.s32 	%r401, %r400, -196608;
	and.b32  	%r402, %r70, 192;
	or.b32  	%r403, %r402, %r81;
	shl.b32 	%r404, %r3, 10;
	shl.b32 	%r405, %r403, 8;
	or.b32  	%r406, %r366, %r404;
	or.b32  	%r407, %r406, %r367;
	or.b32  	%r408, %r407, %r371;
	or.b32  	%r25, %r408, %r405;
	cvt.s64.s32 	%rd8, %r401;
	bfe.s32 	%r409, %r3, 1, 1;
	and.b32  	%r410, %r3, 2;
	setp.eq.s32 	%p149, %r410, 0;
	and.b32  	%r411, %r409, 520;
	and.b32  	%r412, %r3, 1;
	neg.s32 	%r413, %r412;
	setp.eq.b32 	%p150, %r412, 1;
	and.b32  	%r414, %r413, 1040;
	mul.lo.s32 	%r415, %r79, 65;
	shr.u32 	%r416, %r3, 3;
	mul.lo.s32 	%r417, %r416, 130;
	bfe.s32 	%r418, %r3, 2, 1;
	and.b32  	%r419, %r3, 4;
	setp.eq.s32 	%p151, %r419, 0;
	and.b32  	%r420, %r418, 260;
	add.s32 	%r421, %r414, %r378;
	add.s32 	%r422, %r421, %r411;
	add.s32 	%r423, %r422, %r415;
	add.s32 	%r424, %r423, %r417;
	add.s32 	%r425, %r424, %r420;
	mul.wide.u32 	%rd51, %r425, 4;
	add.s64 	%rd9, %rd46, %rd51;
	selp.b64 	%rd52, 0, 260, %p151;
	cvt.u64.u32 	%rd53, %r417;
	cvt.u64.u32 	%rd54, %r415;
	selp.b64 	%rd55, 0, 520, %p149;
	selp.b64 	%rd56, 1040, 0, %p150;
	add.s64 	%rd57, %rd47, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd54;
	add.s64 	%rd60, %rd59, %rd53;
	add.s64 	%rd61, %rd60, %rd52;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd10, %rd46, %rd62;
	cvt.u64.u32 	%rd63, %r424;
	add.s64 	%rd64, %rd63, %rd52;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd11, %rd46, %rd65;
	add.s32 	%r426, %r425, 2113;
	mul.wide.u32 	%rd66, %r426, 4;
	add.s64 	%rd12, %rd46, %rd66;
	add.s32 	%r427, %r425, 2082;
	mul.wide.u32 	%rd67, %r427, 4;
	add.s64 	%rd13, %rd46, %rd67;
	add.s32 	%r428, %r425, 2114;
	mul.wide.u32 	%rd68, %r428, 4;
	add.s64 	%rd14, %rd46, %rd68;
	add.s32 	%r429, %r425, 4194;
	mul.wide.u32 	%rd69, %r429, 4;
	add.s64 	%rd15, %rd46, %rd69;
	add.s32 	%r430, %r425, 4163;
	mul.wide.u32 	%rd70, %r430, 4;
	add.s64 	%rd16, %rd46, %rd70;
	add.s32 	%r431, %r425, 4195;
	mul.wide.u32 	%rd71, %r431, 4;
	add.s64 	%rd17, %rd46, %rd71;
	add.s32 	%r432, %r425, 6275;
	mul.wide.u32 	%rd72, %r432, 4;
	add.s64 	%rd18, %rd46, %rd72;
	add.s32 	%r433, %r425, 6244;
	mul.wide.u32 	%rd73, %r433, 4;
	add.s64 	%rd19, %rd46, %rd73;
	add.s32 	%r434, %r425, 6276;
	mul.wide.u32 	%rd74, %r434, 4;
	add.s64 	%rd20, %rd46, %rd74;
	setp.lt.u32 	%p152, %r1, 16;
	selp.b32 	%r435, 0, 520, %p152;
	and.b32  	%r436, %r374, 1040;
	bfe.s32 	%r437, %r1, 2, 1;
	and.b32  	%r26, %r437, 260;
	or.b32  	%r438, %r381, %r436;
	or.b32  	%r27, %r438, %r435;
	or.b32  	%r439, %r390, %r436;
	add.s32 	%r28, %r439, %r435;
	add.s32 	%r440, %r392, %r436;
	or.b32  	%r29, %r440, %r435;
	add.s32 	%r441, %r394, %r436;
	add.s32 	%r30, %r441, %r435;
	mul.wide.u32 	%rd75, %r395, 4;
	add.s64 	%rd21, %rd46, %rd75;
	mul.wide.u32 	%rd76, %r393, 4;
	add.s64 	%rd22, %rd46, %rd76;
	mul.wide.u32 	%rd77, %r391, 4;
	add.s64 	%rd23, %rd46, %rd77;
	mul.wide.u32 	%rd78, %r389, 4;
	add.s64 	%rd24, %rd46, %rd78;
	mov.u16 	%rs243, 25600;
	mov.u16 	%rs245, 21504;
	mov.u16 	%rs253, 18432;
	mov.u16 	%rs267, -14592;
	mov.u32 	%r2519, %r2517;
	mov.u32 	%r2520, %r2517;
	mov.u32 	%r2521, %r2517;
	mov.u32 	%r2522, %r2517;
	mov.u32 	%r2523, %r2517;
	mov.u32 	%r2524, %r2517;
	mov.u32 	%r2525, %r2517;
	mov.u32 	%r2526, %r2517;
	mov.u32 	%r2541, %r2517;
	mov.u32 	%r2542, %r2517;
	mov.u32 	%r2543, %r2517;
	mov.u32 	%r2544, %r2517;
	mov.u32 	%r43, %r2517;
	bra.uni 	$L__BB0_31;
$L__BB0_39:                             // %pass10421
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r2511, %r2518, %r25;
	or.b32  	%r2512, %r2511, 196608;
	cvt.s64.s32 	%rd132, %r2512;
	add.s64 	%rd133, %rd132, %rd8;
	shr.u64 	%rd134, %rd133, 39;
	add.s64 	%rd135, %rd133, %rd134;
	shr.s64 	%rd136, %rd135, 25;
	setp.lt.s64 	%p181, %rd133, 0;
	and.b64  	%rd137, %rd135, -33554432;
	setp.ne.s64 	%p182, %rd137, %rd133;
	and.pred  	%p183, %p181, %p182;
	selp.u64 	%rd138, 1, 0, %p183;
	sub.s64 	%rd139, %rd138, %rd136;
	shl.b64 	%rd140, %rd139, 25;
	add.s64 	%rd141, %rd140, %rd133;
	shl.b64 	%rd142, %rd141, 2;
	add.s64 	%rd143, %rd3, %rd142;
	st.global.v4.u32 	[%rd143], {%r101, %r103, %r102, %r104};
	setp.ne.s32 	%p184, %r43, 32512;
	add.s32 	%r43, %r43, 256;
	add.s32 	%r2513, %r43, %r106;
	setp.lt.s32 	%p185, %r2513, %r107;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_40;
$L__BB0_31:                             // %L1523
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_32 Depth 2
	setp.eq.s32 	%p153, %r23, 0;
	and.b32  	%r44, %r43, 32512;
	or.b32  	%r507, %r21, %r44;
	add.s32 	%r508, %r507, %r106;
	mad.lo.s32 	%r509, %r508, 12288, %r22;
	mul.hi.s32 	%r510, %r509, 715827883;
	shr.u32 	%r511, %r510, 31;
	shr.s32 	%r512, %r510, 26;
	add.s32 	%r513, %r512, %r511;
	setp.lt.s32 	%p154, %r509, 0;
	mul.lo.s32 	%r514, %r513, 402653184;
	setp.ne.s32 	%p155, %r514, %r509;
	and.pred  	%p156, %p154, %p155;
	selp.s32 	%r515, -1, 0, %p156;
	add.s32 	%r516, %r513, %r515;
	or.b32  	%r517, %r509, 1;
	mad.lo.s32 	%r518, %r516, -402653184, %r517;
	mul.wide.s32 	%rd79, %r518, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.v4.u32 	{%r519, %r520, %r521, %r522}, [%rd80+-4];
	or.b32  	%r523, %r507, 64;
	add.s32 	%r524, %r523, %r106;
	mad.lo.s32 	%r525, %r524, 12288, %r22;
	mul.hi.s32 	%r526, %r525, 715827883;
	shr.u32 	%r527, %r526, 31;
	shr.s32 	%r528, %r526, 26;
	add.s32 	%r529, %r528, %r527;
	setp.lt.s32 	%p157, %r525, 0;
	mul.lo.s32 	%r530, %r529, 402653184;
	setp.ne.s32 	%p158, %r530, %r525;
	and.pred  	%p159, %p157, %p158;
	selp.s32 	%r531, -1, 0, %p159;
	add.s32 	%r532, %r529, %r531;
	or.b32  	%r533, %r525, 1;
	mad.lo.s32 	%r534, %r532, -402653184, %r533;
	mul.wide.s32 	%rd81, %r534, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r535, %r536, %r537, %r538}, [%rd82+-4];
	or.b32  	%r539, %r507, 128;
	add.s32 	%r540, %r539, %r106;
	mad.lo.s32 	%r541, %r540, 12288, %r22;
	mul.hi.s32 	%r542, %r541, 715827883;
	shr.u32 	%r543, %r542, 31;
	shr.s32 	%r544, %r542, 26;
	add.s32 	%r545, %r544, %r543;
	setp.lt.s32 	%p160, %r541, 0;
	mul.lo.s32 	%r546, %r545, 402653184;
	setp.ne.s32 	%p161, %r546, %r541;
	and.pred  	%p162, %p160, %p161;
	selp.s32 	%r547, -1, 0, %p162;
	add.s32 	%r548, %r545, %r547;
	or.b32  	%r549, %r541, 1;
	mad.lo.s32 	%r550, %r548, -402653184, %r549;
	mul.wide.s32 	%rd83, %r550, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r551, %r552, %r553, %r554}, [%rd84+-4];
	or.b32  	%r555, %r507, 192;
	add.s32 	%r556, %r555, %r106;
	mad.lo.s32 	%r557, %r556, 12288, %r22;
	mul.hi.s32 	%r558, %r557, 715827883;
	shr.u32 	%r559, %r558, 31;
	shr.s32 	%r560, %r558, 26;
	add.s32 	%r561, %r560, %r559;
	setp.lt.s32 	%p163, %r557, 0;
	mul.lo.s32 	%r562, %r561, 402653184;
	setp.ne.s32 	%p164, %r562, %r557;
	and.pred  	%p165, %p163, %p164;
	selp.s32 	%r563, -1, 0, %p165;
	add.s32 	%r564, %r561, %r563;
	or.b32  	%r565, %r557, 1;
	mad.lo.s32 	%r566, %r564, -402653184, %r565;
	mul.wide.s32 	%rd85, %r566, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r567, %r568, %r569, %r570}, [%rd86+-4];
	selp.b32 	%r571, %r521, %r519, %p153;
	shfl.sync.bfly.b32	%r572, %r571, 8, 31, -1;
	selp.b32 	%r443, %r519, %r572, %p153;
	selp.b32 	%r444, %r572, %r521, %p153;
	selp.b32 	%r573, %r522, %r520, %p153;
	shfl.sync.bfly.b32	%r574, %r573, 8, 31, -1;
	selp.b32 	%r451, %r520, %r574, %p153;
	selp.b32 	%r452, %r574, %r522, %p153;
	selp.b32 	%r575, %r537, %r535, %p153;
	shfl.sync.bfly.b32	%r576, %r575, 8, 31, -1;
	selp.b32 	%r459, %r535, %r576, %p153;
	selp.b32 	%r460, %r576, %r537, %p153;
	selp.b32 	%r577, %r538, %r536, %p153;
	shfl.sync.bfly.b32	%r578, %r577, 8, 31, -1;
	selp.b32 	%r467, %r536, %r578, %p153;
	selp.b32 	%r468, %r578, %r538, %p153;
	selp.b32 	%r579, %r553, %r551, %p153;
	shfl.sync.bfly.b32	%r580, %r579, 8, 31, -1;
	selp.b32 	%r475, %r551, %r580, %p153;
	selp.b32 	%r476, %r580, %r553, %p153;
	selp.b32 	%r581, %r554, %r552, %p153;
	shfl.sync.bfly.b32	%r582, %r581, 8, 31, -1;
	selp.b32 	%r483, %r552, %r582, %p153;
	selp.b32 	%r484, %r582, %r554, %p153;
	selp.b32 	%r583, %r569, %r567, %p153;
	shfl.sync.bfly.b32	%r584, %r583, 8, 31, -1;
	selp.b32 	%r491, %r567, %r584, %p153;
	selp.b32 	%r492, %r584, %r569, %p153;
	selp.b32 	%r585, %r570, %r568, %p153;
	shfl.sync.bfly.b32	%r586, %r585, 8, 31, -1;
	selp.b32 	%r499, %r568, %r586, %p153;
	selp.b32 	%r500, %r586, %r570, %p153;
	mov.u32 	%r501, 21520;
	// begin inline asm
	prmt.b32 %r442, %r443, %r444, %r501;
	// end inline asm
	mov.u32 	%r505, 30258;
	// begin inline asm
	prmt.b32 %r446, %r443, %r444, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r450, %r451, %r452, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r454, %r451, %r452, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r458, %r459, %r460, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r459, %r460, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r466, %r467, %r468, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r470, %r467, %r468, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r474, %r475, %r476, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r478, %r475, %r476, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r482, %r483, %r484, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r483, %r484, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r490, %r491, %r492, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r494, %r491, %r492, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r498, %r499, %r500, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r502, %r499, %r500, %r505;
	// end inline asm
	st.shared.u32 	[%rd9], %r442;
	st.shared.u32 	[%rd10+128], %r446;
	st.shared.u32 	[%rd10+4], %r450;
	st.shared.u32 	[%rd10+132], %r454;
	st.shared.u32 	[%rd11+8324], %r458;
	st.shared.u32 	[%rd12], %r462;
	st.shared.u32 	[%rd13], %r466;
	st.shared.u32 	[%rd14], %r470;
	st.shared.u32 	[%rd11+16648], %r474;
	st.shared.u32 	[%rd15], %r478;
	st.shared.u32 	[%rd16], %r482;
	st.shared.u32 	[%rd17], %r486;
	st.shared.u32 	[%rd11+24972], %r490;
	st.shared.u32 	[%rd18], %r494;
	st.shared.u32 	[%rd19], %r498;
	st.shared.u32 	[%rd20], %r502;
	bar.sync 	0;
	or.b32  	%r45, %r43, %r133;
	shr.u32 	%r2532, %r45, 6;
	mov.u64 	%rd148, %rd24;
	mov.u64 	%rd149, %rd23;
	mov.u64 	%rd150, %rd22;
	mov.u64 	%rd151, %rd21;
	mov.u32 	%r2533, %r2519;
	mov.u32 	%r2534, %r2520;
	mov.u32 	%r2535, %r2521;
	mov.u32 	%r2536, %r2522;
	mov.u32 	%r2537, %r2523;
	mov.u32 	%r2538, %r2524;
	mov.u32 	%r2539, %r2525;
	mov.u32 	%r2540, %r2526;
	mov.u32 	%r2545, %r2517;
$L__BB0_32:                             // %L11832
                                        //   Parent Loop BB0_31 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2526, %r2544;
	mov.u32 	%r2525, %r2543;
	mov.u32 	%r2524, %r2542;
	mov.u32 	%r2523, %r2541;
	mov.u32 	%r2522, %r2540;
	mov.u32 	%r2521, %r2539;
	mov.u32 	%r2520, %r2538;
	mov.u32 	%r2519, %r2537;
	add.s32 	%r2399, %r45, %r2545;
	bfe.s32 	%r2400, %r2399, 4, 1;
	and.b32  	%r2401, %r2400, 65;
	bfe.s32 	%r2402, %r2399, 3, 1;
	and.b32  	%r2403, %r2402, 130;
	and.b32  	%r2404, %r2532, 3;
	mul.lo.s32 	%r2405, %r2404, 2081;
	add.s32 	%r2406, %r27, %r2401;
	add.s32 	%r2407, %r2406, %r2403;
	add.s32 	%r2408, %r2407, %r2405;
	add.s32 	%r2409, %r2408, %r26;
	mul.wide.u32 	%rd87, %r2409, 4;
	add.s64 	%rd89, %rd46, %rd87;
	ld.shared.u32 	%r2541, [%rd89];
	// begin inline asm
	mov.b32 %r592, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r603, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r591, %r2541, -2004318072;
	mov.u32 	%r590, 983055;
	// begin inline asm
	lop3.b32 %r589, %r590, %r591, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r593, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r594, %r592, %r593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r597, %r589, %r594;
	// end inline asm
	mov.u32 	%r601, 15728880;
	// begin inline asm
	lop3.b32 %r600, %r601, %r591, %r603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r604, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r605, %r603, %r604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r608, %r600, %r605;
	// end inline asm
	shr.u32 	%r613, %r591, 8;
	// begin inline asm
	lop3.b32 %r611, %r590, %r613, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r615, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r616, %r592, %r615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r619, %r611, %r616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r622, %r601, %r613, %r603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r626, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r627, %r603, %r626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r630, %r622, %r627;
	// end inline asm
	// begin inline asm
	mov.b32 %r638, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r649, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r637, %r2533, -2004318072;
	// begin inline asm
	lop3.b32 %r635, %r590, %r637, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r640, %r638, %r639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r643, %r635, %r640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r646, %r601, %r637, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r651, %r649, %r650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r654, %r646, %r651;
	// end inline asm
	shr.u32 	%r659, %r637, 8;
	// begin inline asm
	lop3.b32 %r657, %r590, %r659, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r662, %r638, %r661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r665, %r657, %r662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r668, %r601, %r659, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r672, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r673, %r649, %r672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r676, %r668, %r673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r681, %r165, %r643, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r687, %r165, %r654, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r693, %r165, %r665, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r699, %r165, %r676, %r2517;
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r719, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r707, %r2519, -2004318072;
	// begin inline asm
	lop3.b32 %r705, %r590, %r707, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r710, %r708, %r709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r713, %r705, %r710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r716, %r601, %r707, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r721, %r719, %r720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r724, %r716, %r721;
	// end inline asm
	shr.u32 	%r729, %r707, 8;
	// begin inline asm
	lop3.b32 %r727, %r590, %r729, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r731, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r732, %r708, %r731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r735, %r727, %r732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r738, %r601, %r729, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r742, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r743, %r719, %r742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r746, %r738, %r743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r751, %r749, %r713, %r681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r755, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r757, %r755, %r724, %r687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r763, %r761, %r735, %r693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r769, %r767, %r746, %r699;
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r789, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r777, %r2523, -2004318072;
	// begin inline asm
	lop3.b32 %r775, %r590, %r777, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r780, %r778, %r779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r783, %r775, %r780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r786, %r601, %r777, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r791, %r789, %r790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r794, %r786, %r791;
	// end inline asm
	shr.u32 	%r799, %r777, 8;
	// begin inline asm
	lop3.b32 %r797, %r590, %r799, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r778, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r808, %r601, %r799, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r789, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r821, %r227, %r783, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r827, %r227, %r794, %r757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r833, %r227, %r805, %r763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r839, %r227, %r816, %r769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r843, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r874, %r843, %r597, %r821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r849, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r871, %r849, %r608, %r827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r855, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r883, %r855, %r619, %r833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r861, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r880, %r861, %r630, %r839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r867, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r869, %r867, %r871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r872, %r261, %r874, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r876, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r878, %r876, %r880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r261, %r883, %r878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r885, %r264, %r874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r888, %r261, %r871, %r885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r892, %r264, %r883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r895, %r261, %r880, %r892;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r926, %r923}, {%r267, %r273, %r270, %r276}, {%r872, %r888}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r935, %r932}, {%r267, %r273, %r270, %r276}, {%r881, %r895}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r919, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r921, %r919, %r923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r924, %r279, %r926, %r921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r928, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r930, %r928, %r932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r933, %r279, %r935, %r930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r937, %r282, %r926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r940, %r279, %r923, %r937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r944, %r282, %r935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r947, %r279, %r932, %r944;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r951, %r952}, {%r285, %r291, %r288, %r294}, {%r924, %r940}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r961, %r962}, {%r285, %r291, %r288, %r294}, {%r933, %r947}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r971, %r76, %r951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r974, %r76, %r952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r977, %r76, %r961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r980, %r76, %r962;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs267, %rs267};
	// end inline asm
	mov.u16 	%rs58, 18176;
	// begin inline asm
	mov.b32 %r984, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r985, %r971, %r983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r988, %r985, %r984;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r993, %r974, %r991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r996, %r993, %r992;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1001, %r977, %r999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1004, %r1001, %r1000;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1009, %r980, %r1007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1012, %r1009, %r1008;
	// end inline asm
	mov.u16 	%rs72, 26112;
	// begin inline asm
	mov.b32 %r1018, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1016, %r988, %r1018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1019, %r996, %r1018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1022, %r1004, %r1018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1025, %r1012, %r1018;
	// end inline asm
	mov.u32 	%r1031, 25152;
	// begin inline asm
	prmt.b32 %r1028, %r1016, %r1022, %r1031;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1032, %r1019, %r1025, %r1031;
	// end inline asm
	shl.b32 	%r1039, %r1032, 4;
	mov.u32 	%r1037, 252645135;
	// begin inline asm
	lop3.b32 %r1036, %r1037, %r1028, %r1039, 202;
	// end inline asm
	st.shared.u32 	[%rd148], %r1036;
	add.s32 	%r2410, %r28, %r2401;
	add.s32 	%r2411, %r2410, %r2403;
	add.s32 	%r2412, %r2411, %r2405;
	add.s32 	%r2413, %r2412, %r26;
	mul.wide.u32 	%rd90, %r2413, 4;
	add.s64 	%rd91, %rd46, %rd90;
	ld.shared.u32 	%r2542, [%rd91];
	// begin inline asm
	mov.b32 %r1045, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1044, %r2542, -2004318072;
	// begin inline asm
	lop3.b32 %r1042, %r590, %r1044, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1045, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1053, %r601, %r1044, %r1056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1056, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	shr.u32 	%r1066, %r1044, 8;
	// begin inline asm
	lop3.b32 %r1064, %r590, %r1066, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1045, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1075, %r601, %r1066, %r1056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1056, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1090, %r2534, -2004318072;
	// begin inline asm
	lop3.b32 %r1088, %r590, %r1090, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1091, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1099, %r601, %r1090, %r1102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1102, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	shr.u32 	%r1112, %r1090, 8;
	// begin inline asm
	lop3.b32 %r1110, %r590, %r1112, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1091, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1121, %r601, %r1112, %r1102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1102, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1134, %r165, %r1096, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1140, %r165, %r1107, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1146, %r165, %r1118, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1152, %r165, %r1129, %r2517;
	// end inline asm
	// begin inline asm
	mov.b32 %r1161, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1172, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1160, %r2520, -2004318072;
	// begin inline asm
	lop3.b32 %r1158, %r590, %r1160, %r1161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1163, %r1161, %r1162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1166, %r1158, %r1163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1169, %r601, %r1160, %r1172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1174, %r1172, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1177, %r1169, %r1174;
	// end inline asm
	shr.u32 	%r1182, %r1160, 8;
	// begin inline asm
	lop3.b32 %r1180, %r590, %r1182, %r1161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1184, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1185, %r1161, %r1184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1188, %r1180, %r1185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1191, %r601, %r1182, %r1172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1195, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1196, %r1172, %r1195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1199, %r1191, %r1196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1202, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1204, %r1202, %r1166, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1208, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1210, %r1208, %r1177, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1214, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1216, %r1214, %r1188, %r1146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1222, %r1220, %r1199, %r1152;
	// end inline asm
	// begin inline asm
	mov.b32 %r1231, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1242, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1230, %r2524, -2004318072;
	// begin inline asm
	lop3.b32 %r1228, %r590, %r1230, %r1231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1233, %r1231, %r1232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1236, %r1228, %r1233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1239, %r601, %r1230, %r1242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1243, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1244, %r1242, %r1243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1247, %r1239, %r1244;
	// end inline asm
	shr.u32 	%r1252, %r1230, 8;
	// begin inline asm
	lop3.b32 %r1250, %r590, %r1252, %r1231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1254, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1255, %r1231, %r1254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1258, %r1250, %r1255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1261, %r601, %r1252, %r1242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1265, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1266, %r1242, %r1265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1269, %r1261, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r227, %r1236, %r1204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r227, %r1247, %r1210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r227, %r1258, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r227, %r1269, %r1222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1327, %r1296, %r1050, %r1274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1324, %r1302, %r1061, %r1280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1336, %r1308, %r1072, %r1286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1333, %r1314, %r1083, %r1292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1325, %r261, %r1327, %r1322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1329, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r1329, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r261, %r1336, %r1331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r264, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1341, %r261, %r1324, %r1338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1345, %r264, %r1336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1348, %r261, %r1333, %r1345;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1379, %r1376}, {%r267, %r273, %r270, %r276}, {%r1325, %r1341}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1388, %r1385}, {%r267, %r273, %r270, %r276}, {%r1334, %r1348}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r1372, %r1376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1377, %r279, %r1379, %r1374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1381, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1383, %r1381, %r1385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1386, %r279, %r1388, %r1383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1390, %r282, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1393, %r279, %r1376, %r1390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r282, %r1388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1400, %r279, %r1385, %r1397;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1404, %r1405}, {%r285, %r291, %r288, %r294}, {%r1377, %r1393}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1414, %r1415}, {%r285, %r291, %r288, %r294}, {%r1386, %r1400}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1424, %r76, %r1404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1427, %r76, %r1405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1430, %r76, %r1414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1433, %r76, %r1415;
	// end inline asm
	// begin inline asm
	mov.b32 %r1436, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1438, %r1424, %r1436;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1441, %r1438, %r1437;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1446, %r1427, %r1444;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1449, %r1446, %r1445;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1454, %r1430, %r1452;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1457, %r1454, %r1453;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1462, %r1433, %r1460;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1465, %r1462, %r1461;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1441, %r1471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1449, %r1471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1457, %r1471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1465, %r1471;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1481, %r1469, %r1475, %r1031;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1485, %r1472, %r1478, %r1031;
	// end inline asm
	shl.b32 	%r1492, %r1485, 4;
	// begin inline asm
	lop3.b32 %r1489, %r1037, %r1481, %r1492, 202;
	// end inline asm
	st.shared.u32 	[%rd149], %r1489;
	add.s32 	%r2414, %r29, %r2401;
	add.s32 	%r2415, %r2414, %r2403;
	add.s32 	%r2416, %r2415, %r2405;
	add.s32 	%r2417, %r2416, %r26;
	mul.wide.u32 	%rd92, %r2417, 4;
	add.s64 	%rd93, %rd46, %rd92;
	ld.shared.u32 	%r2543, [%rd93];
	// begin inline asm
	mov.b32 %r1498, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1497, %r2543, -2004318072;
	// begin inline asm
	lop3.b32 %r1495, %r590, %r1497, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1498, %r1499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1503, %r1495, %r1500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1506, %r601, %r1497, %r1509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1511, %r1509, %r1510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1514, %r1506, %r1511;
	// end inline asm
	shr.u32 	%r1519, %r1497, 8;
	// begin inline asm
	lop3.b32 %r1517, %r590, %r1519, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1522, %r1498, %r1521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1525, %r1517, %r1522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1528, %r601, %r1519, %r1509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1532, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1533, %r1509, %r1532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1536, %r1528, %r1533;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1555, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1543, %r2535, -2004318072;
	// begin inline asm
	lop3.b32 %r1541, %r590, %r1543, %r1544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1545, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1546, %r1544, %r1545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1549, %r1541, %r1546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1552, %r601, %r1543, %r1555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1556, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1557, %r1555, %r1556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1560, %r1552, %r1557;
	// end inline asm
	shr.u32 	%r1565, %r1543, 8;
	// begin inline asm
	lop3.b32 %r1563, %r590, %r1565, %r1544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1567, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1568, %r1544, %r1567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1571, %r1563, %r1568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1574, %r601, %r1565, %r1555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1578, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1579, %r1555, %r1578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1582, %r1574, %r1579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1587, %r165, %r1549, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1593, %r165, %r1560, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1599, %r165, %r1571, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r165, %r1582, %r2517;
	// end inline asm
	// begin inline asm
	mov.b32 %r1614, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1625, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1613, %r2521, -2004318072;
	// begin inline asm
	lop3.b32 %r1611, %r590, %r1613, %r1614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1616, %r1614, %r1615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1619, %r1611, %r1616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1622, %r601, %r1613, %r1625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1627, %r1625, %r1626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1630, %r1622, %r1627;
	// end inline asm
	shr.u32 	%r1635, %r1613, 8;
	// begin inline asm
	lop3.b32 %r1633, %r590, %r1635, %r1614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1637, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1638, %r1614, %r1637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1641, %r1633, %r1638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1644, %r601, %r1635, %r1625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1648, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1649, %r1625, %r1648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1652, %r1644, %r1649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1655, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1657, %r1655, %r1619, %r1587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1661, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1663, %r1661, %r1630, %r1593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1667, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1669, %r1667, %r1641, %r1599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1673, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1675, %r1673, %r1652, %r1605;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1683, %r2525, -2004318072;
	// begin inline asm
	lop3.b32 %r1681, %r590, %r1683, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1685, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1686, %r1684, %r1685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1689, %r1681, %r1686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1692, %r601, %r1683, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1696, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1697, %r1695, %r1696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1700, %r1692, %r1697;
	// end inline asm
	shr.u32 	%r1705, %r1683, 8;
	// begin inline asm
	lop3.b32 %r1703, %r590, %r1705, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1707, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1708, %r1684, %r1707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1711, %r1703, %r1708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1714, %r601, %r1705, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1719, %r1695, %r1718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1722, %r1714, %r1719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r227, %r1689, %r1657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r227, %r1700, %r1663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r227, %r1711, %r1669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1745, %r227, %r1722, %r1675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1749, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r1749, %r1503, %r1727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1755, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r1755, %r1514, %r1733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1761, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1789, %r1761, %r1525, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1767, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r1767, %r1536, %r1745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1773, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1775, %r1773, %r1777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r261, %r1780, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1782, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1784, %r1782, %r1786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r261, %r1789, %r1784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1791, %r264, %r1780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r261, %r1777, %r1791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1798, %r264, %r1789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1801, %r261, %r1786, %r1798;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1832, %r1829}, {%r267, %r273, %r270, %r276}, {%r1778, %r1794}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1841, %r1838}, {%r267, %r273, %r270, %r276}, {%r1787, %r1801}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1825, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1827, %r1825, %r1829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r279, %r1832, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1834, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1836, %r1834, %r1838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r279, %r1841, %r1836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1843, %r282, %r1832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r279, %r1829, %r1843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1850, %r282, %r1841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1853, %r279, %r1838, %r1850;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1857, %r1858}, {%r285, %r291, %r288, %r294}, {%r1830, %r1846}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1867, %r1868}, {%r285, %r291, %r288, %r294}, {%r1839, %r1853}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1877, %r76, %r1857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1880, %r76, %r1858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1883, %r76, %r1867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1886, %r76, %r1868;
	// end inline asm
	// begin inline asm
	mov.b32 %r1889, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1890, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1891, %r1877, %r1889;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1894, %r1891, %r1890;
	// end inline asm
	// begin inline asm
	mov.b32 %r1897, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1898, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1899, %r1880, %r1897;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1902, %r1899, %r1898;
	// end inline asm
	// begin inline asm
	mov.b32 %r1905, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1906, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1907, %r1883, %r1905;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1910, %r1907, %r1906;
	// end inline asm
	// begin inline asm
	mov.b32 %r1913, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1914, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1915, %r1886, %r1913;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1918, %r1915, %r1914;
	// end inline asm
	// begin inline asm
	mov.b32 %r1924, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1922, %r1894, %r1924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1925, %r1902, %r1924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1928, %r1910, %r1924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1918, %r1924;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1934, %r1922, %r1928, %r1031;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1938, %r1925, %r1931, %r1031;
	// end inline asm
	shl.b32 	%r1945, %r1938, 4;
	// begin inline asm
	lop3.b32 %r1942, %r1037, %r1934, %r1945, 202;
	// end inline asm
	st.shared.u32 	[%rd150], %r1942;
	add.s32 	%r2418, %r30, %r2401;
	add.s32 	%r2419, %r2418, %r2403;
	add.s32 	%r2420, %r2419, %r2405;
	add.s32 	%r2421, %r2420, %r26;
	mul.wide.u32 	%rd94, %r2421, 4;
	add.s64 	%rd95, %rd46, %rd94;
	ld.shared.u32 	%r2544, [%rd95];
	// begin inline asm
	mov.b32 %r1951, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1950, %r2544, -2004318072;
	// begin inline asm
	lop3.b32 %r1948, %r590, %r1950, %r1951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1952, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1951, %r1952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1956, %r1948, %r1953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1959, %r601, %r1950, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1963, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1964, %r1962, %r1963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1967, %r1959, %r1964;
	// end inline asm
	shr.u32 	%r1972, %r1950, 8;
	// begin inline asm
	lop3.b32 %r1970, %r590, %r1972, %r1951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1975, %r1951, %r1974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1978, %r1970, %r1975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1981, %r601, %r1972, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1986, %r1962, %r1985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1989, %r1981, %r1986;
	// end inline asm
	// begin inline asm
	mov.b32 %r1997, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r2008, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1996, %r2536, -2004318072;
	// begin inline asm
	lop3.b32 %r1994, %r590, %r1996, %r1997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1998, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1997, %r1998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2002, %r1994, %r1999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2005, %r601, %r1996, %r2008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2009, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2010, %r2008, %r2009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2013, %r2005, %r2010;
	// end inline asm
	shr.u32 	%r2018, %r1996, 8;
	// begin inline asm
	lop3.b32 %r2016, %r590, %r2018, %r1997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2020, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2021, %r1997, %r2020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2024, %r2016, %r2021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2027, %r601, %r2018, %r2008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2031, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2032, %r2008, %r2031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2035, %r2027, %r2032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2040, %r165, %r2002, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2046, %r165, %r2013, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2052, %r165, %r2024, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2058, %r165, %r2035, %r2517;
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r2066, %r2522, -2004318072;
	// begin inline asm
	lop3.b32 %r2064, %r590, %r2066, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2067, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2075, %r601, %r2066, %r2078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2080, %r2078, %r2079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2083, %r2075, %r2080;
	// end inline asm
	shr.u32 	%r2088, %r2066, 8;
	// begin inline asm
	lop3.b32 %r2086, %r590, %r2088, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2091, %r2067, %r2090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2094, %r2086, %r2091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2097, %r601, %r2088, %r2078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2102, %r2078, %r2101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2105, %r2097, %r2102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2108, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2110, %r2108, %r2072, %r2040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2114, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2116, %r2114, %r2083, %r2046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2120, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2122, %r2120, %r2094, %r2052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2126, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2128, %r2126, %r2105, %r2058;
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r2136, %r2526, -2004318072;
	// begin inline asm
	lop3.b32 %r2134, %r590, %r2136, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2139, %r2137, %r2138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2142, %r2134, %r2139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2145, %r601, %r2136, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2150, %r2148, %r2149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2153, %r2145, %r2150;
	// end inline asm
	shr.u32 	%r2158, %r2136, 8;
	// begin inline asm
	lop3.b32 %r2156, %r590, %r2158, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2137, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2167, %r601, %r2158, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2148, %r2171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2175, %r2167, %r2172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2180, %r227, %r2142, %r2110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2186, %r227, %r2153, %r2116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2192, %r227, %r2164, %r2122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2198, %r227, %r2175, %r2128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2202, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2233, %r2202, %r1956, %r2180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2208, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2230, %r2208, %r1967, %r2186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2214, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2242, %r2214, %r1978, %r2192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2220, %r258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2239, %r2220, %r1989, %r2198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2226, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2228, %r2226, %r2230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2231, %r261, %r2233, %r2228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2235, %r264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2237, %r2235, %r2239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2240, %r261, %r2242, %r2237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2244, %r264, %r2233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2247, %r261, %r2230, %r2244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2251, %r264, %r2242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2254, %r261, %r2239, %r2251;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2285, %r2282}, {%r267, %r273, %r270, %r276}, {%r2231, %r2247}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2294, %r2291}, {%r267, %r273, %r270, %r276}, {%r2240, %r2254}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2280, %r2278, %r2282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2283, %r279, %r2285, %r2280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2287, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2289, %r2287, %r2291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r279, %r2294, %r2289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2296, %r282, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r279, %r2282, %r2296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2303, %r282, %r2294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2306, %r279, %r2291, %r2303;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2310, %r2311}, {%r285, %r291, %r288, %r294}, {%r2283, %r2299}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2320, %r2321}, {%r285, %r291, %r288, %r294}, {%r2292, %r2306}, {%r2517, %r2517};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2330, %r76, %r2310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2333, %r76, %r2311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2336, %r76, %r2320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2339, %r76, %r2321;
	// end inline asm
	// begin inline asm
	mov.b32 %r2342, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2344, %r2330, %r2342;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2347, %r2344, %r2343;
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2352, %r2333, %r2350;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2355, %r2352, %r2351;
	// end inline asm
	// begin inline asm
	mov.b32 %r2358, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2359, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2360, %r2336, %r2358;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2363, %r2360, %r2359;
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2367, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2368, %r2339, %r2366;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2371, %r2368, %r2367;
	// end inline asm
	// begin inline asm
	mov.b32 %r2377, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2375, %r2347, %r2377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2355, %r2377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2381, %r2363, %r2377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2384, %r2371, %r2377;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2387, %r2375, %r2381, %r1031;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2391, %r2378, %r2384, %r1031;
	// end inline asm
	shl.b32 	%r2398, %r2391, 4;
	// begin inline asm
	lop3.b32 %r2395, %r1037, %r2387, %r2398, 202;
	// end inline asm
	st.shared.u32 	[%rd151], %r2395;
	add.s32 	%r2545, %r2545, 64;
	add.s64 	%rd151, %rd151, 8324;
	add.s64 	%rd150, %rd150, 8324;
	add.s64 	%rd149, %rd149, 8324;
	add.s64 	%rd148, %rd148, 8324;
	add.s32 	%r2532, %r2532, 1;
	setp.eq.s32 	%p166, %r2545, 256;
	mov.u32 	%r2533, %r2519;
	mov.u32 	%r2534, %r2520;
	mov.u32 	%r2535, %r2521;
	mov.u32 	%r2536, %r2522;
	mov.u32 	%r2537, %r2523;
	mov.u32 	%r2538, %r2524;
	mov.u32 	%r2539, %r2525;
	mov.u32 	%r2540, %r2526;
	@%p166 bra 	$L__BB0_33;
	bra.uni 	$L__BB0_32;
$L__BB0_33:                             // %guard_exit10925
                                        //   in Loop: Header=BB0_31 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r2427, [%rd6];
	ld.shared.u32 	%r2428, [%rd7+128];
	ld.shared.u32 	%r2435, [%rd7+4];
	ld.shared.u32 	%r2436, [%rd7+132];
	ld.shared.u32 	%r2443, [%rd6+8324];
	ld.shared.u32 	%r2444, [%rd7+8452];
	ld.shared.u32 	%r2451, [%rd7+8328];
	ld.shared.u32 	%r2452, [%rd7+8456];
	ld.shared.u32 	%r2459, [%rd6+16648];
	ld.shared.u32 	%r2460, [%rd7+16776];
	ld.shared.u32 	%r2467, [%rd7+16652];
	ld.shared.u32 	%r2468, [%rd7+16780];
	ld.shared.u32 	%r2475, [%rd6+24972];
	ld.shared.u32 	%r2476, [%rd7+25100];
	ld.shared.u32 	%r2483, [%rd7+24976];
	ld.shared.u32 	%r2484, [%rd7+25104];
	// begin inline asm
	prmt.b32 %r2422, %r2427, %r2428, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2426, %r2427, %r2428, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2430, %r2435, %r2436, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2434, %r2435, %r2436, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2438, %r2443, %r2444, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2442, %r2443, %r2444, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2446, %r2451, %r2452, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2450, %r2451, %r2452, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2454, %r2459, %r2460, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2458, %r2459, %r2460, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2462, %r2467, %r2468, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2466, %r2467, %r2468, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2470, %r2475, %r2476, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2474, %r2475, %r2476, %r505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2478, %r2483, %r2484, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2482, %r2483, %r2484, %r505;
	// end inline asm
	selp.b32 	%r2486, %r2426, %r2422, %p153;
	shfl.sync.bfly.b32	%r91, %r2486, 8, 31, -1;
	selp.b32 	%r2487, %r2434, %r2430, %p153;
	shfl.sync.bfly.b32	%r92, %r2487, 8, 31, -1;
	selp.b32 	%r2488, %r2442, %r2438, %p153;
	shfl.sync.bfly.b32	%r2489, %r2488, 8, 31, -1;
	selp.b32 	%r2490, %r2450, %r2446, %p153;
	shfl.sync.bfly.b32	%r2491, %r2490, 8, 31, -1;
	selp.b32 	%r2492, %r2458, %r2454, %p153;
	shfl.sync.bfly.b32	%r2493, %r2492, 8, 31, -1;
	selp.b32 	%r2494, %r2466, %r2462, %p153;
	shfl.sync.bfly.b32	%r2495, %r2494, 8, 31, -1;
	selp.b32 	%r2496, %r2474, %r2470, %p153;
	shfl.sync.bfly.b32	%r2497, %r2496, 8, 31, -1;
	selp.b32 	%r2498, %r2482, %r2478, %p153;
	shfl.sync.bfly.b32	%r2499, %r2498, 8, 31, -1;
	setp.eq.s32 	%p168, %r44, 0;
	shl.b32 	%r2518, %r43, 10;
	@%p168 bra 	$L__BB0_35;
// %bb.34:                              // %pass10100
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r2500, %r92, %r2434, %p153;
	selp.b32 	%r2501, %r2430, %r92, %p153;
	selp.b32 	%r2502, %r91, %r2426, %p153;
	selp.b32 	%r2503, %r2422, %r91, %p153;
	or.b32  	%r2505, %r25, %r2518;
	cvt.s64.s32 	%rd96, %r2505;
	add.s64 	%rd97, %rd96, %rd8;
	shr.u64 	%rd98, %rd97, 39;
	add.s64 	%rd99, %rd97, %rd98;
	shr.s64 	%rd100, %rd99, 25;
	setp.lt.s64 	%p170, %rd97, 0;
	and.b64  	%rd101, %rd99, -33554432;
	setp.ne.s64 	%p171, %rd101, %rd97;
	and.pred  	%p172, %p170, %p171;
	selp.u64 	%rd102, 1, 0, %p172;
	sub.s64 	%rd103, %rd102, %rd100;
	shl.b64 	%rd104, %rd103, 25;
	add.s64 	%rd105, %rd104, %rd97;
	shl.b64 	%rd106, %rd105, 2;
	add.s64 	%rd107, %rd3, %rd106;
	st.global.v4.u32 	[%rd107], {%r2503, %r2501, %r2502, %r2500};
$L__BB0_35:                             // %pass10113
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r85, %r43, 64;
	setp.lt.u32 	%p173, %r85, 192;
	@%p173 bra 	$L__BB0_37;
// %bb.36:                              // %pass10207
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r93, %r2438, %r2489, %p153;
	selp.b32 	%r94, %r2489, %r2442, %p153;
	selp.b32 	%r95, %r2446, %r2491, %p153;
	selp.b32 	%r96, %r2491, %r2450, %p153;
	shl.b32 	%r2506, %r85, 10;
	or.b32  	%r2507, %r25, %r2506;
	cvt.s64.s32 	%rd108, %r2507;
	add.s64 	%rd109, %rd108, %rd8;
	shr.u64 	%rd110, %rd109, 39;
	add.s64 	%rd111, %rd109, %rd110;
	shr.s64 	%rd112, %rd111, 25;
	setp.lt.s64 	%p174, %rd109, 0;
	and.b64  	%rd113, %rd111, -33554432;
	setp.ne.s64 	%p175, %rd113, %rd109;
	and.pred  	%p176, %p174, %p175;
	selp.u64 	%rd114, 1, 0, %p176;
	sub.s64 	%rd115, %rd114, %rd112;
	shl.b64 	%rd116, %rd115, 25;
	add.s64 	%rd117, %rd116, %rd109;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd119, %rd3, %rd118;
	st.global.v4.u32 	[%rd119], {%r93, %r95, %r94, %r96};
$L__BB0_37:                             // %pass10220
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r86, %r43, 128;
	selp.b32 	%r101, %r2470, %r2497, %p153;
	selp.b32 	%r102, %r2497, %r2474, %p153;
	selp.b32 	%r103, %r2478, %r2499, %p153;
	selp.b32 	%r104, %r2499, %r2482, %p153;
	setp.lt.u32 	%p177, %r86, 192;
	@%p177 bra 	$L__BB0_39;
// %bb.38:                              // %pass10314
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r97, %r2454, %r2493, %p153;
	selp.b32 	%r98, %r2493, %r2458, %p153;
	selp.b32 	%r99, %r2462, %r2495, %p153;
	selp.b32 	%r100, %r2495, %r2466, %p153;
	shl.b32 	%r2508, %r86, 10;
	or.b32  	%r2509, %r25, %r2508;
	cvt.s64.s32 	%rd120, %r2509;
	add.s64 	%rd121, %rd120, %rd8;
	shr.u64 	%rd122, %rd121, 39;
	add.s64 	%rd123, %rd121, %rd122;
	shr.s64 	%rd124, %rd123, 25;
	setp.lt.s64 	%p178, %rd121, 0;
	and.b64  	%rd125, %rd123, -33554432;
	setp.ne.s64 	%p179, %rd125, %rd121;
	and.pred  	%p180, %p178, %p179;
	selp.u64 	%rd126, 1, 0, %p180;
	sub.s64 	%rd127, %rd126, %rd124;
	shl.b64 	%rd128, %rd127, 25;
	add.s64 	%rd129, %rd128, %rd121;
	shl.b64 	%rd130, %rd129, 2;
	add.s64 	%rd131, %rd3, %rd130;
	st.global.v4.u32 	[%rd131], {%r97, %r99, %r98, %r100};
	bra.uni 	$L__BB0_39;
$L__BB0_40:                             // %L23132
	st.global.u32 	[%rd5], %r2517;
	ret;
$L__BB0_9:                              // %L180
	mov.u32 	%r2516, 2;
	st.global.u32 	[%rd5], %r2516;
	mov.u64 	%rd146, exception2065;
	cvta.global.u64 	%rd147, %rd146;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd147;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r105;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_12:                             // %L288
	mov.u32 	%r2515, 3;
	st.global.u32 	[%rd5], %r2515;
	mov.u64 	%rd144, exception2065;
	cvta.global.u64 	%rd145, %rd144;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd145;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r105;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd38, exception1;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r105;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd40, exception1;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r105;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
